/**
 * ------------------------ Auto-generated Code ------------------------ 
 *           This code was generated by the Insieme Compiler 
 * --------------------------------------------------------------------- 
 */
#include <algorithm>
#include <alloca.h>
#include <allscale/api/core/data.h>
#include <allscale/api/core/io.h>
#include <allscale/api/user/data/adaptive_grid.h>
#include <allscale/runtime.hpp>
#include <allscale/utils/serializer.h>
#include <allscale/utils/vector.h>
#include <assert.h>
#include <cassert>
#include <chrono>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <random>
#include <stdbool.h>
#include <stdint.h>
#include <utility>
#include <vector>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

/* ------- Program Code --------- */

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

struct __wi_main_can_split;
typedef struct __wi_main_can_split __wi_main_can_split;

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1, __wi_main_can_split >;

/* ------- Function Definitions --------- */
int32_t main(int32_t var_0, char** var_1) {
    return allscale::runtime::main_wrapper<__wi_main_work >(var_0, var_1);
}

ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
struct IMP_MyLogger;
typedef struct IMP_MyLogger IMP_MyLogger;

typedef enum MyLoggerLoggingType { MyLoggerLoggingTypeMY_LOGGING_INFO=0, MyLoggerLoggingTypeMY_LOGGING_WARNING=1, MyLoggerLoggingTypeMY_LOGGING_ERROR=2 } MyLoggerLoggingType;
struct IMP_MyLogger {
    IMP_MyLogger(IMP_MyLogger const& p2) = default;
    IMP_MyLogger(MyLoggerLoggingType p2);
    IMP_MyLogger() = default;
    ~IMP_MyLogger();
    IMP_MyLogger& operator=(IMP_MyLogger const& p2) = default;
    IMP_MyLogger& operator<<(const char* p2);
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_MyLogger& operator=(IMP_MyLogger&& p2) = default;
    static IMP_MyLogger load(allscale::utils::ArchiveReader& var_0);
    IMP_MyLogger& allscale_fun_243(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& p2);
    IMP_MyLogger& allscale_fun_421(int32_t const& p2);
    IMP_MyLogger& allscale_fun_423(double const& p2);
};

struct allscale_type_24;
typedef struct allscale_type_24 allscale_type_24;

template<typename T>
struct is_allscale_fixed_sized_array : public std::false_type {};

template<typename T>
struct to_std_array_type;

namespace allscale {
    namespace utils {
        template<typename T>
        struct serializer<T,typename std::enable_if<is_allscale_fixed_sized_array<T>::value,void>::type> {
            using array_t = typename to_std_array_type<T>::type;
            static T load(ArchiveReader& a) {
                return *reinterpret_cast<T*>(&serializer<array_t>::load(a)[0]);
            }
            static void store(ArchiveWriter& a, const T& value) {
                serializer<array_t>::store(a,reinterpret_cast<const array_t&>(value));
            }
        };
    }
}

struct allscale_type_24 {
    char data[36];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_24> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_24> { using type = std::array<char,36u>; };

struct allscale_type_428;
typedef struct allscale_type_428 allscale_type_428;

struct allscale_type_428 {
    char data[10];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_428> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_428> { using type = std::array<char,10u>; };

struct allscale_type_36;
typedef struct allscale_type_36 allscale_type_36;

struct allscale_type_36 {
    char data[46];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_36> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_36> { using type = std::array<char,46u>; };

struct allscale_type_137;
typedef struct allscale_type_137 allscale_type_137;

struct allscale_type_137 {
    char data[21];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_137> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_137> { using type = std::array<char,21u>; };

typedef enum __anon_tagtype_rootworkallscale_amdadoscodeappincludeamdadosappgeometryh_27_1_IMLOC_rootworkallscale_amdadoscodeappincludeamdadosappgeometryh_27_1 { amdadosLayerFine=0, amdadosLayerLow=1 } __anon_tagtype_rootworkallscale_amdadoscodeappincludeamdadosappgeometryh_27_1_IMLOC_rootworkallscale_amdadoscodeappincludeamdadosappgeometryh_27_1;
struct allscale_type_426;
typedef struct allscale_type_426 allscale_type_426;

struct allscale_type_426 {
    char data[19];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_426> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_426> { using type = std::array<char,19u>; };

struct IMP_amdados_colon__colon_Configuration;
typedef struct IMP_amdados_colon__colon_Configuration IMP_amdados_colon__colon_Configuration;

typedef enum amdadosConfigurationParamType { amdadosConfigurationParamTypeUNKNOWN_T=0, amdadosConfigurationParamTypeNUMERIC_T=1, amdadosConfigurationParamTypeSTRING_T=2 } amdadosConfigurationParamType;
struct IMP_amdados_colon__colon_Configuration_colon__colon_Parameter;
typedef struct IMP_amdados_colon__colon_Configuration_colon__colon_Parameter IMP_amdados_colon__colon_Configuration_colon__colon_Parameter;

struct DummyCtorParamType;
typedef struct DummyCtorParamType DummyCtorParamType;

struct IMP_amdados_colon__colon_Configuration_colon__colon_Parameter {
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > name;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > svalue;
    double dvalue;
    amdadosConfigurationParamType type;;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter();
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& p2) = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter&& p2) = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& p2, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& p3, double&& p4, amdadosConfigurationParamType&& p5, DummyCtorParamType p6);
    ~IMP_amdados_colon__colon_Configuration_colon__colon_Parameter() = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& operator=(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& p2) = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& operator=(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Configuration_colon__colon_Parameter load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_Configuration {
    std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > m_params;;
    IMP_amdados_colon__colon_Configuration();
    IMP_amdados_colon__colon_Configuration(IMP_amdados_colon__colon_Configuration const& p2) = default;
    IMP_amdados_colon__colon_Configuration(IMP_amdados_colon__colon_Configuration&& p2) = default;
    IMP_amdados_colon__colon_Configuration(std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > >&& p2, DummyCtorParamType p3);
    ~IMP_amdados_colon__colon_Configuration() = default;
    void CheckExist(bool p2, const char* p3) const;
    void CheckIntRange(double p2) const;
    void CheckType(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& p2, amdadosConfigurationParamType p3) const;
    bool IsExist(const char* p2) const;
    bool IsInteger(const char* p2) const;
    int32_t IMP_asInt(const char* p2) const;
    double IMP_asDouble(const char* p2) const;
    void PrintParameters() const;
    void ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& p2);
    void IMP_SetDouble(const char* p2, double p3);
    void IMP_SetString(const char* p2, const char* p3);
    void SetInt(const char* p2, int32_t p3);
    IMP_amdados_colon__colon_Configuration& operator=(IMP_amdados_colon__colon_Configuration const& p2) = default;
    IMP_amdados_colon__colon_Configuration& operator=(IMP_amdados_colon__colon_Configuration&& p2) = default;
    const char* asCString(const char* p2) const;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& asString(const char* p2) const;
    uint64_t asUInt(const char* p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Configuration load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_121;
typedef struct allscale_type_121 allscale_type_121;

struct allscale_type_121 {
    char data[15];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_121> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_121> { using type = std::array<char,15u>; };

struct allscale_type_455;
typedef struct allscale_type_455 allscale_type_455;

struct allscale_type_455 {
    char data[102];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_455> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_455> { using type = std::array<char,102u>; };

struct allscale_type_453;
typedef struct allscale_type_453 allscale_type_453;

struct allscale_type_453 {
    char data[113];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_453> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_453> { using type = std::array<char,113u>; };

struct allscale_type_454;
typedef struct allscale_type_454 allscale_type_454;

struct allscale_type_454 {
    char data[18];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_454> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_454> { using type = std::array<char,18u>; };

struct allscale_type_225;
typedef struct allscale_type_225 allscale_type_225;

struct allscale_type_225 {
    char data[17];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_225> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_225> { using type = std::array<char,17u>; };

struct allscale_type_444;
typedef struct allscale_type_444 allscale_type_444;

struct allscale_type_444 {
    char data[145];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_444> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_444> { using type = std::array<char,145u>; };

struct allscale_type_445;
typedef struct allscale_type_445 allscale_type_445;

struct allscale_type_445 {
    char data[115];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_445> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_445> { using type = std::array<char,115u>; };

struct allscale_type_129;
typedef struct allscale_type_129 allscale_type_129;

struct allscale_type_129 {
    char data[12];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_129> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_129> { using type = std::array<char,12u>; };

/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_amdados_colon__colon_GetGridSize(IMP_amdados_colon__colon_Configuration const& var_0) {
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{(int64_t)var_0.IMP_asInt("num_subdomains_x"), (int64_t)var_0.IMP_asInt("num_subdomains_y")};
}
struct allscale_type_446;
typedef struct allscale_type_446 allscale_type_446;

struct allscale_type_446 {
    char data[127];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_446> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_446> { using type = std::array<char,127u>; };

struct allscale_type_447;
typedef struct allscale_type_447 allscale_type_447;

struct allscale_type_447 {
    char data[122];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_447> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_447> { using type = std::array<char,122u>; };

struct allscale_type_448;
typedef struct allscale_type_448 allscale_type_448;

struct allscale_type_448 {
    char data[129];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_448> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_448> { using type = std::array<char,129u>; };

struct allscale_type_449;
typedef struct allscale_type_449 allscale_type_449;

struct allscale_type_449 {
    char data[124];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_449> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_449> { using type = std::array<char,124u>; };

struct allscale_type_451;
typedef struct allscale_type_451 allscale_type_451;

struct allscale_type_451 {
    char data[20];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_451> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_451> { using type = std::array<char,20u>; };

struct allscale_type_450;
typedef struct allscale_type_450 allscale_type_450;

struct allscale_type_450 {
    char data[100];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_450> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_450> { using type = std::array<char,100u>; };

struct allscale_type_452;
typedef struct allscale_type_452 allscale_type_452;

struct allscale_type_452 {
    char data[14];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_452> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_452> { using type = std::array<char,14u>; };

struct allscale_type_178;
typedef struct allscale_type_178 allscale_type_178;

struct allscale_type_178 {
    char data[31];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_178> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_178> { using type = std::array<char,31u>; };

struct allscale_type_14;
typedef struct allscale_type_14 allscale_type_14;

struct allscale_type_14 {
    char data[3];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_14> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_14> { using type = std::array<char,3u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_InitDependentParams(IMP_amdados_colon__colon_Configuration& var_0) {
    allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > var_1;
    var_1.setActiveLayer((uint32_t)amdadosLayerFine);
    const allscale::utils::Vector<long, 2 > var_2 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_1.getActiveLayerSize()};
    const int64_t var_3 = var_2.x;
    const int64_t var_4 = var_2.y;
    var_1.setActiveLayer((uint32_t)amdadosLayerLow);
    const allscale::utils::Vector<long, 2 > var_5 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_1.getActiveLayerSize()};
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.x * var_5.y == var_2.y * var_5.x};
    if (var_6) {
        std::cerr << "\nAssertion fine_size.x * low_size.y == fine_size.y * low_size.x of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:862 failed!\n";
    };
    var_0.IMP_SetDouble("resolution_ratio", (double)var_2.x / (double)var_5.x);
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3 >= (int64_t)3 && var_4 >= (int64_t)3};
    if (var_7) {
        std::cerr << "\nAssertion (Sx >= 3) && (Sy >= 3) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:871 failed!\n" << "subdomain must be at least 3x3";
    };
    insieme::utils::detail::LazyAssertion var_8 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsInteger("num_subdomains_x")};
    if (var_8) {
        std::cerr << "\nAssertion conf.IsInteger(\"num_subdomains_x\") of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:874 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_9 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsInteger("num_subdomains_y")};
    if (var_9) {
        std::cerr << "\nAssertion conf.IsInteger(\"num_subdomains_y\") of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:875 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_10 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsInteger("subdomain_x")};
    if (var_10) {
        std::cerr << "\nAssertion conf.IsInteger(\"subdomain_x\") of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:876 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_11 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsInteger("subdomain_y")};
    if (var_11) {
        std::cerr << "\nAssertion conf.IsInteger(\"subdomain_y\") of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:877 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_12 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsInteger("integration_nsteps")};
    if (var_12) {
        std::cerr << "\nAssertion conf.IsInteger(\"integration_nsteps\") of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:878 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_13 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)var_0.IMP_asInt("subdomain_x") == var_3};
    if (var_13) {
        std::cerr << "\nAssertion conf.asInt(\"subdomain_x\") == Sx of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:881 failed!\n" << "subdomain_x mismatch" << &std::endl;
    };
    insieme::utils::detail::LazyAssertion var_14 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)var_0.IMP_asInt("subdomain_y") == var_4};
    if (var_14) {
        std::cerr << "\nAssertion conf.asInt(\"subdomain_y\") == Sy of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:883 failed!\n" << "subdomain_y mismatch" << &std::endl;
    };
    const allscale::utils::Vector<long, 2 > var_15 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const int64_t var_16 = var_15.x * var_3;
    const int64_t var_17 = var_15.y * var_4;
    const double var_18 = var_0.IMP_asDouble("diffusion_coef");
    insieme::utils::detail::LazyAssertion var_19 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_18 > 0.0E+0};
    if (var_19) {
        std::cerr << "\nAssertion D > 0.0 of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:891 failed!\n";
    };
    var_0.SetInt("global_problem_size", (int32_t)(var_16 * var_17));
    const double var_20 = var_0.IMP_asDouble("domain_size_x") / (double)(var_16 - (int64_t)1);
    const double var_21 = var_0.IMP_asDouble("domain_size_y") / (double)(var_17 - (int64_t)1);
    insieme::utils::detail::LazyAssertion var_22 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_20 > (double)0 && var_21 > (double)0};
    if (var_22) {
        std::cerr << "\nAssertion (dx > 0) && (dy > 0) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:896 failed!\n";
    };
    var_0.IMP_SetDouble("dx", var_20);
    var_0.IMP_SetDouble("dy", var_21);
    const double var_23 = var_0.IMP_asDouble("integration_period") / var_0.IMP_asDouble("integration_nsteps");
    const double var_24 = var_0.IMP_asDouble("flow_model_max_vx");
    const double var_25 = var_0.IMP_asDouble("flow_model_max_vy");
    const double var_26 = std::min(var_23, std::min(std::min(var_20 * var_20, var_21 * var_21) / (2.0E+0 * var_18 + std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3)), 1.0E+0 / (fabs(var_24) / var_20 + fabs(var_25) / var_21 + std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3))));
    insieme::utils::detail::LazyAssertion var_27 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_26 > std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3)};
    if (var_27) {
        std::cerr << "\nAssertion dt > TINY of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:909 failed!\n";
    };
    var_0.IMP_SetDouble("dt", var_26);
    var_0.SetInt("Nt", (int32_t)ceil(var_0.IMP_asDouble("integration_period") / var_26));
}
struct allscale_type_25;
typedef struct allscale_type_25 allscale_type_25;

struct allscale_type_25 {
    char data[6];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_25> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_25> { using type = std::array<char,6u>; };

struct allscale_type_122;
typedef struct allscale_type_122 allscale_type_122;

struct allscale_type_122 {
    char data[2];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_122> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_122> { using type = std::array<char,2u>; };

using data_item_type_1 = allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_1)
REGISTER_DATAITEMSERVER(data_item_type_1)
struct IMP_amdados_colon__colon_Vector;
typedef struct IMP_amdados_colon__colon_Vector IMP_amdados_colon__colon_Vector;

struct IMP_amdados_colon__colon_Vector {
    std::vector<double, std::allocator<double > > m_data;;
    IMP_amdados_colon__colon_Vector();
    IMP_amdados_colon__colon_Vector(int64_t p2);
    IMP_amdados_colon__colon_Vector(IMP_amdados_colon__colon_Vector const& p2) = default;
    IMP_amdados_colon__colon_Vector(IMP_amdados_colon__colon_Vector&& p2);
    IMP_amdados_colon__colon_Vector(std::vector<double, std::allocator<double > >&& p2, DummyCtorParamType p3);
    ~IMP_amdados_colon__colon_Vector() = default;
    void Clear();
    bool Empty() const;
    bool IsDistinct(IMP_amdados_colon__colon_Vector const& p2) const;
    void Resize(int64_t p2, bool p3);
    bool SameSize(IMP_amdados_colon__colon_Vector const& p2) const;
    int64_t Size() const;
    IMP_amdados_colon__colon_Vector& operator=(IMP_amdados_colon__colon_Vector const& p2);
    double& operator()(int64_t p2);
    double const& operator()(int64_t p2) const;
    double* begin();
    const double* begin() const;
    double* end();
    const double* end() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_amdados_colon__colon_Vector& operator=(IMP_amdados_colon__colon_Vector&& p2) = default;
    static IMP_amdados_colon__colon_Vector load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_Matrix;
typedef struct IMP_amdados_colon__colon_Matrix IMP_amdados_colon__colon_Matrix;

struct IMP_amdados_colon__colon_Matrix : public IMP_amdados_colon__colon_Vector {
    int64_t m_nrows;
    int64_t m_ncols;;
    IMP_amdados_colon__colon_Matrix();
    IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix const& p2);
    IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix&& p2);
    IMP_amdados_colon__colon_Matrix(int64_t p2, int64_t p3);
    ~IMP_amdados_colon__colon_Matrix() = default;
    void Clear();
    bool IsSquare() const;
    int64_t NCols() const;
    int64_t NRows() const;
    void Resize(int64_t p2, int64_t p3, bool p4);
    bool SameSize(IMP_amdados_colon__colon_Matrix const& p2) const;
    bool SameSizeTr(IMP_amdados_colon__colon_Matrix const& p2) const;
    int64_t Size() const;
    IMP_amdados_colon__colon_Matrix& operator=(IMP_amdados_colon__colon_Matrix const& p2);
    double& operator()(int64_t p2, int64_t p3);
    double const& operator()(int64_t p2, int64_t p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    void swap(IMP_amdados_colon__colon_Matrix& p2);
    static IMP_amdados_colon__colon_Matrix load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_233;
typedef struct allscale_type_233 allscale_type_233;

struct allscale_type_233 {
    char data[16];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_233> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_233> { using type = std::array<char,16u>; };

struct allscale_type_1119;
typedef struct allscale_type_1119 allscale_type_1119;

struct allscale_type_1119 {
    char data[34];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1119> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1119> { using type = std::array<char,34u>; };

struct allscale_type_241;
typedef struct allscale_type_241 allscale_type_241;

struct allscale_type_241 {
    char data[87];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_241> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_241> { using type = std::array<char,87u>; };

struct allscale_type_240;
typedef struct allscale_type_240 allscale_type_240;

struct allscale_type_240 {
    char data[5];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_240> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_240> { using type = std::array<char,5u>; };

struct allscale_type_246;
typedef struct allscale_type_246 allscale_type_246;

struct allscale_type_246 {
    char data[1];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_246> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_246> { using type = std::array<char,1u>; };

struct allscale_type_242;
typedef struct allscale_type_242 allscale_type_242;

struct allscale_type_242 {
    char data[40];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_242> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_242> { using type = std::array<char,40u>; };

struct allscale_type_7;
typedef struct allscale_type_7 allscale_type_7;

struct allscale_type_7 {
    char data[11];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_7> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_7> { using type = std::array<char,11u>; };

struct allscale_type_37;
typedef struct allscale_type_37 allscale_type_37;

struct allscale_type_37 {
    char data[8];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_37> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_37> { using type = std::array<char,8u>; };

struct allscale_type_13;
typedef struct allscale_type_13 allscale_type_13;

struct allscale_type_13 {
    char data[9];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_13> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_13> { using type = std::array<char,9u>; };

struct allscale_type_183;
typedef struct allscale_type_183 allscale_type_183;

struct allscale_type_183 {
    char data[4];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_183> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_183> { using type = std::array<char,4u>; };

/* ------- Function Definitions --------- */
std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > IMP_amdados_colon__colon_MakeFileName(IMP_amdados_colon__colon_Configuration const& var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_1) {
    int32_t var_2 = var_0.IMP_asInt("num_subdomains_x") * var_0.IMP_asInt("subdomain_x");
    int32_t var_3 = var_0.IMP_asInt("num_subdomains_y") * var_0.IMP_asInt("subdomain_y");
    std::__cxx11::basic_stringstream<char, std::char_traits<char >, std::allocator<char > > var_4{(std::ios_base::out | std::ios_base::in)};
    *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << var_0.asString("output_dir") << (char)'/' << var_1 << "_Nx" << var_2 << "_Ny" << var_3;
    if (var_1 == "sensors") {
        *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << ".txt";
    } else {
        if (var_1 == "analytic") {
            *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << "_Nt" << var_0.IMP_asInt("Nt") << ".txt";
        } else {
            if (var_1 == "field") {
                *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << "_Nt" << var_0.IMP_asInt("Nt") << ".bin";
            } else {
                if (var_1 == "final_field") {
                    *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << "_Nt" << var_0.IMP_asInt("Nt") << ".txt";
                } else {
                    insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
                    if (var_5) {
                        std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/src/amdados_utils.cpp:88 failed!\n" << "unknown entity to make a file name from";
                    };
                };
            };
        };
    };
    IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_INFO}.operator<<(var_1 == "field" ? "\n" : "").operator<<("File name: ").allscale_fun_243(var_4.str());
    return (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)var_4.str();
}
using data_item_type_4 = allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_4)
REGISTER_DATAITEMSERVER(data_item_type_4)
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 {
    ;
    ;
    bool operator()(int64_t p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_Cholesky;
typedef struct IMP_amdados_colon__colon_Cholesky IMP_amdados_colon__colon_Cholesky;

struct IMP_amdados_colon__colon_Cholesky {
    IMP_amdados_colon__colon_Matrix m_L;;
    IMP_amdados_colon__colon_Cholesky();
    IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Cholesky const& p2) = default;
    IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Cholesky&& p2) = default;
    IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Matrix&& p2, DummyCtorParamType p3);
    ~IMP_amdados_colon__colon_Cholesky() = default;
    void BatchSolve(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void BatchSolveTr(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void Init(IMP_amdados_colon__colon_Matrix const& p2);
    void Solve(IMP_amdados_colon__colon_Vector& p2, IMP_amdados_colon__colon_Vector const& p3) const;
    IMP_amdados_colon__colon_Cholesky& operator=(IMP_amdados_colon__colon_Cholesky const& p2) = default;
    IMP_amdados_colon__colon_Cholesky& operator=(IMP_amdados_colon__colon_Cholesky&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Cholesky load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_LUdecomposition;
typedef struct IMP_amdados_colon__colon_LUdecomposition IMP_amdados_colon__colon_LUdecomposition;

struct IMP_amdados_colon__colon_LUdecomposition {
    IMP_amdados_colon__colon_Matrix m_LU;
    std::vector<int64_t, std::allocator<int64_t > > m_Perm;;
    IMP_amdados_colon__colon_LUdecomposition();
    IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_LUdecomposition const& p2) = default;
    IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_LUdecomposition&& p2) = default;
    IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_Matrix&& p2, std::vector<int64_t, std::allocator<int64_t > >&& p3, DummyCtorParamType p4);
    ~IMP_amdados_colon__colon_LUdecomposition() = default;
    void BatchSolve(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void BatchSolveTr(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void Init(IMP_amdados_colon__colon_Matrix const& p2);
    void Solve(IMP_amdados_colon__colon_Vector& p2, IMP_amdados_colon__colon_Vector const& p3) const;
    IMP_amdados_colon__colon_LUdecomposition& operator=(IMP_amdados_colon__colon_LUdecomposition const& p2) = default;
    IMP_amdados_colon__colon_LUdecomposition& operator=(IMP_amdados_colon__colon_LUdecomposition&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_LUdecomposition load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_KalmanFilter;
typedef struct IMP_amdados_colon__colon_KalmanFilter IMP_amdados_colon__colon_KalmanFilter;

struct IMP_amdados_colon__colon_KalmanFilter {
    IMP_amdados_colon__colon_Cholesky m_chol;
    IMP_amdados_colon__colon_LUdecomposition m_lu;
    IMP_amdados_colon__colon_Vector m_x_tmp;
    IMP_amdados_colon__colon_Vector m_y;
    IMP_amdados_colon__colon_Vector m_invSy;
    IMP_amdados_colon__colon_Matrix m_S;
    IMP_amdados_colon__colon_Matrix m_P_tmp;
    IMP_amdados_colon__colon_Matrix m_PHt;
    IMP_amdados_colon__colon_Matrix m_HP;
    IMP_amdados_colon__colon_Matrix m_invSHP;;
    IMP_amdados_colon__colon_KalmanFilter();
    IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_KalmanFilter const& p2) = default;
    IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_KalmanFilter&& p2) = default;
    IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_Cholesky&& p2, IMP_amdados_colon__colon_LUdecomposition&& p3, IMP_amdados_colon__colon_Vector&& p4, IMP_amdados_colon__colon_Vector&& p5, IMP_amdados_colon__colon_Vector&& p6, IMP_amdados_colon__colon_Matrix&& p7, IMP_amdados_colon__colon_Matrix&& p8, IMP_amdados_colon__colon_Matrix&& p9, IMP_amdados_colon__colon_Matrix&& p10, IMP_amdados_colon__colon_Matrix&& p11, DummyCtorParamType p12);
    ~IMP_amdados_colon__colon_KalmanFilter() = default;
    void PropagateStateInverse(IMP_amdados_colon__colon_Vector& p2, IMP_amdados_colon__colon_Matrix& p3, IMP_amdados_colon__colon_Matrix const& p4, IMP_amdados_colon__colon_Matrix const& p5);
    void SolveFilter(IMP_amdados_colon__colon_Vector& p2, IMP_amdados_colon__colon_Matrix& p3, IMP_amdados_colon__colon_Matrix const& p4, IMP_amdados_colon__colon_Matrix const& p5, IMP_amdados_colon__colon_Vector const& p6);
    IMP_amdados_colon__colon_KalmanFilter& operator=(IMP_amdados_colon__colon_KalmanFilter const& p2) = default;
    IMP_amdados_colon__colon_KalmanFilter& operator=(IMP_amdados_colon__colon_KalmanFilter&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_KalmanFilter load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1;
typedef struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1;

struct allscale_type_1125;
typedef struct allscale_type_1125 allscale_type_1125;

struct allscale_type_1125 {
    bool data[4];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1125> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1125> { using type = std::array<bool,4u>; };

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 {
    std::vector<double, std::allocator<double > > myself;
    std::vector<double, std::allocator<double > > remote;
    double rel_diff;
    allscale_type_1125 inflow;
    allscale_type_1125 outer;;
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1;
typedef struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1;

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 {
    IMP_amdados_colon__colon_Matrix field;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 boundaries;
    IMP_amdados_colon__colon_KalmanFilter Kalman;
    IMP_amdados_colon__colon_Matrix B;
    IMP_amdados_colon__colon_Matrix P;
    IMP_amdados_colon__colon_Matrix Q;
    IMP_amdados_colon__colon_Matrix H;
    IMP_amdados_colon__colon_Matrix R;
    IMP_amdados_colon__colon_Vector z;
    std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > sensors;
    IMP_amdados_colon__colon_LUdecomposition LU;
    IMP_amdados_colon__colon_Matrix tmp_field;
    std::pair<double, double > flow;;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1();
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 const& p2) = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1&& p2) = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon_Matrix&& p2, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1&& p3, IMP_amdados_colon__colon_KalmanFilter&& p4, IMP_amdados_colon__colon_Matrix&& p5, IMP_amdados_colon__colon_Matrix&& p6, IMP_amdados_colon__colon_Matrix&& p7, IMP_amdados_colon__colon_Matrix&& p8, IMP_amdados_colon__colon_Matrix&& p9, IMP_amdados_colon__colon_Vector&& p10, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >&& p11, IMP_amdados_colon__colon_LUdecomposition&& p12, IMP_amdados_colon__colon_Matrix&& p13, std::pair<double, double >&& p14, DummyCtorParamType p15);
    ~IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1() = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& operator=(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 const& p2) = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& operator=(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_10;
typedef struct allscale_type_10 allscale_type_10;

struct allscale_type_10 {
    char data[13];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_10> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_10> { using type = std::array<char,13u>; };

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13;

typedef bool allscale_type_1598(allscale::utils::Vector<long, 2 > const&);

typedef allscale_type_1598* allscale_type_1599;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 {
    operator allscale_type_1599() const;
    ;
    ;
    bool operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 {
    uint64_t capture_Nsubiter;;
    ;
    ;
    void operator()(int64_t p2, allscale::utils::Vector<long, 2 > const& p3, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > const& p4) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9;

using data_item_type_2 = allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_2)
REGISTER_DATAITEMSERVER(data_item_type_2)
using data_item_type_3 = allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_3)
REGISTER_DATAITEMSERVER(data_item_type_3)
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 {
    IMP_amdados_colon__colon_Configuration capture_conf;
    uint64_t capture_Nsubiter;
    uint64_t capture_Nt;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > capture_contexts;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > capture_observations;;
    allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > operator()(int64_t p2, allscale::utils::Vector<long, 2 > const& p3, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& p4) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct allscale_type_1300;
typedef struct allscale_type_1300 allscale_type_1300;

struct allscale_type_1300 {
    char data[37];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1300> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1300> { using type = std::array<char,37u>; };

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    allscale::utils::Vector<long, 2 > _begin;
    allscale::utils::Vector<long, 2 > _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 >&& p2, allscale::utils::Vector<long, 2 >&& p3, DummyCtorParamType p4);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() = default;
    bool IMP_empty_returns_bool() const;
    uint64_t IMP_size_returns_size_t() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    allscale::utils::Vector<long, 2 > const& begin_returns_constallscaleutilsVectorlong2() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) const;
    allscale::utils::Vector<long, 2 > const& end_returns_constallscaleutilsVectorlong2() const;
    void forEach__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ grow_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ shrink_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(int32_t p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ split_returns_fragmentsallscaleutilsVectorlong2(uint64_t p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& p2) const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ _range;
    allscale::treeture<void > handle;
    uint64_t depth;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2, allscale::treeture<void > const& p3, uint64_t p4);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2, allscale::treeture<void >&& p3, uint64_t&& p4, DummyCtorParamType p5);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() = default;
    operator allscale::treeture<void >() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    uint64_t getDepth_returns_stdsize_t() const;
    allscale::treeture<void > const& getHandle_returns_constcoretask_reference() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ getLeft_returns_iteration_referenceallscaleutilsVectorlong2() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& getRange_returns_constrangeallscaleutilsVectorlong2() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ getRight_returns_iteration_referenceallscaleutilsVectorlong2() const;
    void wait_returns_void() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2, allscale::treeture<void >&& p3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies split() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    uint64_t depth;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ range;;
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 {
    IMP_amdados_colon__colon_Configuration capture_conf;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_state_field;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > capture_contexts;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_3_variant_1;
typedef struct __wi_allscale_wi_3_variant_1 __wi_allscale_wi_3_variant_1;

struct __wi_allscale_wi_3_name {
    static const char* name() { return "__wi_allscale_wi_3"; }
};

struct __wi_allscale_wi_3_variant_0;
typedef struct __wi_allscale_wi_3_variant_0 __wi_allscale_wi_3_variant_0;

struct __wi_allscale_wi_3_can_split;
typedef struct __wi_allscale_wi_3_can_split __wi_allscale_wi_3_can_split;

using __wi_allscale_wi_3_work = allscale::work_item_description<void, __wi_allscale_wi_3_name, allscale::do_serialization, __wi_allscale_wi_3_variant_0, __wi_allscale_wi_3_variant_1, __wi_allscale_wi_3_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1373(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_3_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 >){var_1}, &allscale_fun_1373)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
struct IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;
typedef struct IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;

struct IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_state_field;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > capture_filename;
    allscale::utils::Vector<long, 2 > capture_GridSize;
    uint64_t capture_Nt;;
    void operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_8_name {
    static const char* name() { return "__wi_allscale_wi_8"; }
};

struct __wi_allscale_wi_8_variant_0;
typedef struct __wi_allscale_wi_8_variant_0 __wi_allscale_wi_8_variant_0;

struct __wi_allscale_wi_8_variant_1;
typedef struct __wi_allscale_wi_8_variant_1 __wi_allscale_wi_8_variant_1;

struct __wi_allscale_wi_8_can_split;
typedef struct __wi_allscale_wi_8_can_split __wi_allscale_wi_8_can_split;

using __wi_allscale_wi_8_work = allscale::work_item_description<void, __wi_allscale_wi_8_name, allscale::do_serialization, __wi_allscale_wi_8_variant_0, __wi_allscale_wi_8_variant_1, __wi_allscale_wi_8_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2016(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_8_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_815_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::dependencies&& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 const& var_1) {
    return allscale::runtime::make_prec_operation<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 >){var_1}, &allscale_fun_2016)(std::move(var_0), (IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 const&)IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3{});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_815_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 const& var_0) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_815_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::after(), var_0);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 {
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 isInterestedInTime;
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 isInterestedInLocation;
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 trigger;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 const& p2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 const& p4);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13&& p2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13&& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13&& p4, DummyCtorParamType p5);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2() = default;
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_returns_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt_(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2{var_0, var_1, var_2};
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference {
    allscale::treeture<void > handle;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& p2) = default;
    allscale::treeture<void > detach();
    bool isDone() const;
    bool isValid() const;
    void wait();
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference const& p2) = default;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(allscale::treeture<void >&& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative {
    ;
    ;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative process_allscaleapiuserdataGridstructallscaleapiuserdataAdaptiveGridCelldoublestructallscaleapiuserdataCellConfig2structallscaleapiuserdatalayersstructallscaleapiuserdatalayer11structallscaleapiuserdatalayer88structallscaleapiuserdatalayer222__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_simulationcpp_765_9_pack_begin_allscaleapiuseralgorithmObserverlambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp78213lambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp79013lambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp79213_pack_end_returns_stencil_referencestructallscaleapiuseralgorithmimplementationcoarse_grained_iterative(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& p2, uint64_t p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 const& p4, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p5);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_pack_begin__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_pack_end_pack_begin__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_pack_end_pack_begin__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_pack_end_returns_stencil_reference_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_gt_(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_0, uint64_t pos, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_3) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative{}.process_allscaleapiuserdataGridstructallscaleapiuserdataAdaptiveGridCelldoublestructallscaleapiuserdataCellConfig2structallscaleapiuserdatalayersstructallscaleapiuserdatalayer11structallscaleapiuserdatalayer88structallscaleapiuserdatalayer222__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_simulationcpp_765_9_pack_begin_allscaleapiuseralgorithmObserverlambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp78213lambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp79013lambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp79213_pack_end_returns_stencil_referencestructallscaleapiuseralgorithmimplementationcoarse_grained_iterative(var_0, pos, var_2, var_3);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_RunDataAssimilation(IMP_amdados_colon__colon_Configuration const& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const& var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const& var_2) {
    const allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const uint64_t var_4 = var_0.asUInt("Nt");
    const uint64_t var_5 = var_0.asUInt("num_sub_iter");
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > var_6 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >(var_3);
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_7 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >(var_3);
    const int32_t var_8 = std::max(var_0.IMP_asInt("kalman_time_gap"), 1);
    if (var_8 != 1) {
        IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_WARNING}.operator<<("\n\nparameter \'kalman_time_gap\' != 1\n\n");
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_3, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36){var_0, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, var_1, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > const&)var_6});
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_pack_begin__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_pack_end_pack_begin__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_pack_end_pack_begin__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_pack_end_returns_stencil_reference_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_gt_(var_7, var_4 * var_5, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9){var_0, var_5, var_4, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > const&)var_6, var_1, var_2}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_returns_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt_(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13){}, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13){}, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13){var_5}));
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_9 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)IMP_amdados_colon__colon_MakeFileName(var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"final_field", std::allocator<char >{}});
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_815_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const&)var_9, (allscale::utils::Vector<long, 2 > const&)var_3, var_4}).wait();
}
struct allscale_type_456;
typedef struct allscale_type_456 allscale_type_456;

struct allscale_type_456 {
    char data[48];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_456> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_456> { using type = std::array<char,48u>; };

/* ------- Function Definitions --------- */
std::basic_ostream<char, std::char_traits<char > >& IMP_allscale_colon__colon_utils_colon__colon__operator_lshift_(std::basic_ostream<char, std::char_traits<char > >& var_0, allscale::utils::Vector<long, 2 > const& index) {
    return var_0 << "[" << index.x << "," << index.y << "]";
}
struct allscale_type_595;
typedef struct allscale_type_595 allscale_type_595;

struct allscale_type_595 {
    char data[30];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_595> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_595> { using type = std::array<char,30u>; };

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20;

typedef int64_t allscale_type_578(double,int64_t);

typedef allscale_type_578* allscale_type_579;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20 {
    operator allscale_type_579() const;
    ;
    ;
    int64_t operator()(double p2, int64_t p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37 {
    int32_t capture_NN;;
    ;
    ;
    double operator()(double p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37 load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_335;
typedef struct allscale_type_335 allscale_type_335;

struct allscale_type_335 {
    char data[109];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_335> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_335> { using type = std::array<char,109u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_EvaluateObjective_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_52_1(double& var_0, std::vector<double, std::allocator<double > >& var_1, std::vector<double, std::allocator<double > > const& var_2, std::vector<double, std::allocator<double > > const& var_3) {
    const int32_t var_4 = (int32_t)var_2.size();
    const int32_t var_5 = var_4 * var_4;
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.size() == var_3.size()};
    if (var_6) {
        std::cerr << "\nAssertion x.size() == y.size() of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:58 failed!\n";
    };
    const double var_7 = sqrt(std::numeric_limits<double>::epsilon());
    var_0 = 0.0E+0;
    var_1.resize((uint64_t)(2 * var_4));
    std::fill((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.end(), 0.0E+0);
    {
        for (int32_t var_8 = 0; var_8 < var_4; ++var_8) {
            {
                const double var_9 = 1.0E+0 / (std::pow(var_2.operator[]((uint64_t)var_8), 2) + var_7);
                const double var_10 = 1.0E+0 / (std::pow(1.0E+0 - var_2.operator[]((uint64_t)var_8), 2) + var_7);
                const double var_11 = 1.0E+0 / (std::pow(var_3.operator[]((uint64_t)var_8), 2) + var_7);
                const double var_12 = 1.0E+0 / (std::pow(1.0E+0 - var_3.operator[]((uint64_t)var_8), 2) + var_7);
                var_0 += var_9 + var_10 + var_11 + var_12;
                double var_13 = 0.0E+0;
                double var_14 = 0.0E+0;
                {
                    for (int32_t var_15 = 0; var_15 < var_4; ++var_15) {
                        {
                            double var_16 = var_2.operator[]((uint64_t)var_8) - var_2.operator[]((uint64_t)var_15);
                            double var_17 = var_3.operator[]((uint64_t)var_8) - var_3.operator[]((uint64_t)var_15);
                            double var_18 = var_16 * var_16 + var_17 * var_17 + var_7;
                            var_0 += 1.0E+0 / var_18;
                            var_13 -= var_16 / std::pow(var_18, 2);
                            var_14 -= var_17 / std::pow(var_18, 2);
                        };
                    };
                };
                var_1.operator[]((uint64_t)var_8) = 2.0E+0 * (var_13 - var_2.operator[]((uint64_t)var_8) * std::pow(var_9, 2) + (1.0E+0 - var_2.operator[]((uint64_t)var_8)) * std::pow(var_10, 2));
                var_1.operator[]((uint64_t)(var_8 + var_4)) = 2.0E+0 * (var_14 - var_3.operator[]((uint64_t)var_8) * std::pow(var_11, 2) + (1.0E+0 - var_3.operator[]((uint64_t)var_8)) * std::pow(var_12, 2));
            };
        };
    };
    var_0 /= (double)var_5;
    std::transform((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.end(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37&&)INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37){var_5});
}
struct allscale_type_331;
typedef struct allscale_type_331 allscale_type_331;

struct allscale_type_331 {
    char data[110];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_331> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_331> { using type = std::array<char,110u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_OptimizePointLocations(std::vector<double, std::allocator<double > >& var_0, std::vector<double, std::allocator<double > >& var_1) {
    const int32_t var_2 = (int32_t)var_0.size();
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.size() == var_1.size()};
    if (var_3) {
        std::cerr << "\nAssertion x.size() == y.size() of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:128 failed!\n";
    };
    const double var_4 = 1.0000000000000001E-1;
    const double var_5 = 1.0000000000000001E-1;
    const double var_6 = std::numeric_limits<double>::epsilon() * std::log(var_2);
    double var_7 = 0.0E+0;
    double var_8 = 0.0E+0;
    double var_9 = var_5;
    std::vector<double, std::allocator<double > > var_10{((uint64_t)var_2), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_11{((uint64_t)var_2), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_12{((uint64_t)(2 * var_2)), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_13{((uint64_t)(2 * var_2)), (std::allocator<double >{})};
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_EvaluateObjective_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_52_1(var_7, var_12, var_0, var_1);
    {
        bool var_14 = (bool)true;
        while (var_14 && var_9 > std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3)) {
            bool var_15 = (bool)true;
            {
                int32_t var_16 = 0;
                while (var_16 < var_2 && var_15) {
                    {
                        var_10.operator[]((uint64_t)var_16) = var_0.operator[]((uint64_t)var_16) - var_9 * var_12.operator[]((uint64_t)var_16);
                        var_11.operator[]((uint64_t)var_16) = var_1.operator[]((uint64_t)var_16) - var_9 * var_12.operator[]((uint64_t)(var_16 + var_2));
                        var_15 = 0.0E+0 <= var_10.operator[]((uint64_t)var_16) && var_10.operator[]((uint64_t)var_16) <= 1.0E+0 && 0.0E+0 <= var_11.operator[]((uint64_t)var_16) && var_11.operator[]((uint64_t)var_16) <= 1.0E+0;
                    };
                    ++var_16;
                };
            };
            if (!var_15) {
                var_9 *= var_4;
                continue;
            };
            IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_EvaluateObjective_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_52_1(var_8, var_13, var_10, var_11);
            if (var_7 < var_8) {
                var_9 *= var_4;
                continue;
            };
            var_14 = var_7 - var_8 > var_7 * var_6;
            var_0 = var_10;
            var_1 = var_11;
            var_7 = var_8;
            var_12 = var_13;
            var_9 *= 2.0E+0;
        };
    };
}
struct allscale_type_649;
typedef struct allscale_type_649 allscale_type_649;

struct allscale_type_649 {
    char data[136];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_649> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_649> { using type = std::array<char,136u>; };

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > capture_observations;
    std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > capture_locations;
    int64_t capture_Nt;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_;

typedef int64_t allscale_type_610(int64_t const&,int64_t const&);

typedef allscale_type_610* allscale_type_611;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ {
    operator allscale_type_611() const;
    ;
    ;
    int64_t operator()(int64_t const& p2, int64_t const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_utils_colon__colon_elementwise_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ const& var_2) {
    allscale::utils::Vector<long, 2 > var_3;
    {
        for (uint32_t var_4 = (uint32_t)0; var_4 < (uint32_t)2ul; ++var_4) {
            var_3.operator[]((uint64_t)var_4) = var_2.operator()(index.operator[]((uint64_t)var_4), var_1.operator[]((uint64_t)var_4));
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)var_3;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_utils_colon__colon_elementwiseDivision_2_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1) {
    return (allscale::utils::Vector<long, 2 >&&)IMP_allscale_colon__colon_utils_colon__colon_elementwise_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(index, var_1, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_){});
}
struct allscale_type_274;
typedef struct allscale_type_274 allscale_type_274;

struct allscale_type_274 {
    char data[148];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_274> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_274> { using type = std::array<char,148u>; };

/* ------- Function Definitions --------- */
int32_t IMP_amdados_colon__colon_Round(double var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{fabs(var_0) < (double)std::numeric_limits<int>::max()};
    if (var_1) {
        std::cerr << "\nAssertion std::fabs(val) < std::numeric_limits<int>::max() of /root/work/allscale_amdados/code/app/include/amdados/app/amdados_utils.h:62 failed!\n";
    };
    return (int32_t)floor(var_0 + 5.0E-1);
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39 {
    std::uniform_real_distribution<double >& capture_distrib;
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u >& capture_gen;;
    double operator()() const;
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39 {
    std::uniform_real_distribution<double >& capture_distrib;
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u >& capture_gen;;
    double operator()() const;
};

/* ------- Function Definitions --------- */
uint64_t IMP_amdados_colon__colon_RandomSeed() {
    return (uint64_t)2063;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_InitialGuess(IMP_amdados_colon__colon_Configuration const& var_0, std::vector<double, std::allocator<double > >& var_1, std::vector<double, std::allocator<double > >& var_2, allscale::utils::Vector<long, 2 > const& var_3) {
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u > var_4{(IMP_amdados_colon__colon_RandomSeed() + (uint64_t)(var_3.x * (int64_t)var_0.IMP_asInt("num_subdomains_y")) + (uint64_t)var_3.y)};
    std::uniform_real_distribution<double > var_5{(0.0E+0), (1.0E+0)};
    std::generate((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.end(), (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39&&)INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39){var_5, var_4});
    std::generate((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_2.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_2.end(), (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39&&)INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39){var_5, var_4});
}
struct allscale_type_229;
typedef struct allscale_type_229 allscale_type_229;

struct allscale_type_229 {
    char data[73];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_229> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_229> { using type = std::array<char,73u>; };

struct allscale_type_230;
typedef struct allscale_type_230 allscale_type_230;

struct allscale_type_230 {
    char data[63];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_230> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_230> { using type = std::array<char,63u>; };

/* ------- Function Definitions --------- */
double IMP_amdados_colon__colon_Bound_double_returns_double(double const& var_0, double const& var_1, double const& var_2) {
    var_1 <= var_2 ? (void)0 : __assert_fail("vmin <= vmax", "/root/work/allscale_amdados/code/app/include/amdados/app/amdados_utils.h", (uint32_t)53, "T amdados::Bound(const T &, const T &, const T &) [T = double]");
    return std::min(std::max(var_0, var_1), var_2);
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 >& IMP_allscale_colon__colon_utils_colon__colon__operator_mod_assign_(allscale::utils::Vector<long, 2 >& var_0, allscale::utils::Vector<long, 2 > const& index) {
    {
        for (uint64_t var_2 = (uint64_t)0; var_2 < 2ul; ++var_2) {
            var_0.operator[](var_2) %= index.operator[](var_2);
        };
    };
    return var_0;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_utils_colon__colon__operator_mod_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1) {
    allscale::utils::Vector<long, 2 > var_2 = index;
    return (allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_utils_colon__colon__operator_mod_assign_(var_2, var_1);
}
struct allscale_type_647;
typedef struct allscale_type_647 allscale_type_647;

struct allscale_type_647 {
    char data[147];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_647> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_647> { using type = std::array<char,147u>; };

struct allscale_type_648;
typedef struct allscale_type_648 allscale_type_648;

struct allscale_type_648 {
    char data[25];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_648> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_648> { using type = std::array<char,25u>; };

struct __wi_allscale_wi_2_name {
    static const char* name() { return "__wi_allscale_wi_2"; }
};

struct __wi_allscale_wi_2_can_split;
typedef struct __wi_allscale_wi_2_can_split __wi_allscale_wi_2_can_split;

struct __wi_allscale_wi_2_variant_1;
typedef struct __wi_allscale_wi_2_variant_1 __wi_allscale_wi_2_variant_1;

struct __wi_allscale_wi_2_variant_0;
typedef struct __wi_allscale_wi_2_variant_0 __wi_allscale_wi_2_variant_0;

using __wi_allscale_wi_2_work = allscale::work_item_description<void, __wi_allscale_wi_2_name, allscale::do_serialization, __wi_allscale_wi_2_variant_0, __wi_allscale_wi_2_variant_1, __wi_allscale_wi_2_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1096(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_2_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 >){var_1}, &allscale_fun_1096)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GenerateSensorData_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_47_1(IMP_amdados_colon__colon_Configuration const& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >& var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >& var_2) {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >&& var_3 = allscale::runtime::DataItemManager::get(var_1);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >&& var_4 = allscale::runtime::DataItemManager::get(var_2);
    const allscale::utils::Vector<long, 2 > var_5 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const double var_6 = IMP_amdados_colon__colon_Bound_double_returns_double(var_0.IMP_asDouble("sensor_fraction"), 1.0E-3, 7.5E-1);
    const allscale::utils::Vector<long, 2 > var_7{((int64_t)var_0.asUInt("subdomain_x")), ((int64_t)var_0.asUInt("subdomain_y"))};
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20 var_8 = (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20&&)INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20){};
    const int64_t var_9 = (int64_t)var_0.IMP_asInt("subdomain_x") * var_5.x;
    const int64_t var_10 = (int64_t)var_0.IMP_asInt("subdomain_y") * var_5.y;
    const int64_t var_11 = var_9 * var_10;
    const int32_t var_12 = std::max(IMP_amdados_colon__colon_Round(var_6 * (double)var_11), 1);
    std::cout << "\tfraction of sensor points = " << var_6;
    std::cout << ", #observations = " << var_12 << &std::endl;
    std::vector<double, std::allocator<double > > var_13{((uint64_t)var_12), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_14{((uint64_t)var_12), (std::allocator<double >{})};
    IMP_amdados_colon__colon_InitialGuess(var_0, var_13, var_14, allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0});
    IMP_amdados_colon__colon_OptimizePointLocations(var_13, var_14);
    std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > var_15;
    {
        for (int32_t var_16 = 0; var_16 < var_12; ++var_16) {
            {
                int64_t var_17 = var_8.operator()(var_13.operator[]((uint64_t)var_16), var_9);
                int64_t var_18 = var_8.operator()(var_14.operator[]((uint64_t)var_16), var_10);
                allscale::utils::Vector<long, 2 > var_19{(var_17), (var_18)};
                allscale::utils::Vector<long, 2 > var_20 = (allscale::utils::Vector<long, 2 >&&)IMP_allscale_colon__colon_utils_colon__colon_elementwiseDivision_2_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(var_19, var_7);
                insieme::utils::detail::LazyAssertion var_21 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)0 <= var_20.x && var_20.x < var_5.x};
                if (var_21) {
                    std::cerr << "\nAssertion (0 <= idx.x) && (idx.x < GridSize.x) of /root/work/allscale_amdados/code/app/src/scenario_benchmark.cpp:92 failed!\n";
                };
                insieme::utils::detail::LazyAssertion var_22 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)0 <= var_20.y && var_20.y < var_5.y};
                if (var_22) {
                    std::cerr << "\nAssertion (0 <= idx.y) && (idx.y < GridSize.y) of /root/work/allscale_amdados/code/app/src/scenario_benchmark.cpp:93 failed!\n";
                };
                var_15.operator[](var_20).push_back(IMP_allscale_colon__colon_utils_colon__colon__operator_mod_(var_19, var_7));
            };
        };
    };
    const int64_t var_23 = (int64_t)var_0.asUInt("Nt");
    insieme::utils::detail::LazyAssertion var_24 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3.size() == var_4.size()};
    if (var_24) {
        IMP_allscale_colon__colon_utils_colon__colon__operator_lshift_(IMP_allscale_colon__colon_utils_colon__colon__operator_lshift_(std::cerr << "\nAssertion sensors.size() == observations.size() of /root/work/allscale_amdados/code/app/src/scenario_benchmark.cpp:100 failed!\n\tsensors.size() = ", var_3.size()) << "\n\tobservations.size() = ", var_4.size()) << "\n";
    };
    insieme::utils::detail::LazyAssertion var_25 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3.size() == var_5};
    if (var_25) {
        IMP_allscale_colon__colon_utils_colon__colon__operator_lshift_(IMP_allscale_colon__colon_utils_colon__colon__operator_lshift_(std::cerr << "\nAssertion sensors.size() == GridSize of /root/work/allscale_amdados/code/app/src/scenario_benchmark.cpp:101 failed!\n\tsensors.size() = ", var_3.size()) << "\n\tGridSize = ", var_5) << "\n";
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_5, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)var_1, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const&)var_2, (std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > const&)var_15, var_23});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_ScenarioBenchmark(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_0, int32_t var_1) {
    {
        (void)"Running scenario \'benchmark\' ...";
    };
    IMP_amdados_colon__colon_Configuration var_2;
    var_2.ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_0.c_str(), std::allocator<char >{}});
    var_2.SetInt("num_subdomains_x", var_1);
    var_2.SetInt("num_subdomains_y", var_1);
    IMP_amdados_colon__colon_InitDependentParams(var_2);
    var_2.PrintParameters();
    int32_t var_3 = var_2.IMP_asInt("Nt");
    std::cout << "Running benchmark based on configuration file \"" << var_0;
    std::cout << "\" with domain size " << var_1 << "x" << var_1;
    std::cout << " for " << var_3 << " time steps ...\n";
    std::cout << "Generating artificial sensory input data ...\n";
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_4 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >(IMP_amdados_colon__colon_GetGridSize(var_2));
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_5 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >(IMP_amdados_colon__colon_GetGridSize(var_2));
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GenerateSensorData_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_47_1(var_2, var_4, var_5);
    std::cout << "Running benchmark simulation ...\n";
    std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_6 = (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::_V2::system_clock::now();
    IMP_amdados_colon__colon_RunDataAssimilation(var_2, var_4, var_5);
    std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_7 = (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::_V2::system_clock::now();
    std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > var_8 = (std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > const&)(var_7 - var_6);
    double var_9 = (double)std::chrono::duration_cast<std::chrono::duration<int64_t, std::ratio<1, 1000 > >, int64_t, std::ratio<1, 1000000000 > >(var_8).count() / 1.0E+3;
    std::cout << "Simulation took " << var_9 << "s\n";
    double var_10 = (double)(var_1 * var_1 * var_3) / var_9;
    std::cout << "Throughput: " << var_10 << " sub-domains/s\n";
}
struct allscale_type_131;
typedef struct allscale_type_131 allscale_type_131;

struct allscale_type_131 {
    char data[39];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_131> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_131> { using type = std::array<char,39u>; };

/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ScaleCoord_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_99_1(double var_0, int64_t value) {
    int64_t i = (int64_t)floor(var_0 * (double)value);
    i = std::min(std::max(i, (int64_t)0), value - (int64_t)1);
    return i;
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 {
    IMP_amdados_colon__colon_Configuration capture_conf;
    double capture_fraction;
    allscale::utils::Vector<long, 2 > capture_GridSize;
    allscale::utils::Vector<long, 2 > capture_subdomain_size;
    int32_t capture_sub_problem_size;
    int32_t capture_Sx;
    int32_t capture_Sy;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > capture_filename;;
    ;
    ;
    void operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_425;
typedef struct allscale_type_425 allscale_type_425;

struct allscale_type_425 {
    char data[29];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_425> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_425> { using type = std::array<char,29u>; };

struct __wi_allscale_wi_1_variant_1;
typedef struct __wi_allscale_wi_1_variant_1 __wi_allscale_wi_1_variant_1;

struct __wi_allscale_wi_1_name {
    static const char* name() { return "__wi_allscale_wi_1"; }
};

struct __wi_allscale_wi_1_variant_0;
typedef struct __wi_allscale_wi_1_variant_0 __wi_allscale_wi_1_variant_0;

struct __wi_allscale_wi_1_can_split;
typedef struct __wi_allscale_wi_1_can_split __wi_allscale_wi_1_can_split;

using __wi_allscale_wi_1_work = allscale::work_item_description<void, __wi_allscale_wi_1_name, allscale::do_serialization, __wi_allscale_wi_1_variant_0, __wi_allscale_wi_1_variant_1, __wi_allscale_wi_1_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_403(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_1_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_colon_202_colon_13_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::dependencies&& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 const& var_1) {
    return allscale::runtime::make_prec_operation<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 >){var_1}, &allscale_fun_403)(std::move(var_0), (IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 const&)IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3{});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_colon_202_colon_13_rparen__space__lparen_void_rparen__gt__space__gt_(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 const& var_0) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_colon_202_colon_13_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::after(), var_0);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_ScenarioSensors(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_0) {
    {
        (void)"Running scenario \'sensors\' ...";
    };
    IMP_amdados_colon__colon_Configuration var_1;
    var_1.ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_0.c_str(), std::allocator<char >{}});
    const allscale::utils::Vector<long, 2 > var_2 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_1);
    const double var_3 = IMP_amdados_colon__colon_Bound_double_returns_double(var_1.IMP_asDouble("sensor_fraction"), 1.0E-3, 7.5E-1);
    if (var_1.IsExist("sensor_per_subdomain") && var_1.IMP_asInt("sensor_per_subdomain") > 0) {
        const int32_t var_4 = var_1.IMP_asInt("subdomain_x");
        const int32_t var_5 = var_1.IMP_asInt("subdomain_y");
        const int32_t var_6 = var_4 * var_5;
        const allscale::utils::Vector<long, 2 > var_7{((int64_t)var_4), ((int64_t)var_5)};
        std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_8 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)IMP_amdados_colon__colon_MakeFileName(var_1, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"sensors", std::allocator<char >{}});
        IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_colon_202_colon_13_rparen__space__lparen_void_rparen__gt__space__gt_(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13){(IMP_amdados_colon__colon_Configuration const&)var_1, var_3, (allscale::utils::Vector<long, 2 > const&)var_2, (allscale::utils::Vector<long, 2 > const&)var_7, var_6, var_4, var_5, (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const&)var_8});
    } else {
        const int64_t var_9 = (int64_t)var_1.IMP_asInt("subdomain_x") * var_2.x;
        const int64_t var_10 = (int64_t)var_1.IMP_asInt("subdomain_y") * var_2.y;
        const int64_t var_11 = var_9 * var_10;
        const int32_t var_12 = std::max(IMP_amdados_colon__colon_Round(var_3 * (double)var_11), 1);
        IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_INFO}.operator<<("fraction of sensor points = ").allscale_fun_423(var_3).operator<<(", #observations = ").allscale_fun_421(var_12);
        std::vector<double, std::allocator<double > > var_13{((uint64_t)var_12), (std::allocator<double >{})};
        std::vector<double, std::allocator<double > > var_14{((uint64_t)var_12), (std::allocator<double >{})};
        IMP_amdados_colon__colon_InitialGuess(var_1, var_13, var_14, allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0});
        IMP_amdados_colon__colon_OptimizePointLocations(var_13, var_14);
        std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_15 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)IMP_amdados_colon__colon_MakeFileName(var_1, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"sensors", std::allocator<char >{}});
        allscale::api::core::FileIOManager& var_16 = allscale::api::core::FileIOManager::getInstance();
        allscale::api::core::Entry var_17 = (allscale::api::core::Entry&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_16).createEntry(var_15, allscale::api::core::Mode::Text);
        allscale::api::core::OutputStream var_18 = (allscale::api::core::OutputStream&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_16).openOutputStream((allscale::api::core::Entry const&)var_17);
        {
            for (int32_t var_19 = 0; var_19 < var_12; ++var_19) {
                {
                    int64_t var_20 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ScaleCoord_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_99_1(var_13.operator[]((uint64_t)var_19), var_9);
                    int64_t var_21 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ScaleCoord_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_99_1(var_14.operator[]((uint64_t)var_19), var_10);
                    var_18 << var_20 << " " << var_21 << "\n";
                };
            };
        };
        ((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_16).close(var_18);
    };
}
struct allscale_type_139;
typedef struct allscale_type_139 allscale_type_139;

struct allscale_type_139 {
    char data[22];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_139> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_139> { using type = std::array<char,22u>; };

struct allscale_type_15;
typedef struct allscale_type_15 allscale_type_15;

struct allscale_type_15 {
    char data[7];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_15> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_15> { using type = std::array<char,7u>; };

struct allscale_type_28;
typedef struct allscale_type_28 allscale_type_28;

struct allscale_type_28 {
    char data[61];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_28> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_28> { using type = std::array<char,61u>; };

struct allscale_type_33;
typedef struct allscale_type_33 allscale_type_33;

struct allscale_type_33 {
    char data[67];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_33> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_33> { using type = std::array<char,67u>; };

struct allscale_type_34;
typedef struct allscale_type_34 allscale_type_34;

struct allscale_type_34 {
    char data[59];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_34> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_34> { using type = std::array<char,59u>; };

struct allscale_type_35;
typedef struct allscale_type_35 allscale_type_35;

struct allscale_type_35 {
    char data[56];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_35> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_35> { using type = std::array<char,56u>; };

struct allscale_type_32;
typedef struct allscale_type_32 allscale_type_32;

struct allscale_type_32 {
    char data[64];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_32> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_32> { using type = std::array<char,64u>; };

struct allscale_type_31;
typedef struct allscale_type_31 allscale_type_31;

struct allscale_type_31 {
    char data[58];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_31> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_31> { using type = std::array<char,58u>; };

struct allscale_type_27;
typedef struct allscale_type_27 allscale_type_27;

struct allscale_type_27 {
    char data[62];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_27> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_27> { using type = std::array<char,62u>; };

struct allscale_type_29;
typedef struct allscale_type_29 allscale_type_29;

struct allscale_type_29 {
    char data[49];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_29> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_29> { using type = std::array<char,49u>; };

struct allscale_type_26;
typedef struct allscale_type_26 allscale_type_26;

struct allscale_type_26 {
    char data[66];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_26> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_26> { using type = std::array<char,66u>; };

struct allscale_type_30;
typedef struct allscale_type_30 allscale_type_30;

struct allscale_type_30 {
    char data[60];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_30> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_30> { using type = std::array<char,60u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_PrintHelp() {
    std::cout << &std::endl << "(c) IBM Research Ireland, 2017-2018";
    std::cout << &std::endl << &std::endl;
    std::cout << "Help:";
    std::cout << &std::endl;
    std::cout << "This program demonstrates solution to advection-diffusion problem";
    std::cout << &std::endl;
    std::cout << "with data assimilation. Two separate scenarios are available:";
    std::cout << &std::endl;
    std::cout << "1) auxiliary scenario \'sensors\' (option: --scenario sensors)";
    std::cout << &std::endl;
    std::cout << "   is used to generate random sensors locations.";
    std::cout << &std::endl;
    std::cout << "2) default scenario \'simulation\' expects the file of sensor";
    std::cout << &std::endl;
    std::cout << "   locations and the file of observations generated by Python";
    std::cout << &std::endl;
    std::cout << "   solver in the output directory; this is the main scenario";
    std::cout << &std::endl;
    std::cout << "   where the advection-diffusion problem is being solved.";
    std::cout << &std::endl;
    std::cout << "The same configuration file (default is \'amdados.conf\') must be";
    std::cout << &std::endl;
    std::cout << "used by either scenario as well as Python scripts for consistency.";
    std::cout << &std::endl;
    std::cout << "The option \'--config path/to/config_file\' allows different";
    std::cout << &std::endl;
    std::cout << "configuration files. See README.md for further details.";
    std::cout << &std::endl;
    std::cout << "The option \'--help\' or \'-h\' prints this help.";
    std::cout << &std::endl << &std::endl;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Glo2Sub_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_43_1(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1) {
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{index.x % var_1.x, index.y % var_1.y};
}
struct allscale_type_2110;
typedef struct allscale_type_2110 allscale_type_2110;

struct allscale_type_2110 {
    char data[57];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2110> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2110> { using type = std::array<char,57u>; };

struct allscale_type_2111;
typedef struct allscale_type_2111 allscale_type_2111;

struct allscale_type_2111 {
    char data[50];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2111> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2111> { using type = std::array<char,50u>; };

struct allscale_type_2112;
typedef struct allscale_type_2112 allscale_type_2112;

struct allscale_type_2112 {
    char data[52];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2112> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2112> { using type = std::array<char,52u>; };

struct allscale_type_1260;
typedef struct allscale_type_1260 allscale_type_1260;

struct allscale_type_1260 {
    char data[116];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1260> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1260> { using type = std::array<char,116u>; };

struct allscale_type_1201;
typedef struct allscale_type_1201 allscale_type_1201;

struct allscale_type_1201 {
    char data[126];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1201> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1201> { using type = std::array<char,126u>; };

/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Glo2CellIndex_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_34_1(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1) {
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{index.x / var_1.x, index.y / var_1.y};
}
struct allscale_type_408;
typedef struct allscale_type_408 allscale_type_408;

struct allscale_type_408 {
    char data[121];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_408> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_408> { using type = std::array<char,121u>; };

struct allscale_type_1244;
typedef struct allscale_type_1244 allscale_type_1244;

struct allscale_type_1244 {
    char data[92];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1244> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1244> { using type = std::array<char,92u>; };

using data_item_type_5 = allscale::api::user::data::Grid<int32_t, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_5)
REGISTER_DATAITEMSERVER(data_item_type_5)
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > capture_counters;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_12_can_split;
typedef struct __wi_allscale_wi_12_can_split __wi_allscale_wi_12_can_split;

struct __wi_allscale_wi_12_name {
    static const char* name() { return "__wi_allscale_wi_12"; }
};

struct __wi_allscale_wi_12_variant_0;
typedef struct __wi_allscale_wi_12_variant_0 __wi_allscale_wi_12_variant_0;

struct __wi_allscale_wi_12_variant_1;
typedef struct __wi_allscale_wi_12_variant_1 __wi_allscale_wi_12_variant_1;

using __wi_allscale_wi_12_work = allscale::work_item_description<void, __wi_allscale_wi_12_name, allscale::do_serialization, __wi_allscale_wi_12_variant_0, __wi_allscale_wi_12_variant_1, __wi_allscale_wi_12_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2264(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_12_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 >){var_1}, &allscale_fun_2264)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
struct allscale_type_177;
typedef struct allscale_type_177 allscale_type_177;

struct allscale_type_177 {
    char data[114];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_177> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_177> { using type = std::array<char,114u>; };

struct allscale_type_174;
typedef struct allscale_type_174 allscale_type_174;

struct allscale_type_174 {
    char data[96];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_174> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_174> { using type = std::array<char,96u>; };

struct allscale_type_2239;
typedef struct allscale_type_2239 allscale_type_2239;

struct allscale_type_2239 {
    char data[104];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2239> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2239> { using type = std::array<char,104u>; };

struct allscale_type_2240;
typedef struct allscale_type_2240 allscale_type_2240;

struct allscale_type_2240 {
    char data[141];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2240> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2240> { using type = std::array<char,141u>; };

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > capture_counters;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_11_variant_0;
typedef struct __wi_allscale_wi_11_variant_0 __wi_allscale_wi_11_variant_0;

struct __wi_allscale_wi_11_name {
    static const char* name() { return "__wi_allscale_wi_11"; }
};

struct __wi_allscale_wi_11_can_split;
typedef struct __wi_allscale_wi_11_can_split __wi_allscale_wi_11_can_split;

struct __wi_allscale_wi_11_variant_1;
typedef struct __wi_allscale_wi_11_variant_1 __wi_allscale_wi_11_variant_1;

using __wi_allscale_wi_11_work = allscale::work_item_description<void, __wi_allscale_wi_11_name, allscale::do_serialization, __wi_allscale_wi_11_variant_0, __wi_allscale_wi_11_variant_1, __wi_allscale_wi_11_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2200(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_11_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 >){var_1}, &allscale_fun_2200)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__float_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__float_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__float_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__float_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23 {
    allscale::utils::Vector<long, 2 >& capture_pt;
    float& capture_val;;
    void operator()(allscale::api::core::impl::reference::InputStream::IStreamWrapper& p2) const;
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19_int_space__ampersand__int_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19_int_space__ampersand__int_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19_int_space__ampersand__int_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19_int_space__ampersand__int_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19 {
    int32_t& capture_t;
    int32_t& capture_num;;
    void operator()(allscale::api::core::impl::reference::InputStream::IStreamWrapper& p2) const;
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > capture_observations;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_10_can_split;
typedef struct __wi_allscale_wi_10_can_split __wi_allscale_wi_10_can_split;

struct __wi_allscale_wi_10_variant_1;
typedef struct __wi_allscale_wi_10_variant_1 __wi_allscale_wi_10_variant_1;

struct __wi_allscale_wi_10_name {
    static const char* name() { return "__wi_allscale_wi_10"; }
};

struct __wi_allscale_wi_10_variant_0;
typedef struct __wi_allscale_wi_10_variant_0 __wi_allscale_wi_10_variant_0;

using __wi_allscale_wi_10_work = allscale::work_item_description<void, __wi_allscale_wi_10_name, allscale::do_serialization, __wi_allscale_wi_10_variant_0, __wi_allscale_wi_10_variant_1, __wi_allscale_wi_10_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2136(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_10_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 >){var_1}, &allscale_fun_2136)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LoadSensorMeasurements(IMP_amdados_colon__colon_Configuration const& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const& var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >& var_2) {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > const&& var_3 = allscale::runtime::DataItemManager::get(var_1);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >&& var_4 = allscale::runtime::DataItemManager::get(var_2);
    {
        (void)"Loading sensor measurements ...";
    };
    IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_INFO}.operator<<("-------------------------------------------------------\n").operator<<("B E W A R E: if you had run: amdados --scenario sensors\n").operator<<("then you have to rerun:\n").operator<<("        python3 python/ObservationsGenerator.py\n").operator<<("otherwise there will be a mismatch error between\n").operator<<("the new sensors and the old observation locations.\n").operator<<("------------------------------------------------------\n");
    const allscale::utils::Vector<long, 2 > var_5{((int64_t)var_0.IMP_asInt("subdomain_x")), ((int64_t)var_0.IMP_asInt("subdomain_y"))};
    const allscale::utils::Vector<long, 2 > var_6 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const int32_t var_7 = var_0.IMP_asInt("Nt");
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > var_8 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<int32_t, 2u > >(var_6);
    int32_t var_9 = -1;
    insieme::utils::detail::LazyAssertion var_10 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3.size() == var_6};
    if (var_10) {
        std::cerr << "\nAssertion sensors.size() == GridSize of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:341 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_11 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_4.size() == var_6};
    if (var_11) {
        std::cerr << "\nAssertion observations.size() == GridSize of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:342 failed!\n";
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_6, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const&)var_2});
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_12 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)IMP_amdados_colon__colon_MakeFileName(var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"analytic", std::allocator<char >{}});
    allscale::api::core::FileIOManager& var_13 = allscale::api::core::FileIOManager::getInstance();
    allscale::api::core::Entry var_14 = (allscale::api::core::Entry&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_13).createEntry(var_12, allscale::api::core::Mode::Text);
    allscale::api::core::InputStream var_15 = (allscale::api::core::InputStream&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_13).openInputStream((allscale::api::core::Entry const&)var_14);
    while (1 != 0) {
        int32_t var_16 = 0;
        int32_t var_17 = 0;
        allscale::utils::Vector<long, 2 > var_18;
        float var_19 = 0.0E+0f;
        var_15.atomic(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19_int_space__ampersand__int_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19){var_16, var_17});
        if (!var_15) {
            break;
        };
        insieme::utils::detail::LazyAssertion var_20 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_16 < var_7};
        if (var_20) {
            std::cerr << "\nAssertion t < Nt of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:364 failed!\n";
        };
        insieme::utils::detail::LazyAssertion var_21 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_9 + 1 == var_16};
        if (var_21) {
            std::cerr << "\nAssertion last_timestamp + 1 == t of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:365 failed!\n";
        };
        IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_6, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > const&)var_8});
        {
            for (int32_t var_22 = 0; var_22 < var_17; ++var_22) {
                {
                    var_15.atomic(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__float_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23){var_18, var_19});
                    allscale::utils::Vector<long, 2 > var_23 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Glo2CellIndex_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_34_1(var_18, var_5);
                    insieme::utils::detail::LazyAssertion var_24 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)0 <= var_23.x && var_23.x < var_6.x};
                    if (var_24) {
                        std::cerr << "\nAssertion (0 <= idx.x) && (idx.x < GridSize.x) of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:379 failed!\n";
                    };
                    insieme::utils::detail::LazyAssertion var_25 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)0 <= var_23.y && var_23.y < var_6.y};
                    if (var_25) {
                        std::cerr << "\nAssertion (0 <= idx.y) && (idx.y < GridSize.y) of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:380 failed!\n";
                    };
                    IMP_amdados_colon__colon_Matrix& var_26 = var_4.operator[](var_23);
                    int32_t& var_27 = allscale::runtime::DataItemManager::get(var_8).operator[](var_23);
                    int32_t var_28 = (int32_t)var_3.operator[](var_23).size();
                    if (((IMP_amdados_colon__colon_Vector&)var_26).Empty()) {
                        var_26.Resize((int64_t)var_7, (int64_t)var_28, (bool)true);
                    };
                    insieme::utils::detail::LazyAssertion var_29 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_27 < var_28};
                    if (var_29) {
                        std::cerr << "\nAssertion cnt < nsensors of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:393 failed!\n";
                    };
                    insieme::utils::detail::LazyAssertion var_30 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Glo2Sub_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_43_1(var_18, var_5) == var_3.operator[](var_23).operator[]((uint64_t)var_27)};
                    if (var_30) {
                        std::cerr << "\nAssertion Glo2Sub(pt, finest_layer_size) == sensors[idx][cnt] of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:394 failed!\n";
                    };
                    var_26.operator()((int64_t)var_16, (int64_t)var_27) = (double)var_19;
                    ++*(int32_t*)(&var_27);
                };
            };
        };
        insieme::utils::detail::LazyAssertion var_31 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_15};
        if (var_31) {
            std::cerr << "\nAssertion in of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:400 failed!\n";
        };
        var_9 = var_16;
        IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_6, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > const&)var_8, var_1});
    };
    ((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_13).close(var_15);
    insieme::utils::detail::LazyAssertion var_32 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_9 + 1 == var_7};
    if (var_32) {
        std::cerr << "\nAssertion last_timestamp + 1 == Nt of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:409 failed!\n";
    };
}
struct allscale_type_2285;
typedef struct allscale_type_2285 allscale_type_2285;

struct allscale_type_2285 {
    char data[32];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2285> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2285> { using type = std::array<char,32u>; };

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19 {
    allscale::utils::Vector<long, 2 >& capture_pt;;
    void operator()(allscale::api::core::impl::reference::InputStream::IStreamWrapper& p2) const;
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_9_can_split;
typedef struct __wi_allscale_wi_9_can_split __wi_allscale_wi_9_can_split;

struct __wi_allscale_wi_9_name {
    static const char* name() { return "__wi_allscale_wi_9"; }
};

struct __wi_allscale_wi_9_variant_1;
typedef struct __wi_allscale_wi_9_variant_1 __wi_allscale_wi_9_variant_1;

struct __wi_allscale_wi_9_variant_0;
typedef struct __wi_allscale_wi_9_variant_0 __wi_allscale_wi_9_variant_0;

using __wi_allscale_wi_9_work = allscale::work_item_description<void, __wi_allscale_wi_9_name, allscale::do_serialization, __wi_allscale_wi_9_variant_0, __wi_allscale_wi_9_variant_1, __wi_allscale_wi_9_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2062(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_9_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 >){var_1}, &allscale_fun_2062)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_CheckFileExists(IMP_amdados_colon__colon_Configuration const& var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_1) { }
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LoadSensorLocations(IMP_amdados_colon__colon_Configuration const& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >& var_1) {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get(var_1);
    {
        (void)"Loading sensor locations ...";
    };
    const allscale::utils::Vector<long, 2 > var_3{((int64_t)var_0.asUInt("subdomain_x")), ((int64_t)var_0.asUInt("subdomain_y"))};
    const allscale::utils::Vector<long, 2 > var_4 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.size() == var_4};
    if (var_5) {
        std::cerr << "\nAssertion sensors.size() == GridSize of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:276 failed!\n";
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_4, INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)var_1});
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_6 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)IMP_amdados_colon__colon_MakeFileName(var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"sensors", std::allocator<char >{}});
    IMP_amdados_colon__colon_CheckFileExists(var_0, var_6);
    allscale::api::core::FileIOManager& var_7 = allscale::api::core::FileIOManager::getInstance();
    allscale::api::core::Entry var_8 = (allscale::api::core::Entry&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_7).createEntry(var_6, allscale::api::core::Mode::Text);
    allscale::api::core::InputStream var_9 = (allscale::api::core::InputStream&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_7).openInputStream((allscale::api::core::Entry const&)var_8);
    while (1 != 0) {
        allscale::utils::Vector<long, 2 > var_10;
        var_9.atomic(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19){var_10});
        if (!var_9) {
            break;
        };
        allscale::utils::Vector<long, 2 > var_11 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Glo2CellIndex_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_34_1(var_10, var_3);
        insieme::utils::detail::LazyAssertion var_12 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)0 <= var_11.x && var_11.x < var_4.x};
        if (var_12) {
            std::cerr << "\nAssertion (0 <= idx.x) && (idx.x < GridSize.x) of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:296 failed!\n";
        };
        insieme::utils::detail::LazyAssertion var_13 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(int64_t)0 <= var_11.y && var_11.y < var_4.y};
        if (var_13) {
            std::cerr << "\nAssertion (0 <= idx.y) && (idx.y < GridSize.y) of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:297 failed!\n";
        };
        var_2.operator[](var_11).push_back(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Glo2Sub_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_43_1(var_10, var_3));
    };
    ((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_7).close(var_9);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_ScenarioSimulation(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_0) {
    IMP_amdados_colon__colon_Configuration var_1;
    var_1.ReadConfigFile(var_0);
    IMP_amdados_colon__colon_InitDependentParams(var_1);
    var_1.PrintParameters();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_2 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >(IMP_amdados_colon__colon_GetGridSize(var_1));
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_3 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >(IMP_amdados_colon__colon_GetGridSize(var_1));
    IMP_amdados_colon__colon_LoadSensorLocations(var_1, var_2);
    IMP_amdados_colon__colon_LoadSensorMeasurements(var_1, var_2, var_3);
    const int32_t var_4 = var_1.IMP_asInt("num_subdomains_x");
    const int32_t var_5 = var_1.IMP_asInt("num_subdomains_y");
    int32_t var_6 = (int32_t)var_1.asUInt("Nt");
    std::cout << "Running AMDADOS full simulation   \" ";
    std::cout << "\" based on configuration file \"" << var_0;
    std::cout << "\" with domain size " << var_4 << "x" << var_5;
    std::cout << " for " << var_6 << " time steps ...\n";
    std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_7 = (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::_V2::system_clock::now();
    {
        (void)"Running the simulation with data assimilation ...";
    };
    IMP_amdados_colon__colon_RunDataAssimilation(var_1, var_2, var_3);
    std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_8 = (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::_V2::system_clock::now();
    std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > var_9 = (std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > const&)(var_8 - var_7);
    double var_10 = (double)((float)std::chrono::duration_cast<std::chrono::duration<int64_t, std::ratio<1, 1000 > >, int64_t, std::ratio<1, 1000000000 > >(var_9).count() / 1.0E+3f);
    std::cout << "Simulation took " << var_10 << "s\n";
    double var_11 = (double)(var_4 * var_5 * var_6) / var_10;
    std::cout << "Throughput: " << var_11 << " sub-domains/s\n";
}
/* ------- Function Definitions --------- */
int32_t IMP_main(int32_t var_0, char** var_1) {
    { };
    { };
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_2 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"simulation", std::allocator<char >{}};
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_3 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"amdados.conf", std::allocator<char >{}};
    {
        int32_t var_4 = 0;
        while (var_4 < var_0) {
            {
                std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_5 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1[var_4], std::allocator<char >{}};
                if (var_5 == "--scenario") {
                    if (++var_4 < var_0) {
                        var_2 = var_1[var_4];
                    };
                } else {
                    if (var_5 == "--config") {
                        if (++var_4 < var_0) {
                            var_3 = var_1[var_4];
                        };
                    } else {
                        if (var_5 == "--help" || var_5 == "-h") {
                            IMP_amdados_colon__colon_PrintHelp();
                            return 0;
                        };
                    };
                };
            };
            ++var_4;
        };
    };
    if (var_2 == "sensors") {
        IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_INFO}.operator<<("SCENARIO: generating random sensors");
        IMP_amdados_colon__colon_ScenarioSensors(var_3);
    } else {
        if (var_2.substr((uint64_t)0, (uint64_t)9) == "benchmark") {
            IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_INFO}.operator<<("SCENARIO: \'benchmark\'");
            int32_t var_6 = 10;
            if (var_2.size() > (uint64_t)9 && (int32_t)var_2.operator[]((uint64_t)9) == (int32_t)((char)':')) {
                var_6 = atoi(var_2.c_str() + 10);
            };
            IMP_amdados_colon__colon_ScenarioBenchmark(var_3, var_6);
        } else {
            IMP_MyLogger{MyLoggerLoggingTypeMY_LOGGING_INFO}.operator<<("SCENARIO: simulation with Allscale API");
            IMP_amdados_colon__colon_ScenarioSimulation(var_3);
        };
    };
    return 0;
    return 1;
}
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_3(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale::treeture<int32_t >(IMP_main(hpx::util::get<0 >(var_0), hpx::util::get<1 >(var_0)));
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_MyLogger::IMP_MyLogger(MyLoggerLoggingType var_1) { }
/* ------- Function Definitions --------- */
IMP_MyLogger::~IMP_MyLogger() { }
/* ------- Function Definitions --------- */
IMP_MyLogger& IMP_MyLogger::allscale_fun_421(int32_t const& var_1) {
    return *this;
}
/* ------- Function Definitions --------- */
IMP_MyLogger& IMP_MyLogger::operator<<(const char* var_1) {
    return *this;
}
/* ------- Function Definitions --------- */
void IMP_MyLogger::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_MyLogger& IMP_MyLogger::allscale_fun_243(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_1) {
    return *this;
}
/* ------- Function Definitions --------- */
IMP_MyLogger& IMP_MyLogger::allscale_fun_423(double const& var_1) {
    return *this;
}
/* ------- Function Definitions --------- */
IMP_MyLogger IMP_MyLogger::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
struct DummyCtorParamType {
    ;
    ;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& var_1, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& var_2, double&& var_3, amdadosConfigurationParamType&& var_4, DummyCtorParamType var_5) : name(var_1), svalue(var_2), dvalue(var_3), type(var_4) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration_colon__colon_Parameter IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::load(allscale::utils::ArchiveReader& var_0) {
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_1 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_2 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    double var_3 = var_0.read<double >();
    amdadosConfigurationParamType var_4 = var_0.read<amdadosConfigurationParamType >();
    DummyCtorParamType var_5;
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), var_5};
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).name);
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).svalue);
    var_1.write<double >((*this).dvalue);
    var_1.write<amdadosConfigurationParamType >((*this).type);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::IMP_amdados_colon__colon_Configuration_colon__colon_Parameter() : name(), svalue(), dvalue(0.0E+0), type(amdadosConfigurationParamTypeUNKNOWN_T) { }
struct allscale_type_130;
typedef struct allscale_type_130 allscale_type_130;

struct allscale_type_130 {
    char data[28];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_130> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_130> { using type = std::array<char,28u>; };

struct allscale_type_128;
typedef struct allscale_type_128 allscale_type_128;

struct allscale_type_128 {
    char data[178];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_128> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_128> { using type = std::array<char,178u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::CheckIntRange(double value) const {
    insieme::utils::detail::LazyAssertion var_2 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(double)std::numeric_limits<int>::lowest() <= value && value <= (double)std::numeric_limits<int>::max()};
    if (var_2) {
        std::cerr << "\nAssertion (std::numeric_limits<int>::lowest() <= value) && (value <= std::numeric_limits<int>::max()) of /root/work/allscale_amdados/code/app/src/configuration.cpp:142 failed!\n" << "the value \'" << value << "\' causes numerical overflow" << "\n" << "when converted to an integer parameter" << "\n";
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration::IMP_amdados_colon__colon_Configuration(std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > >&& var_1, DummyCtorParamType var_2) : m_params(var_1) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
int32_t IMP_amdados_colon__colon_Configuration::IMP_asInt(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeNUMERIC_T);
    (*this).CheckIntRange((*var_2.operator->()).second.dvalue);
    return (int32_t)floor((*var_2.operator->()).second.dvalue + 5.0E-1);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::PrintParameters() const { }
struct allscale_type_120;
typedef struct allscale_type_120 allscale_type_120;

struct allscale_type_120 {
    char data[95];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_120> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_120> { using type = std::array<char,95u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::CheckExist(bool var_1, const char* var_2) const {
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1};
    if (var_3) {
        std::cerr << "\nAssertion do_exist of /root/work/allscale_amdados/code/app/src/configuration.cpp:118 failed!\n" << "Parameter " << var_2 << " was not found" << "\n";
    };
    (void)(&var_1);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::IMP_SetDouble(const char* var_1, double var_2) {
    std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_3 = (std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    if (var_3 == (*this).m_params.end()) {
        IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& var_4 = (*this).m_params.operator[](std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
        var_4.name = var_1;
        var_4.dvalue = var_2;
        var_4.type = amdadosConfigurationParamTypeNUMERIC_T;
    } else {
        (*this).CheckType((*var_3.operator->()).second, amdadosConfigurationParamTypeNUMERIC_T);
        (*var_3.operator->()).second.dvalue = var_2;
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::IMP_SetString(const char* var_1, const char* var_2) {
    std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_3 = (std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    if (var_3 == (*this).m_params.end()) {
        IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& var_4 = (*this).m_params.operator[](std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
        var_4.name = var_1;
        var_4.svalue = var_2;
        var_4.type = amdadosConfigurationParamTypeSTRING_T;
    } else {
        (*this).CheckType((*var_3.operator->()).second, amdadosConfigurationParamTypeSTRING_T);
        (*var_3.operator->()).second.svalue = var_2;
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Configuration::IsExist(const char* var_1) const {
    return (*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}}) != (*this).m_params.end();
}
/* ------- Function Definitions --------- */
const char* IMP_amdados_colon__colon_Configuration::asCString(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeSTRING_T);
    return (*var_2.operator->()).second.svalue.c_str();
}
struct allscale_type_215;
typedef struct allscale_type_215 allscale_type_215;

struct allscale_type_215 {
    char data[93];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_215> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_215> { using type = std::array<char,93u>; };

/* ------- Function Definitions --------- */
uint64_t IMP_amdados_colon__colon_Configuration::asUInt(const char* var_1) const {
    int32_t var_2 = (*this).IMP_asInt(var_1);
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2 >= 0};
    if (var_3) {
        std::cerr << "\nAssertion v >= 0 of /root/work/allscale_amdados/code/app/src/configuration.cpp:165 failed!\n";
    };
    return (uint64_t)var_2;
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration::IMP_amdados_colon__colon_Configuration() : m_params() { }
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Configuration::IsInteger(const char* var_1) const {
    return (*this).IMP_asDouble(var_1) == (double)(*this).IMP_asInt(var_1);
}
/* ------- Function Definitions --------- */
double IMP_amdados_colon__colon_Configuration::IMP_asDouble(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeNUMERIC_T);
    return (*var_2.operator->()).second.dvalue;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > >((*this).m_params);
}
struct allscale_type_198;
typedef struct allscale_type_198 allscale_type_198;

struct allscale_type_198 {
    char data[41];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_198> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_198> { using type = std::array<char,41u>; };

struct allscale_type_162;
typedef struct allscale_type_162 allscale_type_162;

struct allscale_type_162 {
    char data[94];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_162> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_162> { using type = std::array<char,94u>; };

struct allscale_type_163;
typedef struct allscale_type_163 allscale_type_163;

struct allscale_type_163 {
    char data[42];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_163> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_163> { using type = std::array<char,42u>; };

struct allscale_type_175;
typedef struct allscale_type_175 allscale_type_175;

struct allscale_type_175 {
    char data[24];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_175> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_175> { using type = std::array<char,24u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_1) {
    std::basic_fstream<char, std::char_traits<char > > var_2{(var_1), (std::ios_base::in)};
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(*(std::basic_ios<char, std::char_traits<char > >*)(&var_2)).good()};
    if (var_3) {
        std::cerr << "\nAssertion f.good() of /root/work/allscale_amdados/code/app/src/configuration.cpp:37 failed!\n" << "ERROR: failed to open configuration file " << var_1;
    };
    int32_t var_4 = 1;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_5;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_6;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_7;
    while ((*(std::basic_ios<char, std::char_traits<char > >*)(&std::getline(*(std::basic_istream<char, std::char_traits<char > >*)(&var_2), var_5)))) {
        if (var_5.empty()) {
            continue;
        };
        std::__cxx11::basic_stringstream<char, std::char_traits<char >, std::allocator<char > > var_8{(var_5), (std::ios_base::out | std::ios_base::in)};
        {
            int32_t var_9 = 1;
            while ((*(std::basic_ios<char, std::char_traits<char > >*)(&(*(std::basic_istream<char, std::char_traits<char > >*)(&var_8) >> var_6)))) {
                {
                    insieme::utils::detail::LazyAssertion var_10 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_9 <= 3};
                    if (var_10) {
                        std::cerr << "\nAssertion count <= 3 of /root/work/allscale_amdados/code/app/src/configuration.cpp:48 failed!\n" << "ERROR at line " << var_1 << ":" << var_4 << "\n" << "the valid line layout: " << "\'<comment>\' or \'<name> <value> <comment>\'";
                    };
                    if (!var_6.empty() && (int32_t)var_6.operator[]((uint64_t)0) == (int32_t)((char)'#')) {
                        insieme::utils::detail::LazyAssertion var_11 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_9 == 1 || var_9 == 3};
                        if (var_11) {
                            std::cerr << "\nAssertion (count == 1) || (count == 3) of /root/work/allscale_amdados/code/app/src/configuration.cpp:55 failed!\n" << "ERROR at line " << var_1 << ":" << var_4 << "\n" << "comment may present in the " << "1st or the 3rd token in a line";
                        };
                        break;
                    };
                    if (var_9 == 1) {
                        var_7 = var_6;
                    } else {
                        if (var_9 == 2) {
                            double var_12 = 0.0E+0;
                            if (sscanf(var_6.c_str(), "%lf", &var_12) == 1) {
                                (*this).IMP_SetDouble(var_7.c_str(), var_12);
                            } else {
                                (*this).IMP_SetString(var_7.c_str(), var_6.c_str());
                            };
                        };
                    };
                };
                ++var_9;
            };
        };
        insieme::utils::detail::LazyAssertion var_13 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{!(*(std::basic_ios<char, std::char_traits<char > >*)(&var_2)).bad()};
        if (var_13) {
            std::cerr << "\nAssertion !f.bad() of /root/work/allscale_amdados/code/app/src/configuration.cpp:75 failed!\n" << "ERROR at line " << var_1 << ":" << var_4 << "\n" << "failure while reading configuration file";
        };
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration IMP_amdados_colon__colon_Configuration::load(allscale::utils::ArchiveReader& var_0) {
    std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > var_1 = var_0.read<std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& IMP_amdados_colon__colon_Configuration::asString(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeSTRING_T);
    return (*var_2.operator->()).second.svalue;
}
struct allscale_type_138;
typedef struct allscale_type_138 allscale_type_138;

struct allscale_type_138 {
    char data[105];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_138> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_138> { using type = std::array<char,105u>; };

struct allscale_type_136;
typedef struct allscale_type_136 allscale_type_136;

struct allscale_type_136 {
    char data[106];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_136> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_136> { using type = std::array<char,106u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::CheckType(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& var_1, amdadosConfigurationParamType var_2) const {
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.type != amdadosConfigurationParamTypeUNKNOWN_T};
    if (var_3) {
        std::cerr << "\nAssertion p.type != UNKNOWN_T of /root/work/allscale_amdados/code/app/src/configuration.cpp:129 failed!\n" << "Parameter " << var_1.name << " has no type defined" << "\n";
    };
    insieme::utils::detail::LazyAssertion var_4 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.type == var_2};
    if (var_4) {
        std::cerr << "\nAssertion p.type == expected of /root/work/allscale_amdados/code/app/src/configuration.cpp:131 failed!\n" << "Parameter " << var_1.name << " is expected to be a " << (var_2 == amdadosConfigurationParamTypeNUMERIC_T ? "numeric" : "string") << "\n";
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::SetInt(const char* var_1, int32_t var_2) {
    (*this).IMP_SetDouble(var_1, (double)var_2);
    (*this).CheckIntRange((double)var_2);
}
/* ------- Function Definitions --------- */
const double* IMP_amdados_colon__colon_Vector::begin() const {
    return (const double*)(&(*this).m_data.cbegin().operator*());
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Vector::Clear() {
    (*this).m_data.clear();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Vector::IMP_amdados_colon__colon_Vector(std::vector<double, std::allocator<double > >&& var_1, DummyCtorParamType var_2) : m_data(var_1) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Vector IMP_amdados_colon__colon_Vector::load(allscale::utils::ArchiveReader& var_0) {
    std::vector<double, std::allocator<double > > var_1 = var_0.read<std::vector<double, std::allocator<double > > >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
double const& IMP_amdados_colon__colon_Vector::operator()(int64_t value) const {
    if (!((uint32_t)value < (uint32_t)(*this).m_data.size())) {
        insieme::utils::detail::LazyAssertion var_2 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
        if (var_2) {
            std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/include/amdados/app/matrix.h:50 failed!\n";
        };
    };
    return (*this).m_data.operator[]((uint64_t)value);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Vector::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::vector<double, std::allocator<double > > >((*this).m_data);
}
/* ------- Function Definitions --------- */
double* IMP_amdados_colon__colon_Vector::begin() {
    return (double*)(&(*this).m_data.begin().operator*());
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Vector::IsDistinct(IMP_amdados_colon__colon_Vector const& var_1) const {
    return &(*this).m_data != &var_1.m_data;
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Vector::Size() const {
    return (int64_t)(*this).m_data.size();
}
/* ------- Function Definitions --------- */
const double* IMP_amdados_colon__colon_Vector::end() const {
    return (const double*)(&(*this).m_data.cend().operator*());
}
/* ------- Function Definitions --------- */
double* IMP_amdados_colon__colon_Vector::end() {
    return (double*)(&(*this).m_data.end().operator*());
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Vector& IMP_amdados_colon__colon_Vector::operator=(IMP_amdados_colon__colon_Vector const& var_1) {
    (*this).m_data = var_1.m_data;
    return *this;
}
/* ------- Function Definitions --------- */
double& IMP_amdados_colon__colon_Vector::operator()(int64_t value) {
    if (!((uint32_t)value < (uint32_t)(*this).m_data.size())) {
        insieme::utils::detail::LazyAssertion var_2 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
        if (var_2) {
            std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/include/amdados/app/matrix.h:61 failed!\n";
        };
    };
    return (*this).m_data.operator[]((uint64_t)value);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Vector::Resize(int64_t value, bool var_2) {
    if (var_2) {
        (*this).m_data.clear();
    };
    (*this).m_data.resize((uint64_t)value);
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Vector::SameSize(IMP_amdados_colon__colon_Vector const& var_1) const {
    return (*this).m_data.size() == var_1.m_data.size();
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Vector::IMP_amdados_colon__colon_Vector(int64_t value) : m_data((uint64_t)value, std::allocator<double >{}) { }
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Vector::Empty() const {
    return (*this).m_data.empty();
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Vector::IMP_amdados_colon__colon_Vector(IMP_amdados_colon__colon_Vector&& var_1) : m_data() {
    (*this).m_data.swap(var_1.m_data);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Vector::IMP_amdados_colon__colon_Vector() : m_data() { }
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::Resize(int64_t value, int64_t i, bool a) {
    (*(IMP_amdados_colon__colon_Vector*)this).Resize(value * i, a);
    (*this).m_nrows = value;
    (*this).m_ncols = i;
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Matrix::SameSizeTr(IMP_amdados_colon__colon_Matrix const& var_1) const {
    return (*this).m_nrows == var_1.m_ncols && (*this).m_ncols == var_1.m_nrows;
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix const& var_1) : IMP_amdados_colon__colon_Vector((IMP_amdados_colon__colon_Vector const&)var_1), m_nrows(var_1.m_nrows), m_ncols(var_1.m_ncols) { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix IMP_amdados_colon__colon_Matrix::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1;
    var_1.m_nrows = var_0.read<int64_t >();
    var_1.m_ncols = var_0.read<int64_t >();
    (*(IMP_amdados_colon__colon_Vector*)(&var_1)).m_data.resize((uint64_t)(var_1.m_nrows * var_1.m_ncols));
    var_0.read<double >((*(IMP_amdados_colon__colon_Vector*)(&var_1)).m_data.data(), (*(IMP_amdados_colon__colon_Vector*)(&var_1)).m_data.size());
    return (IMP_amdados_colon__colon_Matrix&&)var_1;
}
struct allscale_type_549;
typedef struct allscale_type_549 allscale_type_549;

struct allscale_type_549 {
    char data[134];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_549> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_549> { using type = std::array<char,134u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::store(allscale::utils::ArchiveWriter& var_1) const {
    insieme::utils::detail::LazyAssertion var_2 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(*(const IMP_amdados_colon__colon_Vector*)this).m_data.size() == (uint64_t)((*this).m_nrows * (*this).m_ncols)};
    if (var_2) {
        std::cerr << "\nAssertion m_data.size() == static_cast<size_t>(m_nrows * m_ncols) of /root/work/allscale_amdados/code/app/src/matrix.cpp:40 failed!\n";
    };
    var_1.write<int64_t >((*this).m_nrows);
    var_1.write<int64_t >((*this).m_ncols);
    var_1.write<double >((*(const IMP_amdados_colon__colon_Vector*)this).m_data.data(), (*(const IMP_amdados_colon__colon_Vector*)this).m_data.size());
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::swap(IMP_amdados_colon__colon_Matrix& var_1) {
    (*(IMP_amdados_colon__colon_Vector*)this).m_data.swap(((IMP_amdados_colon__colon_Vector&)var_1).m_data);
    std::swap((*this).m_nrows, var_1.m_nrows);
    std::swap((*this).m_ncols, var_1.m_ncols);
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Matrix::NRows() const {
    return (*this).m_nrows;
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Matrix::SameSize(IMP_amdados_colon__colon_Matrix const& var_1) const {
    return (*this).m_nrows == var_1.m_nrows && (*this).m_ncols == var_1.m_ncols;
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Matrix::Size() const {
    return (*this).m_nrows * (*this).m_ncols;
}
/* ------- Function Definitions --------- */
double const& IMP_amdados_colon__colon_Matrix::operator()(int64_t value, int64_t i) const {
    if (!((uint32_t)value < (uint32_t)(*this).m_nrows && (uint32_t)i < (uint32_t)(*this).m_ncols)) {
        insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
        if (var_3) {
            std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/include/amdados/app/matrix.h:184 failed!\n";
        };
    };
    return (*(const IMP_amdados_colon__colon_Vector*)this).operator()(value * (*this).m_ncols + i);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix&& var_1) : IMP_amdados_colon__colon_Vector((IMP_amdados_colon__colon_Vector&&)std::move(var_1)), m_nrows(var_1.m_nrows), m_ncols(var_1.m_ncols) {
    var_1.m_nrows = (int64_t)0;
    var_1.m_ncols = (int64_t)0;
}
/* ------- Function Definitions --------- */
double& IMP_amdados_colon__colon_Matrix::operator()(int64_t value, int64_t i) {
    if (!((uint32_t)value < (uint32_t)(*this).m_nrows && (uint32_t)i < (uint32_t)(*this).m_ncols)) {
        insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
        if (var_3) {
            std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/include/amdados/app/matrix.h:197 failed!\n";
        };
    };
    return (*(IMP_amdados_colon__colon_Vector*)this).operator()(value * (*this).m_ncols + i);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix() : IMP_amdados_colon__colon_Vector(), m_nrows((int64_t)0), m_ncols((int64_t)0) { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix(int64_t value, int64_t i) : IMP_amdados_colon__colon_Vector(value * i), m_nrows(value), m_ncols(i) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Matrix::NCols() const {
    return (*this).m_ncols;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::Clear() {
    (*(IMP_amdados_colon__colon_Vector*)this).Clear();
    (*this).m_nrows = (int64_t)0;
    (*this).m_ncols = (int64_t)0;
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Matrix::IsSquare() const {
    return (*this).m_nrows == (*this).m_ncols;
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix& IMP_amdados_colon__colon_Matrix::operator=(IMP_amdados_colon__colon_Matrix const& var_1) {
    (*(IMP_amdados_colon__colon_Vector*)this).operator=((IMP_amdados_colon__colon_Vector const&)var_1);
    (*this).m_nrows = var_1.m_nrows;
    (*this).m_ncols = var_1.m_ncols;
    return *this;
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13::operator()(int64_t value) const {
    return (bool)false;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Cholesky::IMP_amdados_colon__colon_Cholesky() : m_L() { }
/* ------- Function Definitions --------- */
struct allscale_type_1168;
typedef struct allscale_type_1168 allscale_type_1168;

struct allscale_type_1168 {
    char data[131];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1168> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1168> { using type = std::array<char,131u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::Solve(IMP_amdados_colon__colon_Vector& var_1, IMP_amdados_colon__colon_Vector const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_L;
    const int64_t var_4 = var_3.NRows();
    insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.Size() == var_4 && var_2.Size() == var_4};
    if (var_5) {
        std::cerr << "\nAssertion ((x.Size() == N) && (b.Size() == N)) of /root/work/allscale_amdados/code/app/include/amdados/app/cholesky.h:84 failed!\n";
    };
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_4; ++var_6) {
            {
                double var_7 = var_2.operator()(var_6);
                {
                    int64_t var_8 = var_6 - (int64_t)1;
                    while (var_8 >= (int64_t)0) {
                        var_7 -= var_3.operator()(var_6, var_8) * var_1.operator()(var_8);
                        var_8--;
                    };
                };
                var_1.operator()(var_6) = var_7 / var_3.operator()(var_6, var_6);
            };
        };
    };
    {
        int64_t var_9 = var_4 - (int64_t)1;
        while (var_9 >= (int64_t)0) {
            {
                double var_10 = var_1.operator()(var_9);
                {
                    for (int64_t var_11 = var_9 + (int64_t)1; var_11 < var_4; ++var_11) {
                        var_10 -= var_3.operator()(var_11, var_9) * var_1.operator()(var_11);
                    };
                };
                var_1.operator()(var_9) = var_10 / var_3.operator()(var_9, var_9);
            };
            var_9--;
        };
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Cholesky IMP_amdados_colon__colon_Cholesky::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_L);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Cholesky::IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Matrix&& var_1, DummyCtorParamType var_2) : m_L(var_1) { }
struct allscale_type_1162;
typedef struct allscale_type_1162 allscale_type_1162;

struct allscale_type_1162 {
    char data[132];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1162> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1162> { using type = std::array<char,132u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::BatchSolveTr(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_L;
    const int64_t var_4 = var_3.NRows();
    const int64_t var_5 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_4 == var_1.NRows() && var_1.SameSizeTr(var_2)};
    if (var_6) {
        std::cerr << "\nAssertion (N == X.NRows()) && X.SameSizeTr(Bt) of /root/work/allscale_amdados/code/app/include/amdados/app/cholesky.h:138 failed!\n";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_5; ++var_7) {
            {
                {
                    for (int64_t var_8 = (int64_t)0; var_8 < var_4; ++var_8) {
                        {
                            double var_9 = var_2.operator()(var_7, var_8);
                            {
                                int64_t var_10 = var_8 - (int64_t)1;
                                while (var_10 >= (int64_t)0) {
                                    var_9 -= var_3.operator()(var_8, var_10) * var_1.operator()(var_10, var_7);
                                    var_10--;
                                };
                            };
                            var_1.operator()(var_8, var_7) = var_9 / var_3.operator()(var_8, var_8);
                        };
                    };
                };
                {
                    int64_t var_11 = var_4 - (int64_t)1;
                    while (var_11 >= (int64_t)0) {
                        {
                            double var_12 = var_1.operator()(var_11, var_7);
                            {
                                for (int64_t var_13 = var_11 + (int64_t)1; var_13 < var_4; ++var_13) {
                                    var_12 -= var_3.operator()(var_13, var_11) * var_1.operator()(var_13, var_7);
                                };
                            };
                            var_1.operator()(var_11, var_7) = var_12 / var_3.operator()(var_11, var_11);
                        };
                        var_11--;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::BatchSolve(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_L;
    const int64_t var_4 = var_3.NRows();
    const int64_t var_5 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_4 == var_1.NRows() && var_1.SameSize(var_2)};
    if (var_6) {
        std::cerr << "\nAssertion (N == X.NRows()) && X.SameSize(B) of /root/work/allscale_amdados/code/app/include/amdados/app/cholesky.h:110 failed!\n";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_5; ++var_7) {
            {
                {
                    for (int64_t var_8 = (int64_t)0; var_8 < var_4; ++var_8) {
                        {
                            double var_9 = var_2.operator()(var_8, var_7);
                            {
                                int64_t var_10 = var_8 - (int64_t)1;
                                while (var_10 >= (int64_t)0) {
                                    var_9 -= var_3.operator()(var_8, var_10) * var_1.operator()(var_10, var_7);
                                    var_10--;
                                };
                            };
                            var_1.operator()(var_8, var_7) = var_9 / var_3.operator()(var_8, var_8);
                        };
                    };
                };
                {
                    int64_t var_11 = var_4 - (int64_t)1;
                    while (var_11 >= (int64_t)0) {
                        {
                            double var_12 = var_1.operator()(var_11, var_7);
                            {
                                for (int64_t var_13 = var_11 + (int64_t)1; var_13 < var_4; ++var_13) {
                                    var_12 -= var_3.operator()(var_13, var_11) * var_1.operator()(var_13, var_7);
                                };
                            };
                            var_1.operator()(var_11, var_7) = var_12 / var_3.operator()(var_11, var_11);
                        };
                        var_11--;
                    };
                };
            };
        };
    };
}
struct allscale_type_1165;
typedef struct allscale_type_1165 allscale_type_1165;

struct allscale_type_1165 {
    char data[107];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1165> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1165> { using type = std::array<char,107u>; };

struct allscale_type_409;
typedef struct allscale_type_409 allscale_type_409;

struct allscale_type_409 {
    char data[23];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_409> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_409> { using type = std::array<char,23u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::Init(IMP_amdados_colon__colon_Matrix const& var_1) {
    const double var_2 = std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3);
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.IsSquare()};
    if (var_3) {
        std::cerr << "\nAssertion A.IsSquare() of /root/work/allscale_amdados/code/app/include/amdados/app/cholesky.h:47 failed!\n";
    };
    const int64_t var_4 = var_1.NRows();
    (*this).m_L.operator=(var_1);
    IMP_amdados_colon__colon_Matrix& var_5 = (*this).m_L;
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_4; ++var_6) {
            {
                for (int64_t var_7 = var_6; var_7 < var_4; ++var_7) {
                    {
                        if (var_5.operator()(var_7, var_6) != var_5.operator()(var_6, var_7)) {
                            insieme::utils::detail::LazyAssertion var_8 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
                            if (var_8) {
                                std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/include/amdados/app/cholesky.h:57 failed!\n" << "Cholesky expects a symmetric matrix";
                            };
                        };
                        double var_9 = var_5.operator()(var_6, var_7);
                        {
                            int64_t var_10 = var_6 - (int64_t)1;
                            while (var_10 >= (int64_t)0) {
                                var_9 -= var_5.operator()(var_6, var_10) * var_5.operator()(var_7, var_10);
                                var_10--;
                            };
                        };
                        if (var_6 == var_7) {
                            insieme::utils::detail::LazyAssertion var_11 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_9 > var_2};
                            if (var_11) {
                                std::cerr << "\nAssertion sum > TINY of /root/work/allscale_amdados/code/app/include/amdados/app/cholesky.h:63 failed!\n" << "Cholesky failed, sum: " << var_9;
                            };
                            var_5.operator()(var_6, var_6) = sqrt(var_9);
                        } else {
                            var_5.operator()(var_7, var_6) = var_9 / var_5.operator()(var_6, var_6);
                        };
                    };
                };
            };
        };
    };
    {
        for (int64_t var_12 = (int64_t)0; var_12 < var_4; ++var_12) {
            {
                for (int64_t var_13 = (int64_t)0; var_13 < var_12; ++var_13) {
                    var_5.operator()(var_13, var_12) = 0.0E+0;
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_LUdecomposition::IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_Matrix&& var_1, std::vector<int64_t, std::allocator<int64_t > >&& var_2, DummyCtorParamType var_3) : m_LU(var_1), m_Perm(var_2) { }
struct allscale_type_1199;
typedef struct allscale_type_1199 allscale_type_1199;

struct allscale_type_1199 {
    char data[123];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1199> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1199> { using type = std::array<char,123u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::BatchSolve(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_LU;
    const int64_t* var_4 = (*this).m_Perm.data();
    const int64_t var_5 = var_3.NRows();
    const int64_t var_6 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_5 == var_1.NRows() && var_1.SameSize(var_2)};
    if (var_7) {
        std::cerr << "\nAssertion (N == X.NRows()) && X.SameSize(B) of /root/work/allscale_amdados/code/app/include/amdados/app/lu.h:133 failed!\n";
    };
    {
        for (int64_t var_8 = (int64_t)0; var_8 < var_6; ++var_8) {
            {
                {
                    for (int64_t var_9 = (int64_t)0; var_9 < var_5; ++var_9) {
                        {
                            const int64_t var_10 = var_4[var_9];
                            var_1.operator()(var_9, var_8) = var_2.operator()(var_10, var_8);
                            {
                                for (int64_t var_11 = (int64_t)0; var_11 < var_9; ++var_11) {
                                    var_1.operator()(var_9, var_8) -= var_3.operator()(var_10, var_11) * var_1.operator()(var_11, var_8);
                                };
                            };
                        };
                    };
                };
                {
                    int64_t var_12 = var_5 - (int64_t)1;
                    while (var_12 >= (int64_t)0) {
                        {
                            const int64_t var_13 = var_4[var_12];
                            {
                                for (int64_t var_14 = var_12 + (int64_t)1; var_14 < var_5; ++var_14) {
                                    var_1.operator()(var_12, var_8) -= var_3.operator()(var_13, var_14) * var_1.operator()(var_14, var_8);
                                };
                            };
                            var_1.operator()(var_12, var_8) /= var_3.operator()(var_13, var_12);
                        };
                        --var_12;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
struct allscale_type_1204;
typedef struct allscale_type_1204 allscale_type_1204;

struct allscale_type_1204 {
    char data[101];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1204> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1204> { using type = std::array<char,101u>; };

struct allscale_type_1210;
typedef struct allscale_type_1210 allscale_type_1210;

struct allscale_type_1210 {
    char data[26];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1210> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1210> { using type = std::array<char,26u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::Init(IMP_amdados_colon__colon_Matrix const& var_1) {
    const double var_2 = std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3);
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.IsSquare()};
    if (var_3) {
        std::cerr << "\nAssertion M.IsSquare() of /root/work/allscale_amdados/code/app/include/amdados/app/lu.h:48 failed!\n";
    };
    const int64_t var_4 = var_1.NRows();
    (*this).m_LU.operator=(var_1);
    (*this).m_Perm.resize((uint64_t)var_4);
    IMP_amdados_colon__colon_Matrix& var_5 = (*this).m_LU;
    int64_t* var_6 = (*this).m_Perm.data();
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_4; ++var_7) {
            var_6[var_7] = var_7;
        };
    };
    {
        for (int64_t var_8 = (int64_t)0, _end = var_4 - (int64_t)1; var_8 < _end; ++var_8) {
            {
                double var_9 = 0.0E+0;
                int64_t var_10 = var_8;
                {
                    for (int64_t var_11 = var_8; var_11 < var_4; ++var_11) {
                        {
                            double var_12 = fabs(var_5.operator()(var_6[var_11], var_8));
                            if (var_9 < var_12) {
                                var_9 = var_12;
                                var_10 = var_11;
                            };
                        };
                    };
                };
                insieme::utils::detail::LazyAssertion var_13 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_9 > var_2};
                if (var_13) {
                    std::cerr << "\nAssertion maxA > TINY of /root/work/allscale_amdados/code/app/include/amdados/app/lu.h:76 failed!\n" << "LU failed, max. element: " << var_9;
                };
                if (var_8 != var_10) {
                    std::swap(var_6[var_8], var_6[var_10]);
                };
                {
                    for (int64_t var_14 = var_8 + (int64_t)1; var_14 < var_4; ++var_14) {
                        {
                            const int64_t var_15 = var_6[var_14];
                            const int64_t var_16 = var_6[var_8];
                            const double var_17 = var_5.operator()(var_15, var_8) /= var_5.operator()(var_16, var_8);
                            {
                                for (int64_t var_18 = var_8 + (int64_t)1; var_18 < var_4; ++var_18) {
                                    var_5.operator()(var_15, var_18) -= var_17 * var_5.operator()(var_16, var_18);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::Solve(IMP_amdados_colon__colon_Vector& var_1, IMP_amdados_colon__colon_Vector const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_LU;
    const int64_t* var_4 = (*this).m_Perm.data();
    const int64_t var_5 = var_3.NRows();
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.Size() == var_5 && var_2.Size() == var_5};
    if (var_6) {
        std::cerr << "\nAssertion ((x.Size() == N) && (b.Size() == N)) of /root/work/allscale_amdados/code/app/include/amdados/app/lu.h:106 failed!\n";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_5; ++var_7) {
            {
                const int64_t var_8 = var_4[var_7];
                var_1.operator()(var_7) = var_2.operator()(var_8);
                {
                    for (int64_t var_9 = (int64_t)0; var_9 < var_7; ++var_9) {
                        var_1.operator()(var_7) -= var_3.operator()(var_8, var_9) * var_1.operator()(var_9);
                    };
                };
            };
        };
    };
    {
        int64_t var_10 = var_5 - (int64_t)1;
        while (var_10 >= (int64_t)0) {
            {
                const int64_t var_11 = var_4[var_10];
                {
                    for (int64_t var_12 = var_10 + (int64_t)1; var_12 < var_5; ++var_12) {
                        var_1.operator()(var_10) -= var_3.operator()(var_11, var_12) * var_1.operator()(var_12);
                    };
                };
                var_1.operator()(var_10) /= var_3.operator()(var_11, var_10);
            };
            --var_10;
        };
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_LUdecomposition IMP_amdados_colon__colon_LUdecomposition::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    std::vector<int64_t, std::allocator<int64_t > > var_2 = var_0.read<std::vector<int64_t, std::allocator<int64_t > > >();
    DummyCtorParamType var_3;
    return {std::move(var_1), std::move(var_2), var_3};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::BatchSolveTr(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_LU;
    const int64_t* var_4 = (*this).m_Perm.data();
    const int64_t var_5 = var_3.NRows();
    const int64_t var_6 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_5 == var_1.NRows() && var_1.SameSizeTr(var_2)};
    if (var_7) {
        std::cerr << "\nAssertion (N == X.NRows()) && X.SameSizeTr(Bt) of /root/work/allscale_amdados/code/app/include/amdados/app/lu.h:162 failed!\n";
    };
    {
        for (int64_t var_8 = (int64_t)0; var_8 < var_6; ++var_8) {
            {
                {
                    for (int64_t var_9 = (int64_t)0; var_9 < var_5; ++var_9) {
                        {
                            const int64_t var_10 = var_4[var_9];
                            var_1.operator()(var_9, var_8) = var_2.operator()(var_8, var_10);
                            {
                                for (int64_t var_11 = (int64_t)0; var_11 < var_9; ++var_11) {
                                    var_1.operator()(var_9, var_8) -= var_3.operator()(var_10, var_11) * var_1.operator()(var_11, var_8);
                                };
                            };
                        };
                    };
                };
                {
                    int64_t var_12 = var_5 - (int64_t)1;
                    while (var_12 >= (int64_t)0) {
                        {
                            const int64_t var_13 = var_4[var_12];
                            {
                                for (int64_t var_14 = var_12 + (int64_t)1; var_14 < var_5; ++var_14) {
                                    var_1.operator()(var_12, var_8) -= var_3.operator()(var_13, var_14) * var_1.operator()(var_14, var_8);
                                };
                            };
                            var_1.operator()(var_12, var_8) /= var_3.operator()(var_13, var_12);
                        };
                        --var_12;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_LUdecomposition::IMP_amdados_colon__colon_LUdecomposition() : m_LU(), m_Perm() { }
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_LU);
    var_1.write<std::vector<int64_t, std::allocator<int64_t > > >((*this).m_Perm);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_KalmanFilter::IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_Cholesky&& var_1, IMP_amdados_colon__colon_LUdecomposition&& var_2, IMP_amdados_colon__colon_Vector&& var_3, IMP_amdados_colon__colon_Vector&& var_4, IMP_amdados_colon__colon_Vector&& var_5, IMP_amdados_colon__colon_Matrix&& var_6, IMP_amdados_colon__colon_Matrix&& var_7, IMP_amdados_colon__colon_Matrix&& var_8, IMP_amdados_colon__colon_Matrix&& var_9, IMP_amdados_colon__colon_Matrix&& var_10, DummyCtorParamType var_11) : m_chol(var_1), m_lu(var_2), m_x_tmp(var_3), m_y(var_4), m_invSy(var_5), m_S(var_6), m_P_tmp(var_7), m_PHt(var_8), m_HP(var_9), m_invSHP(var_10) { }
/* ------- Function Definitions --------- */
double* allscale_fun_1245(double* lhs, double value) {
    *lhs = value;
    return lhs;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Symmetrize(IMP_amdados_colon__colon_Matrix& var_0) {
    const int64_t var_1 = var_0.NRows();
    insieme::utils::detail::LazyAssertion var_2 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsSquare()};
    if (var_2) {
        std::cerr << "\nAssertion A.IsSquare() of /root/work/allscale_amdados/code/app/src/matrix.cpp:186 failed!\n";
    };
    {
        for (int64_t var_3 = (int64_t)0; var_3 < var_1; ++var_3) {
            {
                for (int64_t var_4 = var_3 + (int64_t)1; var_4 < var_1; ++var_4) {
                    var_0.operator()(var_4, var_3) = *allscale_fun_1245(&var_0.operator()(var_3, var_4), 5.0E-1 * (var_0.operator()(var_4, var_3) + var_0.operator()(var_3, var_4)));
                };
            };
        };
    };
}
struct allscale_type_1238;
typedef struct allscale_type_1238 allscale_type_1238;

struct allscale_type_1238 {
    char data[120];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1238> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1238> { using type = std::array<char,120u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_AddMatrices(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.SameSize(var_1) && var_0.SameSize(var_2)};
    if (var_3) {
        std::cerr << "\nAssertion result.SameSize(A) && result.SameSize(B) of /root/work/allscale_amdados/code/app/src/matrix.cpp:135 failed!\n";
    };
    std::transform(((IMP_amdados_colon__colon_Vector const&)var_1).begin(), ((IMP_amdados_colon__colon_Vector const&)var_1).end(), ((IMP_amdados_colon__colon_Vector const&)var_2).begin(), ((IMP_amdados_colon__colon_Vector&)var_0).begin(), (std::plus<double >&&)std::plus<double >{});
}
struct allscale_type_1236;
typedef struct allscale_type_1236 allscale_type_1236;

struct allscale_type_1236 {
    char data[130];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1236> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1236> { using type = std::array<char,130u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_KalmanFilter::PropagateStateInverse(IMP_amdados_colon__colon_Vector& var_1, IMP_amdados_colon__colon_Matrix& var_2, IMP_amdados_colon__colon_Matrix const& var_3, IMP_amdados_colon__colon_Matrix const& var_4) {
    const int64_t var_5 = var_1.Size();
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.NRows() == var_5 && var_2.NCols() == var_5};
    if (var_6) {
        std::cerr << "\nAssertion (P.NRows() == N) && (P.NCols() == N) of /root/work/allscale_amdados/code/app/include/amdados/app/kalman_filter.h:69 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3.SameSize(var_2) && var_4.SameSize(var_2)};
    if (var_7) {
        std::cerr << "\nAssertion B.SameSize(P) && Q.SameSize(P) of /root/work/allscale_amdados/code/app/include/amdados/app/kalman_filter.h:70 failed!\n";
    };
    (*this).m_x_tmp.operator=(var_1);
    (*this).m_P_tmp.operator=(var_2);
    (*this).m_lu.Init(var_3);
    (*this).m_lu.Solve(var_1, (*this).m_x_tmp);
    (*this).m_lu.BatchSolve((*this).m_P_tmp, var_2);
    (*this).m_lu.BatchSolveTr(var_2, (*this).m_P_tmp);
    IMP_amdados_colon__colon_AddMatrices(var_2, var_2, var_4);
    IMP_amdados_colon__colon_Symmetrize(var_2);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_KalmanFilter::IMP_amdados_colon__colon_KalmanFilter() : m_chol(), m_lu(), m_x_tmp(), m_y(), m_invSy(), m_S(), m_P_tmp(), m_PHt(), m_HP(), m_invSHP() { }
struct allscale_type_1252;
typedef struct allscale_type_1252 allscale_type_1252;

struct allscale_type_1252 {
    char data[99];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1252> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1252> { using type = std::array<char,99u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MatVecMult(IMP_amdados_colon__colon_Vector& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Vector const& var_2) {
    const int64_t var_3 = var_1.NRows();
    const int64_t var_4 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.IsDistinct(var_2)};
    if (var_5) {
        std::cerr << "\nAssertion result.IsDistinct(v) of /root/work/allscale_amdados/code/app/src/matrix.cpp:99 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.Size() == var_3 && var_2.Size() == var_4};
    if (var_6) {
        std::cerr << "\nAssertion (result.Size() == nrows) && (v.Size() == ncols) of /root/work/allscale_amdados/code/app/src/matrix.cpp:100 failed!\n";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_3; ++var_7) {
            {
                double var_8 = 0.0E+0;
                {
                    for (int64_t var_9 = (int64_t)0; var_9 < var_4; ++var_9) {
                        var_8 += var_1.operator()(var_7, var_9) * var_2.operator()(var_9);
                    };
                };
                var_0.operator()(var_7) = var_8;
            };
        };
    };
}
struct allscale_type_1258;
typedef struct allscale_type_1258 allscale_type_1258;

struct allscale_type_1258 {
    char data[157];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1258> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1258> { using type = std::array<char,157u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MatMultTr(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    const int64_t var_3 = var_1.NRows();
    const int64_t var_4 = var_2.NRows();
    const int64_t var_5 = var_2.NCols();
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{((IMP_amdados_colon__colon_Vector&)var_0).IsDistinct((IMP_amdados_colon__colon_Vector const&)var_1) && ((IMP_amdados_colon__colon_Vector&)var_0).IsDistinct((IMP_amdados_colon__colon_Vector const&)var_2)};
    if (var_6) {
        std::cerr << "\nAssertion result.IsDistinct(A) && result.IsDistinct(B) of /root/work/allscale_amdados/code/app/src/matrix.cpp:81 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.NRows() == var_3 && var_0.NCols() == var_4 && var_1.NCols() == var_5};
    if (var_7) {
        std::cerr << "\nAssertion (result.NRows() == nrows) && (result.NCols() == ncols) && (A.NCols() == msize) of /root/work/allscale_amdados/code/app/src/matrix.cpp:83 failed!\n";
    };
    {
        for (int64_t var_8 = (int64_t)0; var_8 < var_3; ++var_8) {
            {
                for (int64_t var_9 = (int64_t)0; var_9 < var_4; ++var_9) {
                    {
                        double var_10 = 0.0E+0;
                        {
                            for (int64_t var_11 = (int64_t)0; var_11 < var_5; ++var_11) {
                                var_10 += var_1.operator()(var_8, var_11) * var_2.operator()(var_9, var_11);
                            };
                        };
                        var_0.operator()(var_8, var_9) = var_10;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MatMult(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    const int64_t var_3 = var_1.NRows();
    const int64_t var_4 = var_1.NCols();
    const int64_t var_5 = var_2.NCols();
    insieme::utils::detail::LazyAssertion var_6 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{((IMP_amdados_colon__colon_Vector&)var_0).IsDistinct((IMP_amdados_colon__colon_Vector const&)var_1) && ((IMP_amdados_colon__colon_Vector&)var_0).IsDistinct((IMP_amdados_colon__colon_Vector const&)var_2)};
    if (var_6) {
        std::cerr << "\nAssertion result.IsDistinct(A) && result.IsDistinct(B) of /root/work/allscale_amdados/code/app/src/matrix.cpp:58 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.NRows() == var_3 && var_0.NCols() == var_5 && var_4 == var_2.NRows()};
    if (var_7) {
        std::cerr << "\nAssertion (result.NRows() == nrows) && (result.NCols() == ncols) && (msize == B.NRows()) of /root/work/allscale_amdados/code/app/src/matrix.cpp:60 failed!\n";
    };
    {
        for (int64_t var_8 = (int64_t)0; var_8 < var_3; ++var_8) {
            {
                for (int64_t var_9 = (int64_t)0; var_9 < var_5; ++var_9) {
                    {
                        double var_10 = 0.0E+0;
                        {
                            for (int64_t var_11 = (int64_t)0; var_11 < var_4; ++var_11) {
                                var_10 += var_1.operator()(var_8, var_11) * var_2.operator()(var_11, var_9);
                            };
                        };
                        var_0.operator()(var_8, var_9) = var_10;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_SubtractMatrices(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.SameSize(var_1) && var_0.SameSize(var_2)};
    if (var_3) {
        std::cerr << "\nAssertion result.SameSize(A) && result.SameSize(B) of /root/work/allscale_amdados/code/app/src/matrix.cpp:145 failed!\n";
    };
    std::transform(((IMP_amdados_colon__colon_Vector const&)var_1).begin(), ((IMP_amdados_colon__colon_Vector const&)var_1).end(), ((IMP_amdados_colon__colon_Vector const&)var_2).begin(), ((IMP_amdados_colon__colon_Vector&)var_0).begin(), (std::minus<double >&&)std::minus<double >{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_GetTransposed(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1) {
    const int64_t var_2 = var_1.NRows();
    const int64_t var_3 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_4 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{((IMP_amdados_colon__colon_Vector&)var_0).IsDistinct((IMP_amdados_colon__colon_Vector const&)var_1) && var_1.SameSizeTr(var_0)};
    if (var_4) {
        std::cerr << "\nAssertion At.IsDistinct(A) && A.SameSizeTr(At) of /root/work/allscale_amdados/code/app/src/matrix.cpp:174 failed!\n";
    };
    {
        for (int64_t var_5 = (int64_t)0; var_5 < var_2; ++var_5) {
            {
                for (int64_t var_6 = (int64_t)0; var_6 < var_3; ++var_6) {
                    var_0.operator()(var_6, var_5) = var_1.operator()(var_5, var_6);
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_AddVectors(IMP_amdados_colon__colon_Vector& var_0, IMP_amdados_colon__colon_Vector const& var_1, IMP_amdados_colon__colon_Vector const& var_2) {
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.SameSize(var_1) && var_0.SameSize(var_2)};
    if (var_3) {
        std::cerr << "\nAssertion result.SameSize(a) && result.SameSize(b) of /root/work/allscale_amdados/code/app/src/matrix.cpp:114 failed!\n";
    };
    std::transform(var_1.begin(), var_1.end(), var_2.begin(), var_0.begin(), (std::plus<double >&&)std::plus<double >{});
}
struct allscale_type_1250;
typedef struct allscale_type_1250 allscale_type_1250;

struct allscale_type_1250 {
    char data[137];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1250> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1250> { using type = std::array<char,137u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_SubtractVectors(IMP_amdados_colon__colon_Vector& var_0, IMP_amdados_colon__colon_Vector const& var_1, IMP_amdados_colon__colon_Vector const& var_2) {
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.SameSize(var_1) && var_0.SameSize(var_2)};
    if (var_3) {
        std::cerr << "\nAssertion result.SameSize(a) && result.SameSize(b) of /root/work/allscale_amdados/code/app/src/matrix.cpp:125 failed!\n";
    };
    std::transform(var_1.begin(), var_1.end(), var_2.begin(), var_0.begin(), (std::minus<double >&&)std::minus<double >{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_KalmanFilter::SolveFilter(IMP_amdados_colon__colon_Vector& var_1, IMP_amdados_colon__colon_Matrix& var_2, IMP_amdados_colon__colon_Matrix const& var_3, IMP_amdados_colon__colon_Matrix const& var_4, IMP_amdados_colon__colon_Vector const& var_5) {
    const int64_t var_6 = var_1.Size();
    const int64_t var_7 = var_5.Size();
    insieme::utils::detail::LazyAssertion var_8 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.NRows() == var_6 && var_2.NCols() == var_6};
    if (var_8) {
        std::cerr << "\nAssertion (P.NRows() == N) && (P.NCols() == N) of /root/work/allscale_amdados/code/app/include/amdados/app/kalman_filter.h:102 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_9 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3.NRows() == var_7 && var_3.NCols() == var_6};
    if (var_9) {
        std::cerr << "\nAssertion (H.NRows() == O) && (H.NCols() == N) of /root/work/allscale_amdados/code/app/include/amdados/app/kalman_filter.h:103 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_10 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_4.NRows() == var_7 && var_4.NCols() == var_7};
    if (var_10) {
        std::cerr << "\nAssertion (R.NRows() == O) && (R.NCols() == O) of /root/work/allscale_amdados/code/app/include/amdados/app/kalman_filter.h:104 failed!\n";
    };
    (*this).m_y.Resize(var_7, (bool)false);
    (*this).m_invSy.Resize(var_7, (bool)false);
    (*this).m_S.Resize(var_7, var_7, (bool)false);
    (*this).m_PHt.Resize(var_6, var_7, (bool)false);
    (*this).m_HP.Resize(var_7, var_6, (bool)false);
    (*this).m_invSHP.Resize(var_7, var_6, (bool)false);
    (*this).m_x_tmp.operator=(var_1);
    (*this).m_P_tmp.operator=(var_2);
    IMP_amdados_colon__colon_Vector const& var_11 = (*this).m_x_tmp;
    IMP_amdados_colon__colon_Matrix const& var_12 = (*this).m_P_tmp;
    IMP_amdados_colon__colon_MatVecMult((*this).m_y, var_3, var_11);
    IMP_amdados_colon__colon_SubtractVectors((*this).m_y, var_5, (*this).m_y);
    IMP_amdados_colon__colon_MatMultTr((*this).m_PHt, var_12, var_3);
    IMP_amdados_colon__colon_MatMult((*this).m_S, var_3, (*this).m_PHt);
    IMP_amdados_colon__colon_AddMatrices((*this).m_S, (*this).m_S, var_4);
    IMP_amdados_colon__colon_Symmetrize((*this).m_S);
    (*this).m_chol.Init((*this).m_S);
    (*this).m_chol.Solve((*this).m_invSy, (*this).m_y);
    IMP_amdados_colon__colon_MatVecMult(var_1, (*this).m_PHt, (*this).m_invSy);
    IMP_amdados_colon__colon_AddVectors(var_1, var_1, var_11);
    IMP_amdados_colon__colon_GetTransposed((*this).m_HP, (*this).m_PHt);
    (*this).m_chol.BatchSolve((*this).m_invSHP, (*this).m_HP);
    IMP_amdados_colon__colon_MatMult(var_2, (*this).m_PHt, (*this).m_invSHP);
    IMP_amdados_colon__colon_SubtractMatrices(var_2, var_12, var_2);
    IMP_amdados_colon__colon_Symmetrize(var_2);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_KalmanFilter IMP_amdados_colon__colon_KalmanFilter::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Cholesky var_1 = var_0.read<IMP_amdados_colon__colon_Cholesky >();
    IMP_amdados_colon__colon_LUdecomposition var_2 = var_0.read<IMP_amdados_colon__colon_LUdecomposition >();
    IMP_amdados_colon__colon_Vector var_3 = var_0.read<IMP_amdados_colon__colon_Vector >();
    IMP_amdados_colon__colon_Vector var_4 = var_0.read<IMP_amdados_colon__colon_Vector >();
    IMP_amdados_colon__colon_Vector var_5 = var_0.read<IMP_amdados_colon__colon_Vector >();
    IMP_amdados_colon__colon_Matrix var_6 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_7 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_8 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_9 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_10 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    DummyCtorParamType var_11;
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6), std::move(var_7), std::move(var_8), std::move(var_9), std::move(var_10), var_11};
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_KalmanFilter::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Cholesky >((*this).m_chol);
    var_1.write<IMP_amdados_colon__colon_LUdecomposition >((*this).m_lu);
    var_1.write<IMP_amdados_colon__colon_Vector >((*this).m_x_tmp);
    var_1.write<IMP_amdados_colon__colon_Vector >((*this).m_y);
    var_1.write<IMP_amdados_colon__colon_Vector >((*this).m_invSy);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_S);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_P_tmp);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_PHt);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_HP);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_invSHP);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::vector<double, std::allocator<double > > >((*this).myself);
    var_1.write<std::vector<double, std::allocator<double > > >((*this).remote);
    var_1.write<double >((*this).rel_diff);
    var_1.write<allscale_type_1125 >((*this).inflow);
    var_1.write<allscale_type_1125 >((*this).outer);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1::load(allscale::utils::ArchiveReader& var_0) {
    std::vector<double, std::allocator<double > > var_1 = var_0.read<std::vector<double, std::allocator<double > > >();
    std::vector<double, std::allocator<double > > var_2 = var_0.read<std::vector<double, std::allocator<double > > >();
    double var_3 = var_0.read<double >();
    allscale_type_1125 var_4 = var_0.read<allscale_type_1125 >();
    allscale_type_1125 var_5 = var_0.read<allscale_type_1125 >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon_Matrix&& var_1, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1&& var_2, IMP_amdados_colon__colon_KalmanFilter&& var_3, IMP_amdados_colon__colon_Matrix&& var_4, IMP_amdados_colon__colon_Matrix&& var_5, IMP_amdados_colon__colon_Matrix&& var_6, IMP_amdados_colon__colon_Matrix&& var_7, IMP_amdados_colon__colon_Matrix&& var_8, IMP_amdados_colon__colon_Vector&& var_9, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >&& var_10, IMP_amdados_colon__colon_LUdecomposition&& var_11, IMP_amdados_colon__colon_Matrix&& var_12, std::pair<double, double >&& var_13, DummyCtorParamType var_14) : field(var_1), boundaries(var_2), Kalman(var_3), B(var_4), P(var_5), Q(var_6), H(var_7), R(var_8), z(var_9), sensors(var_10), LU(var_11), tmp_field(var_12), flow(var_13) { }
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).field);
    var_1.write<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 >((*this).boundaries);
    var_1.write<IMP_amdados_colon__colon_KalmanFilter >((*this).Kalman);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).B);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).P);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).Q);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).H);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).R);
    var_1.write<IMP_amdados_colon__colon_Vector >((*this).z);
    var_1.write<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > >((*this).sensors);
    var_1.write<IMP_amdados_colon__colon_LUdecomposition >((*this).LU);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).tmp_field);
    var_1.write<std::pair<double, double > >((*this).flow);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1() : field(), boundaries(), Kalman(), B(), P(), Q(), H(), R(), z(), sensors(), LU(), tmp_field(), flow(0.0E+0, 0.0E+0) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 var_2 = var_0.read<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_58_1 >();
    IMP_amdados_colon__colon_KalmanFilter var_3 = var_0.read<IMP_amdados_colon__colon_KalmanFilter >();
    IMP_amdados_colon__colon_Matrix var_4 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_5 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_6 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_7 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_8 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Vector var_9 = var_0.read<IMP_amdados_colon__colon_Vector >();
    std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > var_10 = var_0.read<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > >();
    IMP_amdados_colon__colon_LUdecomposition var_11 = var_0.read<IMP_amdados_colon__colon_LUdecomposition >();
    IMP_amdados_colon__colon_Matrix var_12 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    std::pair<double, double > var_13 = var_0.read<std::pair<double, double > >();
    DummyCtorParamType var_14;
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6), std::move(var_7), std::move(var_8), std::move(var_9), std::move(var_10), std::move(var_11), std::move(var_12), std::move(var_13), var_14};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13::operator allscale_type_1599() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
bool IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    return (bool)true;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13::operator()(int64_t value, allscale::utils::Vector<long, 2 > const& index, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > const& var_3) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    return {std::move(pos)};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).capture_Nsubiter);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Configuration >((*this).capture_conf);
    var_1.write<uint64_t >((*this).capture_Nsubiter);
    var_1.write<uint64_t >((*this).capture_Nt);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >((*this).capture_contexts);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >((*this).capture_observations);
}
/* ------- Function Definitions --------- */
struct allscale_type_1420;
typedef struct allscale_type_1420 allscale_type_1420;

struct allscale_type_1420 {
    char data[118];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1420> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1420> { using type = std::array<char,118u>; };

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32 {
    IMP_amdados_colon__colon_Matrix& capture_field;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2, double const& p3) const;
};

/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_CheckSizes_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_156_1(allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > const& var_0, IMP_amdados_colon__colon_Matrix const& var_1) {
    const allscale::utils::Vector<long, 2 > var_2 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_0.getActiveLayerSize()};
    return var_1.NRows() == var_2.x + (int64_t)2 && var_1.NCols() == var_2.y + (int64_t)2;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_MatrixFromAllscale_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_431_1(IMP_amdados_colon__colon_Matrix& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_1, allscale::utils::Vector<long, 2 > const& index) {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > const&& var_3 = allscale::runtime::DataItemManager::get(var_1);
    const uint32_t var_4 = var_3.operator[](index).getActiveLayer();
    const int64_t var_5 = var_3.size().x;
    const int64_t var_6 = var_3.size().y;
    const int64_t var_7 = (int64_t)var_3.operator[](index).getActiveLayerSize().x;
    const int64_t var_8 = (int64_t)var_3.operator[](index).getActiveLayerSize().y;
    insieme::utils::detail::LazyAssertion var_9 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_CheckSizes_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_156_1(var_3.operator[](index), var_0)};
    if (var_9) {
        std::cerr << "\nAssertion CheckSizes(dom[idx], field) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:442 failed!\n";
    };
    var_3.operator[](index).forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32){var_0});
    std::vector<double, std::allocator<double > > var_10;
    if (index.x > (int64_t)0) {
        var_10 = var_3.operator[](allscale::utils::Vector<long, 2 >{index.x - (int64_t)1, index.y}).data.getBoundary(var_4, allscale::api::user::data::Direction::Right);
        insieme::utils::detail::LazyAssertion var_11 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_10.size() == (uint64_t)var_8};
        if (var_11) {
            std::cerr << "\nAssertion boundary.size() == size_t(Sy) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:458 failed!\n";
        };
        {
            for (int64_t var_12 = (int64_t)0; var_12 < var_8; ++var_12) {
                var_0.operator()((int64_t)0, var_12 + (int64_t)1) = var_10.operator[]((uint64_t)var_12);
            };
        };
    } else {
        for (int64_t var_13 = (int64_t)0; var_13 < var_8; ++var_13) {
            var_0.operator()((int64_t)0, var_13 + (int64_t)1) = var_0.operator()((int64_t)2, var_13 + (int64_t)1);
        };
    };
    if (index.x + (int64_t)1 < var_5) {
        var_10 = var_3.operator[](allscale::utils::Vector<long, 2 >{index.x + (int64_t)1, index.y}).data.getBoundary(var_4, allscale::api::user::data::Direction::Left);
        insieme::utils::detail::LazyAssertion var_14 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_10.size() == (uint64_t)var_8};
        if (var_14) {
            std::cerr << "\nAssertion boundary.size() == size_t(Sy) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:473 failed!\n";
        };
        {
            for (int64_t var_15 = (int64_t)0; var_15 < var_8; ++var_15) {
                var_0.operator()(var_7 + (int64_t)1, var_15 + (int64_t)1) = var_10.operator[]((uint64_t)var_15);
            };
        };
    } else {
        for (int64_t var_16 = (int64_t)0; var_16 < var_8; ++var_16) {
            var_0.operator()(var_7 + (int64_t)1, var_16 + (int64_t)1) = var_0.operator()(var_7 - (int64_t)1, var_16 + (int64_t)1);
        };
    };
    if (index.y > (int64_t)0) {
        var_10 = var_3.operator[](allscale::utils::Vector<long, 2 >{index.x, index.y - (int64_t)1}).data.getBoundary(var_4, allscale::api::user::data::Direction::Up);
        insieme::utils::detail::LazyAssertion var_17 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_10.size() == (uint64_t)var_7};
        if (var_17) {
            std::cerr << "\nAssertion boundary.size() == size_t(Sx) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:488 failed!\n";
        };
        {
            for (int64_t var_18 = (int64_t)0; var_18 < var_7; ++var_18) {
                var_0.operator()(var_18 + (int64_t)1, (int64_t)0) = var_10.operator[]((uint64_t)var_18);
            };
        };
    } else {
        for (int64_t var_19 = (int64_t)0; var_19 < var_7; ++var_19) {
            var_0.operator()(var_19 + (int64_t)1, (int64_t)0) = var_0.operator()(var_19 + (int64_t)1, (int64_t)2);
        };
    };
    if (index.y + (int64_t)1 < var_6) {
        var_10 = var_3.operator[](allscale::utils::Vector<long, 2 >{index.x, index.y + (int64_t)1}).data.getBoundary(var_4, allscale::api::user::data::Direction::Down);
        insieme::utils::detail::LazyAssertion var_20 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_10.size() == (uint64_t)var_7};
        if (var_20) {
            std::cerr << "\nAssertion boundary.size() == size_t(Sx) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:503 failed!\n";
        };
        {
            for (int64_t var_21 = (int64_t)0; var_21 < var_7; ++var_21) {
                var_0.operator()(var_21 + (int64_t)1, var_8 + (int64_t)1) = var_10.operator[]((uint64_t)var_21);
            };
        };
    } else {
        for (int64_t var_22 = (int64_t)0; var_22 < var_7; ++var_22) {
            var_0.operator()(var_22 + (int64_t)1, var_8 + (int64_t)1) = var_0.operator()(var_22 + (int64_t)1, var_8 - (int64_t)1);
        };
    };
    var_0.operator()((int64_t)0, (int64_t)0) = (var_0.operator()((int64_t)1, (int64_t)0) + var_0.operator()((int64_t)1, (int64_t)1) + var_0.operator()((int64_t)0, (int64_t)1)) / 3.0E+0;
    var_0.operator()((int64_t)0, var_8 + (int64_t)1) = (var_0.operator()((int64_t)1, var_8 + (int64_t)1) + var_0.operator()((int64_t)1, var_8) + var_0.operator()((int64_t)0, var_8)) / 3.0E+0;
    var_0.operator()(var_7 + (int64_t)1, (int64_t)0) = (var_0.operator()(var_7, (int64_t)0) + var_0.operator()(var_7, (int64_t)1) + var_0.operator()(var_7 + (int64_t)1, (int64_t)1)) / 3.0E+0;
    var_0.operator()(var_7 + (int64_t)1, var_8 + (int64_t)1) = (var_0.operator()(var_7, var_8 + (int64_t)1) + var_0.operator()(var_7, var_8) + var_0.operator()(var_7 + (int64_t)1, var_8)) / 3.0E+0;
}
typedef void allscale_type_1325(double&);

typedef allscale_type_1325* allscale_type_1326;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34 {
    operator allscale_type_1326() const;
    ;
    ;
    void operator()(double& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MakeIdentityMatrix(IMP_amdados_colon__colon_Matrix& var_0) {
    std::fill(((IMP_amdados_colon__colon_Vector&)var_0).begin(), ((IMP_amdados_colon__colon_Vector&)var_0).end(), 0.0E+0);
    {
        int64_t value = (int64_t)0;
        while (value < var_0.NRows()) {
            var_0.operator()(value, value) = 1.0E+0;
            ++value;
        };
    };
}
struct allscale_type_1446;
typedef struct allscale_type_1446 allscale_type_1446;

struct allscale_type_1446 {
    char data[153];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1446> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1446> { using type = std::array<char,153u>; };

/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(int64_t var_0, int64_t value, allscale::utils::Vector<long, 2 > const& index) {
    if (!((uint64_t)var_0 < (uint64_t)(index.x + (int64_t)2) && (uint64_t)value < (uint64_t)(index.y + (int64_t)2))) {
        insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
        if (var_3) {
            std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:147 failed!\n";
        };
    };
    return var_0 * (index.y + (int64_t)2) + value;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InverseModelMatrix_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_214_1(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Configuration const& var_1, std::pair<double, double > const& var_2, allscale::utils::Vector<long, 2 > const& var_3, uint32_t var_4, int32_t var_5) {
    const int64_t var_6 = var_3.x;
    const int64_t var_7 = var_3.y;
    insieme::utils::detail::LazyAssertion var_8 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.NRows() == var_0.NCols() && var_0.NCols() == (var_6 + (int64_t)2) * (var_7 + (int64_t)2)};
    if (var_8) {
        std::cerr << "\nAssertion (B.NRows() == B.NCols()) && (B.NCols() == (Sx + 2)*(Sy + 2)) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:221 failed!\n";
    };
    const double var_9 = var_4 == (uint32_t)amdadosLayerFine ? 1.0E+0 : var_1.IMP_asDouble("resolution_ratio");
    const double var_10 = var_1.IMP_asDouble("diffusion_coef");
    const double var_11 = var_1.IMP_asDouble("dx") * var_9;
    const double var_12 = var_1.IMP_asDouble("dy") * var_9;
    const double var_13 = var_1.IMP_asDouble("dt") / (double)(var_5 > 0 ? var_5 : 1);
    const double var_14 = var_10 * var_13 / std::pow(var_11, 2);
    const double var_15 = var_10 * var_13 / std::pow(var_12, 2);
    const double var_16 = 2.0E+0 * var_11 / var_13;
    const double var_17 = 2.0E+0 * var_12 / var_13;
    const double var_18 = var_2.first / var_16;
    const double var_19 = var_2.second / var_17;
    IMP_amdados_colon__colon_MakeIdentityMatrix(var_0);
    {
        for (int64_t var_20 = (int64_t)1, _end = var_6 + 1l; var_20 < _end; ++var_20) {
            {
                for (int64_t var_21 = (int64_t)1, _end = var_7 + 1l; var_21 < _end; ++var_21) {
                    {
                        int64_t var_22 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_20, var_21, var_3);
                        var_0.operator()(var_22, var_22) = 1.0E+0 + (double)2 * (var_14 + var_15);
                        var_0.operator()(var_22, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_20 - (int64_t)1, var_21, var_3)) = 0.0 - var_18 - var_14;
                        var_0.operator()(var_22, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_20 + (int64_t)1, var_21, var_3)) = var_18 - var_14;
                        var_0.operator()(var_22, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_20, var_21 - (int64_t)1, var_3)) = 0.0 - var_19 - var_15;
                        var_0.operator()(var_22, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_20, var_21 + (int64_t)1, var_3)) = var_19 - var_15;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_289_1(allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_0, allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) {
    const allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_0.getActiveLayerSize()};
    const int64_t var_4 = var_2.x;
    const int64_t var_5 = var_3.x;
    const int64_t var_6 = var_2.y;
    const int64_t var_7 = var_3.y;
    if (index.x == (int64_t)0) {
        var_0.setBoundary(allscale::api::user::data::Direction::Left, std::vector<double, std::allocator<double > >{(uint64_t)var_7, 0.0E+0, std::allocator<double >{}});
    } else {
        if (index.x == var_4 - (int64_t)1) {
            var_0.setBoundary(allscale::api::user::data::Direction::Right, std::vector<double, std::allocator<double > >{(uint64_t)var_7, 0.0E+0, std::allocator<double >{}});
        };
    };
    if (index.y == (int64_t)0) {
        var_0.setBoundary(allscale::api::user::data::Direction::Down, std::vector<double, std::allocator<double > >{(uint64_t)var_5, 0.0E+0, std::allocator<double >{}});
    } else {
        if (index.y == var_6 - (int64_t)1) {
            var_0.setBoundary(allscale::api::user::data::Direction::Up, std::vector<double, std::allocator<double > >{(uint64_t)var_5, 0.0E+0, std::allocator<double >{}});
        };
    };
}
/* ------- Function Definitions --------- */
std::pair<double, double > IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Flow_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_408_1(IMP_amdados_colon__colon_Configuration const& var_0, uint64_t var_1) {
    const double var_2 = var_0.IMP_asDouble("flow_model_max_vx");
    const double var_3 = var_0.IMP_asDouble("flow_model_max_vy");
    const double var_4 = (double)var_1 / var_0.IMP_asDouble("Nt");
    return (std::pair<double, double >&&)std::pair<double, double >{(0.0 - var_2) * sin(1.0000000000000001E-1 * var_4 - 3.1415926535897931E+0), (0.0 - var_3) * sin(2.0000000000000001E-1 * var_4 - 3.1415926535897931E+0)};
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28 {
    IMP_amdados_colon__colon_Matrix const& capture_field;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2, double& p3) const;
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_AllscaleFromMatrix_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_525_1(allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_0, IMP_amdados_colon__colon_Matrix const& var_1) {
    insieme::utils::detail::LazyAssertion var_2 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_CheckSizes_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_156_1(var_0, var_1)};
    if (var_2) {
        std::cerr << "\nAssertion CheckSizes(cell, field) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:528 failed!\n";
    };
    var_0.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28){var_1});
}
typedef double allscale_type_1495(double const&);

typedef allscale_type_1495* allscale_type_1496;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23 {
    operator allscale_type_1496() const;
    ;
    ;
    double operator()(double const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23 load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_1419;
typedef struct allscale_type_1419 allscale_type_1419;

struct allscale_type_1419 {
    char data[139];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1419> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1419> { using type = std::array<char,139u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineNoSensors_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_622_1(IMP_amdados_colon__colon_Configuration const& var_0, uint64_t var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_2, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_3, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& var_4, allscale::utils::Vector<long, 2 > const& var_5, uint64_t var_6, uint64_t var_7) {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > const&& var_8 = allscale::runtime::DataItemManager::get(var_2);
    const uint32_t var_9 = (uint32_t)amdadosLayerLow;
    insieme::utils::detail::LazyAssertion var_10 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_8.operator[](var_5).getActiveLayer() == var_9};
    if (var_10) {
        std::cerr << "\nAssertion curr_state[idx].getActiveLayer() == resolution of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:635 failed!\n";
    };
    var_3.setActiveLayer(var_9);
    const allscale::utils::Vector<long, 2 > var_11 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_8.operator[](var_5).getActiveLayerSize()};
    insieme::utils::detail::LazyAssertion var_12 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1 < var_7 * var_6};
    if (var_12) {
        std::cerr << "\nAssertion timestamp < Nt * Nsubiter of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:642 failed!\n";
    };
    (void)(&var_7);
    const uint64_t var_13 = var_1 / var_6;
    const uint64_t var_14 = var_1 % var_6;
    (void)(&var_14);
    var_4.flow = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Flow_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_408_1(var_0, var_13);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_MatrixFromAllscale_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_431_1(var_4.field, var_2, var_5);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InverseModelMatrix_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_214_1(var_4.B, var_0, var_4.flow, var_11, var_9, (int32_t)var_6);
    var_4.tmp_field.operator=(var_4.field);
    var_4.LU.Init(var_4.B);
    var_4.LU.Solve(*(IMP_amdados_colon__colon_Vector*)(&var_4.field), *(IMP_amdados_colon__colon_Vector*)(&var_4.tmp_field));
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_AllscaleFromMatrix_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_525_1(var_3, var_4.field);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_289_1(var_3, var_5, var_8.size());
    var_3.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34){});
    var_3.refine(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23){});
    var_3.setActiveLayer(var_9);
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24 {
    operator allscale_type_1496() const;
    ;
    ;
    double operator()(double const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Fill(IMP_amdados_colon__colon_Vector& var_0, double value) {
    std::fill(var_0.begin(), var_0.end(), value);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeQ_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_355_1(IMP_amdados_colon__colon_Configuration const& var_0, IMP_amdados_colon__colon_Matrix& var_1) {
    std::uniform_real_distribution<double > var_2{((double)0), ((double)1)};
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u > var_3{(IMP_amdados_colon__colon_RandomSeed())};
    const double var_4 = var_0.IMP_asDouble("model_noise_Q");
    insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.IsSquare()};
    if (var_5) {
        std::cerr << "\nAssertion Q.IsSquare() of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:361 failed!\n";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_Vector&)var_1, 0.0E+0);
    {
        int64_t var_6 = (int64_t)0;
        while (var_6 < var_1.NRows()) {
            var_1.operator()(var_6, var_6) = 1.0E+0 + var_4 * var_2.operator()(var_3);
            ++var_6;
        };
    };
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34 {
    operator allscale_type_1326() const;
    ;
    ;
    void operator()(double& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GetObservations_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_261_1(IMP_amdados_colon__colon_Vector& var_0, IMP_amdados_colon__colon_Matrix const& var_1, int32_t var_2, IMP_amdados_colon__colon_Matrix const& var_3, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > const& var_4, allscale::utils::Vector<long, 2 > const& var_5) {
    const int64_t var_6 = var_1.NCols();
    insieme::utils::detail::LazyAssertion var_7 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_0.Size() == var_6};
    if (var_7) {
        std::cerr << "\nAssertion z.Size() == n of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:266 failed!\n";
    };
    {
        for (int64_t var_8 = (int64_t)0; var_8 < var_6; ++var_8) {
            var_0.operator()(var_8) = var_1.operator()((int64_t)var_2, var_8);
        };
    };
    (void)var_3;
    (void)var_4;
    (void)var_5;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeR_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_371_1(IMP_amdados_colon__colon_Configuration const& var_0, IMP_amdados_colon__colon_Matrix& var_1) {
    std::uniform_real_distribution<double > var_2{((double)0), ((double)1)};
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u > var_3{(IMP_amdados_colon__colon_RandomSeed())};
    const double var_4 = var_0.IMP_asDouble("model_noise_R");
    insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.IsSquare()};
    if (var_5) {
        std::cerr << "\nAssertion R.IsSquare() of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:377 failed!\n";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_Vector&)var_1, 0.0E+0);
    {
        int64_t var_6 = (int64_t)0;
        while (var_6 < var_1.NRows()) {
            var_1.operator()(var_6, var_6) = 1.0E+0 + var_4 * var_2.operator()(var_3);
            ++var_6;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineKalman_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_539_1(IMP_amdados_colon__colon_Configuration const& var_0, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > const& var_1, IMP_amdados_colon__colon_Matrix const& var_2, uint64_t var_3, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_4, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_5, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& var_6, allscale::utils::Vector<long, 2 > const& var_7, uint64_t var_8, uint64_t var_9) {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > const&& var_10 = allscale::runtime::DataItemManager::get(var_4);
    const uint32_t var_11 = (uint32_t)amdadosLayerFine;
    insieme::utils::detail::LazyAssertion var_12 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_10.operator[](var_7).getActiveLayer() == var_11};
    if (var_12) {
        std::cerr << "\nAssertion curr_state[idx].getActiveLayer() == resolution of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:554 failed!\n";
    };
    var_5.setActiveLayer(var_11);
    const allscale::utils::Vector<long, 2 > var_13 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_10.operator[](var_7).getActiveLayerSize()};
    insieme::utils::detail::LazyAssertion var_14 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_3 < var_9 * var_8};
    if (var_14) {
        std::cerr << "\nAssertion timestamp < Nt * Nsubiter of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:561 failed!\n";
    };
    (void)(&var_9);
    const uint64_t var_15 = var_3 / var_8;
    const uint64_t var_16 = var_3 % var_8;
    var_6.flow = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Flow_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_408_1(var_0, var_15);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_MatrixFromAllscale_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_431_1(var_6.field, var_4, var_7);
    if (var_16 == (uint64_t)0) {
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GetObservations_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_261_1(var_6.z, var_2, (int32_t)var_15, var_6.H, var_1, var_13);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeQ_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_355_1(var_0, var_6.Q);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeR_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_371_1(var_0, var_6.R);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InverseModelMatrix_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_214_1(var_6.B, var_0, var_6.flow, var_13, var_11, 0);
        var_6.Kalman.PropagateStateInverse(*(IMP_amdados_colon__colon_Vector*)(&var_6.field), var_6.P, var_6.B, var_6.Q);
    };
    var_6.Kalman.SolveFilter(*(IMP_amdados_colon__colon_Vector*)(&var_6.field), var_6.P, var_6.H, var_6.R, var_6.z);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_AllscaleFromMatrix_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_525_1(var_5, var_6.field);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_289_1(var_5, var_7, var_10.size());
    var_5.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34){});
    var_5.coarsen(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24){});
    var_5.setActiveLayer(var_11);
}
/* ------- Function Definitions --------- */
allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9::operator()(int64_t value, allscale::utils::Vector<long, 2 > const& index, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_3) const {
    allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u >&& var_4 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)(*this).capture_contexts);
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > const&& var_5 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)(*this).capture_sensors);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > const&& var_6 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const&)(*this).capture_observations);
    allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > var_7;
    if (var_4.operator[](index).sensors.size() > (uint64_t)0) {
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineKalman_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_539_1((*this).capture_conf, var_5.operator[](index), var_6.operator[](index), (uint64_t)value, var_3, var_7, var_4.operator[](index), index, (*this).capture_Nsubiter, (*this).capture_Nt);
    } else {
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineNoSensors_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_622_1((*this).capture_conf, (uint64_t)value, var_3, var_7, var_4.operator[](index), index, (*this).capture_Nsubiter, (*this).capture_Nt);
    };
    return (allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >&&)var_7;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_443_32::operator()(allscale::utils::Vector<long, 2 > const& index, double const& var_2) const {
    (*this).capture_field.operator()(index.x + (int64_t)1, index.y + (int64_t)1) = var_2;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34::operator allscale_type_1326() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34::operator()(double& var_1) const {
    if (var_1 < 0.0E+0) {
        var_1 = 0.0E+0;
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_675_34::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_529_28::operator()(allscale::utils::Vector<long, 2 > const& index, double& var_2) const {
    var_2 = (*this).capture_field.operator()(index.x + (int64_t)1, index.y + (int64_t)1);
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23::operator()(double const& var_1) const {
    return var_1;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_680_23::operator allscale_type_1496() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24::operator allscale_type_1496() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24::operator()(double const& var_1) const {
    return var_1;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_613_24::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34::operator allscale_type_1326() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_34::operator()(double& var_1) const {
    if (var_1 < 0.0E+0) {
        var_1 = 0.0E+0;
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Configuration var_1 = var_0.read<IMP_amdados_colon__colon_Configuration >();
    uint64_t pos = var_0.read<uint64_t >();
    uint64_t var_3 = var_0.read<uint64_t >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > var_4 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_5 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_6 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >();
    return {std::move(var_1), std::move(pos), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 const& var_3) : isInterestedInTime(var_1), isInterestedInLocation(var_2), trigger(var_3) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13&& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13&& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13&& var_3, DummyCtorParamType var_4) : isInterestedInTime(var_1), isInterestedInLocation(var_2), trigger(var_3) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 >((*this).isInterestedInTime);
    var_1.write<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 >((*this).isInterestedInLocation);
    var_1.write<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 >((*this).trigger);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::load(allscale::utils::ArchiveReader& var_0) {
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 var_1 = var_0.read<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13_bool_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13 >();
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 var_2 = var_0.read<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13 >();
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 var_3 = var_0.read<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13 >();
    DummyCtorParamType var_4;
    return {std::move(var_1), std::move(var_2), std::move(var_3), var_4};
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ right;;
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 {
    uint64_t capture_t;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 capture_observer;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 var_2 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_3 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    return {std::move(pos), std::move(var_2), std::move(var_3)};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_b);
    if ((*this).capture_observer.isInterestedInLocation.operator()(index)) {
        (*this).capture_observer.trigger.operator()((int64_t)(*this).capture_t, index, var_2.operator[](index));
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).capture_t);
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >((*this).capture_observer);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_b);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >&)(*this).capture_sensors);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >&)(*this).capture_observations);
    var_2.operator[](index).clear();
    var_3.operator[](index).Clear();
    if ((*this).capture_locations.find(index) != (*this).capture_locations.end()) {
        var_2.operator[](index) = (*this).capture_locations.at(index);
    };
    const uint64_t var_4 = var_2.operator[](index).size();
    IMP_amdados_colon__colon_Matrix& var_5 = var_3.operator[](index);
    var_5.Resize((*this).capture_Nt, (int64_t)var_4, (bool)true);
    if (var_4 > (uint64_t)0) {
        int64_t var_6 = (int64_t)((uint64_t)(*this).capture_Nt / var_4);
        {
            for (uint64_t var_7 = (uint64_t)0; var_7 < var_4; ++var_7) {
                var_5.operator()((int64_t)((uint64_t)var_6 * var_7), (int64_t)var_7) = (double)1.0E+0f;
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >((*this).capture_observations);
    var_1.write<std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > >((*this).capture_locations);
    var_1.write<int64_t >((*this).capture_Nt);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >();
    std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > var_3 = var_0.read<std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > >();
    int64_t var_4 = var_0.read<int64_t >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48 {
    operator allscale_type_1326() const;
    ;
    ;
    void operator()(double& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48 load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_1354;
typedef struct allscale_type_1354 allscale_type_1354;

struct allscale_type_1354 {
    char data[142];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1354> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1354> { using type = std::array<char,142u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeH_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_388_1(std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP_amdados_colon__colon_Matrix& var_2) {
    if (var_0.empty()) {
        var_2.Clear();
        return;
    };
    insieme::utils::detail::LazyAssertion var_3 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.NRows() == (int64_t)var_0.size()};
    if (var_3) {
        std::cerr << "\nAssertion H.NRows() == static_cast<index_t>(sensors.size()) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:396 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_4 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.NCols() == (index.x + (int64_t)2) * (index.y + (int64_t)2)};
    if (var_4) {
        std::cerr << "\nAssertion H.NCols() == (layer_size.x + 2) * (layer_size.y + 2) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:397 failed!\n";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_Vector&)var_2, 0.0E+0);
    {
        uint64_t var_5 = (uint64_t)0;
        while (var_5 < var_0.size()) {
            var_2.operator()((int64_t)var_5, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_0.operator[](var_5).x + (int64_t)1, var_0.operator[](var_5).y + (int64_t)1, index)) = 1.0E+0;
            ++var_5;
        };
    };
}
struct allscale_type_1362;
typedef struct allscale_type_1362 allscale_type_1362;

struct allscale_type_1362 {
    char data[125];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1362> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1362> { using type = std::array<char,125u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InitialCovar_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_317_1(IMP_amdados_colon__colon_Configuration const& var_0, IMP_amdados_colon__colon_Matrix& var_1) {
    const double var_2 = var_0.IMP_asDouble("model_ini_var");
    const double var_3 = var_0.IMP_asDouble("model_ini_covar_radius");
    const double var_4 = std::max(var_3, 1.0E+0);
    const double var_5 = std::max(var_3, 1.0E+0);
    const int64_t var_6 = (int64_t)IMP_amdados_colon__colon_Round(ceil(4.0E+0 * var_4));
    const int64_t var_7 = (int64_t)IMP_amdados_colon__colon_Round(ceil(4.0E+0 * var_5));
    const int64_t var_8 = (int64_t)var_0.IMP_asInt("subdomain_x");
    const int64_t var_9 = (int64_t)var_0.IMP_asInt("subdomain_y");
    const allscale::utils::Vector<long, 2 > var_10{(var_8), (var_9)};
    insieme::utils::detail::LazyAssertion var_11 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.IsSquare()};
    if (var_11) {
        std::cerr << "\nAssertion P.IsSquare() of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:331 failed!\n";
    };
    insieme::utils::detail::LazyAssertion var_12 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_1.NRows() == (var_8 + (int64_t)2) * (var_9 + (int64_t)2)};
    if (var_12) {
        std::cerr << "\nAssertion P.NRows() == (Sx + 2) * (Sy + 2) of /root/work/allscale_amdados/code/app/src/scenario_simulation.cpp:332 failed!\n";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_Vector&)var_1, 0.0E+0);
    {
        int64_t var_13 = (int64_t)0;
        while (var_13 < var_8 + (int64_t)2) {
            {
                int64_t var_14 = (int64_t)0;
                while (var_14 < var_9 + (int64_t)2) {
                    {
                        int64_t var_15 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_13, var_14, var_10);
                        double var_16 = 0.0E+0;
                        double var_17 = 0.0E+0;
                        {
                            int64_t var_18 = var_13 - var_6;
                            while (var_18 <= var_13 + var_6) {
                                if ((int64_t)0 <= var_18 && var_18 < var_8 + (int64_t)2) {
                                    int64_t var_19 = var_14 - var_7;
                                    while (var_19 <= var_14 + var_7) {
                                        if ((int64_t)0 <= var_19 && var_19 < var_9 + (int64_t)2) {
                                            int64_t var_20 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_142_1(var_18, var_19, var_10);
                                            if (var_15 <= var_20) {
                                                var_16 = (double)(var_13 - var_18) / var_4;
                                                var_17 = (double)(var_14 - var_19) / var_5;
                                                var_1.operator()(var_15, var_20) = *allscale_fun_1245(&var_1.operator()(var_20, var_15), var_2 * exp(-5.0E-1 * (var_16 * var_16 + var_17 * var_17)));
                                            };
                                        };
                                        ++var_19;
                                    };
                                };
                                ++var_18;
                            };
                        };
                    };
                    ++var_14;
                };
            };
            ++var_13;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_state_field);
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > const&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)(*this).capture_sensors);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u >&& var_4 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)(*this).capture_contexts);
    {
        for (int32_t var_5 = amdadosLayerFine, _end = amdadosLayerLow + 1; var_5 < _end; ++var_5) {
            {
                var_2.operator[](index).setActiveLayer((uint32_t)var_5);
                var_2.operator[](index).forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48){});
                IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_289_1(var_2.operator[](index), index, var_2.size());
            };
        };
    };
    const int64_t var_6 = (int64_t)var_3.operator[](index).size();
    if (var_6 > (int64_t)0) {
        var_2.operator[](index).setActiveLayer((uint32_t)amdadosLayerFine);
    } else {
        var_2.operator[](index).setActiveLayer((uint32_t)amdadosLayerLow);
    };
    const allscale::utils::Vector<long, 2 > var_7 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_2.operator[](index).getActiveLayerSize()};
    const int64_t var_8 = var_7.x;
    const int64_t var_9 = var_7.y;
    const int64_t var_10 = (var_8 + (int64_t)2) * (var_9 + (int64_t)2);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& var_11 = var_4.operator[](index);
    var_11.field.Resize(var_8 + (int64_t)2, var_9 + (int64_t)2, (bool)true);
    var_11.B.Resize(var_10, var_10, (bool)true);
    if (var_6 > (int64_t)0) {
        var_11.P.Resize(var_10, var_10, (bool)true);
        var_11.Q.Resize(var_10, var_10, (bool)true);
        var_11.H.Resize(var_6, var_10, (bool)true);
        var_11.R.Resize(var_6, var_6, (bool)true);
        var_11.z.Resize(var_6, (bool)true);
        var_11.sensors = var_3.operator[](index);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeH_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_388_1(var_3.operator[](index), var_7, var_11.H);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InitialCovar_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_317_1((*this).capture_conf, var_11.P);
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48::operator allscale_type_1326() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48::operator()(double& var_1) const {
    var_1 = 0.0E+0;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48_void_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_723_48::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Configuration >((*this).capture_conf);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_state_field);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >((*this).capture_contexts);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Configuration var_1 = var_0.read<IMP_amdados_colon__colon_Configuration >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_3 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > var_4 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    return {std::move(var_1), std::move(var_2)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct allscale_type_2253;
typedef struct allscale_type_2253 allscale_type_2253;

struct allscale_type_2253 {
    char data[144];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_2253> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_2253> { using type = std::array<char,144u>; };

/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<int32_t, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > >&)(*this).capture_counters);
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > const&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)(*this).capture_sensors);
    insieme::utils::detail::LazyAssertion var_4 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.operator[](index) == (int32_t)var_3.operator[](index).size()};
    if (var_4) {
        std::cerr << "\nAssertion counters[idx] == static_cast<int>(sensors[idx].size()) of /root/work/allscale_amdados/code/app/src/scenario_sensors.cpp:405 failed!\n";
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > >((*this).capture_counters);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_a);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_b);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    return {std::move(var_1), std::move(var_2)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_b);
    var_3.operator[](index) = var_2.operator[](index);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<int32_t, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > >&)(*this).capture_counters);
    var_2.operator[](index) = 0;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > >((*this).capture_counters);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > > >();
    return {std::move(var_1)};
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 {
    uint64_t capture_t;
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 capture_update;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 var_2 = var_0.read<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_3 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_4 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    return {std::move(pos), std::move(var_2), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).capture_t);
    var_1.write<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 >((*this).capture_update);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_b);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_a);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_b);
    var_2.operator[](index) = (*this).capture_update.operator()((int64_t)(*this).capture_t, index, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >&)(*this).capture_sensors);
    var_2.operator[](index).clear();
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >((*this).capture_observations);
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >&)(*this).capture_observations);
    var_2.operator[](index).Clear();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::utils::Vector<long, 2 > >((*this)._begin);
    var_1.write<allscale::utils::Vector<long, 2 > >((*this)._end);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 {
    ;
    ;
    void run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& p4, int64_t p5, int64_t p6);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 load(allscale::utils::ArchiveReader& var_0);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& p4, int64_t p5, int64_t p6);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 nested;;
    ;
    ;
    void run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& p4, int64_t p5);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 load(allscale::utils::ArchiveReader& var_0);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& p4, int64_t p5);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 nested;;
    ;
    ;
    void run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& p4);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 load(allscale::utils::ArchiveReader& var_0);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& p4);
};

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    ;
    ;
    allscale::utils::Vector<long, 2 > operator()(int64_t p2, int64_t p3);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::operator()(int64_t value, int64_t i) {
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{value, i};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 >((*this).nested);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 >((*this).nested);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) : _begin(index), _end(var_2) {
    if ((*this).IMP_empty_returns_bool()) {
        (*this)._end = (*this)._begin;
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::begin_returns_constallscaleutilsVectorlong2() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 >&& var_1, allscale::utils::Vector<long, 2 >&& var_2, DummyCtorParamType var_3) : _begin(var_1), _end(var_2) { }
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_2_returns_bool(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, allscale::utils::Vector<long, 2 > const& var_2, allscale::utils::Vector<long, 2 > const& var_3) {
    {
        uint64_t pos = (uint64_t)0;
        while (pos < 2ul) {
            if (var_2.operator[](pos) >= var_3.operator[](pos)) {
                return (bool)true;
            };
            ++pos;
        };
    };
    {
        uint64_t var_5 = (uint64_t)0;
        while (var_5 < 2ul) {
            if (!(index.operator[](var_5) <= var_2.operator[](var_5) && var_3.operator[](var_5) <= var_1.operator[](var_5))) {
                return (bool)false;
            };
            ++var_5;
        };
    };
    return (bool)true;
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_2_returns_bool((*this)._begin, (*this)._end, var_1._begin, var_1._end);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool;

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_getSplitDimension_returns_std_colon__colon_size_t(uint64_t var_0) {
    return var_0 % 2ul;
}
/* ------- Function Definitions --------- */
int64_t* cxx_style_assignment(int64_t* lhs, int64_t value) {
    *lhs = value;
    return lhs;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long {
    int64_t _begin;
    int64_t _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t const& p2, int64_t const& p3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t&& p2, int64_t&& p3, DummyCtorParamType p4);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long() = default;
    bool allscale_fun_914() const;
    uint64_t allscale_fun_918() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&& p2) = default;
    int64_t const& begin_returns_constlong() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2) const;
    int64_t const& end_returns_constlong() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long grow_returns_allscaleapiuseralgorithmdetailrangelong(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long shrink_returns_allscaleapiuseralgorithmdetailrangelong(int32_t p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long split_returns_fragmentslong(uint64_t p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long right;;
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long allscale_fun_951(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long allscale_fun_949(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    int64_t const& var_2 = var_1.begin_returns_constlong();
    int64_t const& var_3 = var_1.end_returns_constlong();
    int64_t var_4 = var_2 + (var_3 - var_2) / (int64_t)2;
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)allscale_fun_951(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_2, var_4}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4, var_3});
}
struct allscale_type_958;
typedef struct allscale_type_958 allscale_type_958;

struct allscale_type_958 {
    char data[43];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_958> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_958> { using type = std::array<char,43u>; };

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__returns_fragments_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){var_0, var_1};
}
struct allscale_type_957;
typedef struct allscale_type_957 allscale_type_957;

struct allscale_type_957 {
    char data[200];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_957> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_957> { using type = std::array<char,200u>; };

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool {
    ;
    ;
    uint64_t operator()(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_split_returns_fragments_lt_Vector_lt_long_comma__space_2UL_gt__space__gt_(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
    const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool var_2 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool{};
    uint64_t pos = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_getSplitDimension_returns_std_colon__colon_size_t(var_0);
    allscale::utils::Vector<long, 2 > const& var_4 = var_1.begin_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > const& var_5 = var_1.end_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > var_6 = var_5;
    allscale::utils::Vector<long, 2 > var_7 = var_4;
    var_6.operator[](pos) = *cxx_style_assignment(&var_7.operator[](pos), allscale_fun_949(var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4.operator[](pos), var_5.operator[](pos)}).left.end_returns_constlong());
    insieme::utils::detail::LazyAssertion var_8 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.operator()(var_4, var_5) == var_2.operator()(var_4, var_6) + var_2.operator()(var_7, var_5)};
    if (var_8) {
        std::cerr << "\nAssertion volume(begin,end) == volume(begin,midA) + volume(midB,end) of /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/pfor.h:955 failed!\n\tvolume(begin,end) = " << var_2.operator()(var_4, var_5) << "\n\tvolume(begin,midA) + volume(midB,end) = " << var_2.operator()(var_4, var_6) + var_2.operator()(var_7, var_5) << "\n";
    };
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__returns_fragments_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_4, var_6}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_7, var_5});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::split_returns_fragmentsallscaleutilsVectorlong2(uint64_t pos) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_split_returns_fragments_lt_Vector_lt_long_comma__space_2UL_gt__space__gt_(pos, *this);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool::store(allscale::utils::ArchiveWriter& var_1) const { }
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool {
    ;
    ;
    uint64_t operator()(std::array<int64_t, 2u > const& p2, std::array<int64_t, 2u > const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool::operator()(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool{}.operator()(index.operator const std::array<long, 2> &(), var_2.operator const std::array<long, 2> &());
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool {
    ;
    ;
    uint64_t operator()(int64_t p2, int64_t p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool::operator()(std::array<int64_t, 2u > const& var_1, std::array<int64_t, 2u > const& var_2) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool var_3;
    uint64_t pos = (uint64_t)1;
    {
        for (uint64_t var_5 = (uint64_t)0; var_5 < 2ul; ++var_5) {
            pos *= var_3.operator()(var_1.operator[](var_5), var_2.operator[](var_5));
        };
    };
    return pos;
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool::operator()(int64_t value, int64_t i) const {
    return (uint64_t)(value < i ? i - value : (int64_t)0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t&& var_1, int64_t&& var_2, DummyCtorParamType var_3) : _begin(var_1), _end(var_2) { }
/* ------- Function Definitions --------- */
int64_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::end_returns_constlong() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
int64_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::begin_returns_constlong() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
int64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_returns_long(int64_t const& var_0, int64_t const& var_1, int32_t var_2) {
    return std::max(var_1, var_0 - (int64_t)var_2);
}
/* ------- Function Definitions --------- */
int64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_returns_long(int64_t const& var_0, int64_t const& var_1, int32_t var_2) {
    return std::min(var_1, var_0 + (int64_t)var_2);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::grow_returns_allscaleapiuseralgorithmdetailrangelong(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1, int32_t var_2) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_returns_long((*this)._begin, var_1.begin_returns_constlong(), var_2), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_returns_long((*this)._end, var_1.end_returns_constlong(), var_2)};
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_returns_bool(int64_t const& var_0, int64_t const& var_1, int64_t const& var_2, int64_t const& var_3) {
    return var_2 >= var_3 || (var_0 <= var_2 && var_3 <= var_1);
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_returns_bool((*this)._begin, (*this)._end, var_1._begin, var_1._end);
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::allscale_fun_914() const {
    return (*this).allscale_fun_918() == (uint64_t)0;
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<int64_t >((*this)._begin);
    var_1.write<int64_t >((*this)._end);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::load(allscale::utils::ArchiveReader& var_0) {
    int64_t value = var_0.read<int64_t >();
    int64_t i = var_0.read<int64_t >();
    DummyCtorParamType var_3;
    return {std::move(value), std::move(i), var_3};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::shrink_returns_allscaleapiuseralgorithmdetailrangelong(int32_t var_1) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&&)(*this).grow_returns_allscaleapiuseralgorithmdetailrangelong(*this, 0 - var_1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t const& var_1, int64_t const& var_2) : _begin(var_1), _end(var_2) {
    if ((*this).allscale_fun_914()) {
        (*this)._end = (*this)._begin;
    };
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long() : _begin(0l), _end(0l) { }
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::allscale_fun_918() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool{}.operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_long_returns_fragments_lt_long_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_long__static__IMP_split_returns_fragments_lt_long_gt_(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    int64_t const& var_2 = var_1.begin_returns_constlong();
    int64_t const& var_3 = var_1.end_returns_constlong();
    int64_t var_4 = var_2 + (var_3 - var_2) / (int64_t)2;
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_long_returns_fragments_lt_long_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_2, var_4}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4, var_3});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::split_returns_fragmentslong(uint64_t pos) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_long__static__IMP_split_returns_fragments_lt_long_gt_(pos, *this);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.run_allscaleutilsVector_long_2__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::forEach__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    allscale::utils::Vector<long, 2 > var_1 = var_0.read<allscale::utils::Vector<long, 2 > >();
    allscale::utils::Vector<long, 2 > var_2 = var_0.read<allscale::utils::Vector<long, 2 > >();
    DummyCtorParamType var_3;
    return {std::move(var_1), std::move(var_2), var_3};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::shrink_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(int32_t var_1) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)(*this).grow_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(*this, 0 - var_1);
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, int32_t var_2) {
    allscale::utils::Vector<long, 2 > var_3;
    {
        for (uint32_t var_4 = (uint32_t)0; var_4 < (uint32_t)2ul; ++var_4) {
            var_3.operator[]((uint64_t)var_4) = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_returns_long(index.operator[]((uint64_t)var_4), var_1.operator[]((uint64_t)var_4), var_2);
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)var_3;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, int32_t var_2) {
    allscale::utils::Vector<long, 2 > var_3;
    {
        for (uint32_t var_4 = (uint32_t)0; var_4 < (uint32_t)2ul; ++var_4) {
            var_3.operator[]((uint64_t)var_4) = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_returns_long(index.operator[]((uint64_t)var_4), var_1.operator[]((uint64_t)var_4), var_2);
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)var_3;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::grow_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1, int32_t var_2) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_((*this)._begin, var_1.begin_returns_constallscaleutilsVectorlong2(), var_2), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_((*this)._end, var_1.end_returns_constallscaleutilsVectorlong2(), var_2)};
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::end_returns_constallscaleutilsVectorlong2() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_size_returns_size_t() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool{}.operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() : _begin(), _end() { }
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_empty_returns_bool() const {
    return (*this).IMP_size_returns_size_t() == (uint64_t)0;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_pack_begin_pack_end_returns_void(index, var_1, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ allscale_fun_997(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ allscale_fun_995(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
    const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool var_2 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool{};
    uint64_t pos = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_getSplitDimension_returns_std_colon__colon_size_t(var_0);
    allscale::utils::Vector<long, 2 > const& var_4 = var_1.begin_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > const& var_5 = var_1.end_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > var_6 = var_5;
    allscale::utils::Vector<long, 2 > var_7 = var_4;
    var_6.operator[](pos) = *cxx_style_assignment(&var_7.operator[](pos), allscale_fun_949(var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4.operator[](pos), var_5.operator[](pos)}).left.end_returns_constlong());
    insieme::utils::detail::LazyAssertion var_8 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{var_2.operator()(var_4, var_5) == var_2.operator()(var_4, var_6) + var_2.operator()(var_7, var_5)};
    if (var_8) {
        std::cerr << "\nAssertion volume(begin,end) == volume(begin,midA) + volume(midB,end) of /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/pfor.h:955 failed!\n\tvolume(begin,end) = " << var_2.operator()(var_4, var_5) << "\n\tvolume(begin,midA) + volume(midB,end) = " << var_2.operator()(var_4, var_6) + var_2.operator()(var_7, var_5) << "\n";
    };
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)allscale_fun_997(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_4, var_6}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_7, var_5});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getRight_returns_iteration_referenceallscaleutilsVectorlong2() const {
    return {allscale_fun_995((*this).depth, (*this)._range).right, (*this).handle.get_right_child(), (*this).depth + (uint64_t)1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getRange_returns_constrangeallscaleutilsVectorlong2() const {
    return (*this)._range;
}
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getDepth_returns_stdsize_t() const {
    return (*this).depth;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) : _range(var_1), handle(allscale::make_ready_treeture()), depth((uint64_t)0) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& var_1, allscale::treeture<void >&& var_2, uint64_t&& var_3, DummyCtorParamType var_4) : _range(var_1), handle(var_2), depth(var_3) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1, allscale::treeture<void > const& var_2, uint64_t pos) : _range(var_1), handle(var_2), depth(pos) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::operator allscale::treeture<void >() const {
    return (*this).handle;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >();
    allscale::treeture<void > var_2 = var_0.read<allscale::treeture<void > >();
    uint64_t pos = var_0.read<uint64_t >();
    DummyCtorParamType var_4;
    return {std::move(var_1), std::move(var_2), std::move(pos), var_4};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getHandle_returns_constcoretask_reference() const {
    return (*this).handle;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getLeft_returns_iteration_referenceallscaleutilsVectorlong2() const {
    return {allscale_fun_995((*this).depth, (*this)._range).left, (*this).handle.get_left_child(), (*this).depth + (uint64_t)1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}) { }
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >((*this)._range);
    var_1.write<allscale::treeture<void > >((*this).handle);
    var_1.write<uint64_t >((*this).depth);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::wait_returns_void() const {
    if ((*this).handle.valid()) {
        (*this).handle.wait();
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1, allscale::treeture<void >&& var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(var_1, std::move(var_2), (uint64_t)0) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >(*(const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_*)this);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& var_1, DummyCtorParamType var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(std::move(var_1)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() {
    (*(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_*)this).wait_returns_void();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency >(*(const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency*)this);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency&& var_1, DummyCtorParamType var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency(std::move(var_1)) { }
/* ------- Function Definitions --------- */
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies right;;
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::split() const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).depth);
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >((*this).range);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_2 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >();
    return {std::move(pos), std::move(var_2)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool allscale_fun_1384(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_1386(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1397(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1382(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    if (allscale_fun_1384(var_0)) {
        return allscale_fun_1386(var_0);
    } else {
        return allscale_fun_1397(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1380(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    allscale_fun_1382(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > > allscale_fun_1398(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >){allscale::runtime::createDataItemRequirement(hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 >*)(&var_0)).capture_sensors, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadOnly), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 >*)(&var_0)).capture_state_field, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 >*)(&var_0)).capture_contexts, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_3_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_3_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return allscale_fun_1380(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > > __wi_allscale_wi_3_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return allscale_fun_1398(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1378(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1377(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_3_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_3_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1375(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return allscale_fun_1377(var_0);
}
struct __wi_allscale_wi_3_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_3_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return allscale_fun_1375(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_3_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return allscale_fun_1378(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1401(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return !allscale_fun_1384(var_0);
}
struct __wi_allscale_wi_3_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0);
};

bool __wi_allscale_wi_3_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36_const_space_amdados_colon__colon_Configuration_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_718_36 > const& var_0) {
    return allscale_fun_1401(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_2 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    allscale::utils::Vector<long, 2 > var_3 = var_0.read<allscale::utils::Vector<long, 2 > >();
    uint64_t pos = var_0.read<uint64_t >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(pos)};
}
/* ------- Function Definitions --------- */
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28 {
    allscale::utils::Vector<long, 2 > const& capture_idx;
    allscale::utils::Vector<long, 2 > const& capture_finest_layer_size;
    allscale::api::core::OutputStream& capture_out_stream;
    uint64_t const& capture_t;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2, double p3) const;
};

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18 {
    operator allscale_type_1496() const;
    ;
    ;
    double operator()(double const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42::operator()() const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_state_field);
    allscale::api::core::FileIOManager& var_2 = allscale::api::core::FileIOManager::getInstance();
    allscale::api::core::Entry var_3 = (allscale::api::core::Entry&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_2).createEntry((*this).capture_filename, allscale::api::core::Mode::Text);
    allscale::api::core::OutputStream var_4 = (allscale::api::core::OutputStream&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_2).openOutputStream((allscale::api::core::Entry const&)var_3);
    {
        for (int64_t var_5 = (int64_t)0; var_5 < (*this).capture_GridSize.x; ++var_5) {
            {
                for (int64_t var_6 = (int64_t)0; var_6 < (*this).capture_GridSize.y; ++var_6) {
                    {
                        const allscale::utils::Vector<long, 2 > var_7{(var_5), (var_6)};
                        const uint64_t var_8 = (*this).capture_Nt - (uint64_t)1;
                        allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > var_9;
                        var_9 = var_1.operator[](var_7);
                        while (var_9.getActiveLayer() != (uint32_t)amdadosLayerFine) {
                            var_9.refine(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18){});
                        };
                        const allscale::utils::Vector<long, 2 > var_10 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_9.getActiveLayerSize()};
                        var_9.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28){var_7, var_10, var_4, var_8});
                    };
                };
            };
        };
    };
    ((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_2).close(var_4);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_amdados_colon__colon_Sub2Glo(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, allscale::utils::Vector<long, 2 > const& var_2) {
    const int64_t var_3 = index.x;
    const int64_t var_4 = index.y;
    if (!((uint64_t)var_3 < (uint64_t)var_2.x && (uint64_t)var_4 < (uint64_t)var_2.y)) {
        insieme::utils::detail::LazyAssertion var_5 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{0 != 0};
        if (var_5) {
            std::cerr << "\nAssertion 0 of /root/work/allscale_amdados/code/app/include/amdados/app/geometry.h:61 failed!\n";
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_3 + var_1.x * var_2.x, var_4 + var_1.y * var_2.y};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_832_28::operator()(allscale::utils::Vector<long, 2 > const& index, double var_2) const {
    allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_Sub2Glo(index, (*this).capture_idx, (*this).capture_finest_layer_size);
    (*this).capture_out_stream << (*this).capture_t << " " << var_3.x << " " << var_3.y << " " << var_2 << "\n";
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18::operator allscale_type_1496() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18::operator()(double const& var_1) const {
    return var_1;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18_double_const_space_double_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_828_18::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_state_field);
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).capture_filename);
    var_1.write<allscale::utils::Vector<long, 2 > >((*this).capture_GridSize);
    var_1.write<uint64_t >((*this).capture_Nt);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > allscale_fun_2021(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 >*)(&var_0)).capture_state_field, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{hpx::util::get<1 >(var_0).capture_GridSize.x - (uint8_t)1, hpx::util::get<1 >(var_0).capture_GridSize.y - (uint8_t)1})), allscale::runtime::AccessMode::ReadOnly)};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2020(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(bool)false};
    if (var_1) {
        std::cerr << "\nAssertion failed in /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/async.h:70 - " << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return ((void)0, allscale::make_ready_treeture());
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2018(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return allscale_fun_2020(var_0);
}
struct __wi_allscale_wi_8_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_8_variant_0::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return allscale_fun_2018(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_8_variant_0::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return allscale_fun_2021(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_2028(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return (bool)true;
}
/* ------- Function Definitions --------- */
void allscale_fun_2030(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return;
}
/* ------- Function Definitions --------- */
void allscale_fun_2031(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(bool)false};
    if (var_1) {
        std::cerr << "\nAssertion failed in /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/async.h:70 - " << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_2026(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    if (allscale_fun_2028(var_0)) {
        return allscale_fun_2030(var_0);
    } else {
        return allscale_fun_2031(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_2024(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    allscale_fun_2026(var_0);
    return {};
}
struct __wi_allscale_wi_8_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_8_variant_1::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return allscale_fun_2024(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_8_variant_1::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return allscale_fun_2021(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_2032(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return !allscale_fun_2028(var_0);
}
struct __wi_allscale_wi_8_can_split {
    static bool call(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0);
};

bool __wi_allscale_wi_8_can_split::call(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_815_42 > const& var_0) {
    return allscale_fun_2032(var_0);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::load(allscale::utils::ArchiveReader& var_0) {
    allscale::treeture<void > var_1 = var_0.read<allscale::treeture<void > >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::treeture<void > >((*this).handle);
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::isValid() const {
    return (*this).handle.valid();
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::wait() {
    (*this).handle.wait();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference() : handle(((void)0, allscale::make_ready_treeture())) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& var_1, DummyCtorParamType var_2) : handle(var_1) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::detach() {
    return std::move((*this).handle);
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::isDone() const {
    return (*this).handle.get_future().is_ready();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& var_1) : handle(std::move(var_1)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference() {
    if ((*this).handle.valid()) {
        (*this).handle.wait();
    };
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative() : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference() { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(allscale::treeture<void >&& var_1) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(std::move(var_1)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& var_1, DummyCtorParamType var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(std::move(var_1)) { }
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference >(*(const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference*)this);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;
    uint64_t capture_steps;
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 capture_update;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 capture_observers;;
    void operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;
typedef struct IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;

struct IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_7_variant_0;
typedef struct __wi_allscale_wi_7_variant_0 __wi_allscale_wi_7_variant_0;

struct __wi_allscale_wi_7_name {
    static const char* name() { return "__wi_allscale_wi_7"; }
};

struct __wi_allscale_wi_7_can_split;
typedef struct __wi_allscale_wi_7_can_split __wi_allscale_wi_7_can_split;

struct __wi_allscale_wi_7_variant_1;
typedef struct __wi_allscale_wi_7_variant_1 __wi_allscale_wi_7_variant_1;

using __wi_allscale_wi_7_work = allscale::work_item_description<void, __wi_allscale_wi_7_name, allscale::do_serialization, __wi_allscale_wi_7_variant_0, __wi_allscale_wi_7_variant_1, __wi_allscale_wi_7_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1928(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_7_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::dependencies&& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 const& var_1) {
    return allscale::runtime::make_prec_operation<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 >){var_1}, &allscale_fun_1928)(std::move(var_0), (IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 const&)IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3{});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 const& var_0) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::after(), var_0);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::process_allscaleapiuserdataGridstructallscaleapiuserdataAdaptiveGridCelldoublestructallscaleapiuserdataCellConfig2structallscaleapiuserdatalayersstructallscaleapiuserdatalayer11structallscaleapiuserdatalayer88structallscaleapiuserdatalayer222__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_simulationcpp_765_9_pack_begin_allscaleapiuseralgorithmObserverlambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp78213lambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp79013lambdaatrootworkallscale_amdadoscodeappsrcscenario_simulationcpp79213_pack_end_returns_stencil_referencestructallscaleapiuseralgorithmimplementationcoarse_grained_iterative(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_1, uint64_t pos, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 const& var_3, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_4) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_1, pos, var_3, var_4})};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    uint64_t pos = var_0.read<uint64_t >();
    IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 var_3 = var_0.read<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 var_4 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >();
    return {std::move(var_1), std::move(pos), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_a);
    var_1.write<uint64_t >((*this).capture_steps);
    var_1.write<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 >((*this).capture_update);
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >((*this).capture_observers);
}
struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8;
typedef struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8;

struct IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 {
    uint64_t& capture_t;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;;
    void operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p2) const;
};

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 const& var_0) { }
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__pack_begin_pack_end_returns_void(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_1) {
    var_0.operator()(var_1);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_returns_void(var_0);
}
struct __wi_allscale_wi_4_can_split;
typedef struct __wi_allscale_wi_4_can_split __wi_allscale_wi_4_can_split;

struct __wi_allscale_wi_4_variant_0;
typedef struct __wi_allscale_wi_4_variant_0 __wi_allscale_wi_4_variant_0;

struct __wi_allscale_wi_4_name {
    static const char* name() { return "__wi_allscale_wi_4"; }
};

struct __wi_allscale_wi_4_variant_1;
typedef struct __wi_allscale_wi_4_variant_1 __wi_allscale_wi_4_variant_1;

using __wi_allscale_wi_4_work = allscale::work_item_description<void, __wi_allscale_wi_4_name, allscale::do_serialization, __wi_allscale_wi_4_variant_0, __wi_allscale_wi_4_variant_1, __wi_allscale_wi_4_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1766(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_4_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 >){var_1}, &allscale_fun_1766)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
struct __wi_allscale_wi_5_variant_0;
typedef struct __wi_allscale_wi_5_variant_0 __wi_allscale_wi_5_variant_0;

struct __wi_allscale_wi_5_name {
    static const char* name() { return "__wi_allscale_wi_5"; }
};

struct __wi_allscale_wi_5_variant_1;
typedef struct __wi_allscale_wi_5_variant_1 __wi_allscale_wi_5_variant_1;

struct __wi_allscale_wi_5_can_split;
typedef struct __wi_allscale_wi_5_can_split __wi_allscale_wi_5_can_split;

using __wi_allscale_wi_5_work = allscale::work_item_description<void, __wi_allscale_wi_5_name, allscale::do_serialization, __wi_allscale_wi_5_variant_0, __wi_allscale_wi_5_variant_1, __wi_allscale_wi_5_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1815(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_5_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >){var_1}, &allscale_fun_1815)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18::operator()() const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_2 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >(var_1.size());
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >* var_3 = (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >*)(&(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >* var_4 = &var_2;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0}, var_1.size(), INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)(*this).capture_a, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_2});
    {
        uint64_t var_5 = (uint64_t)0;
        while (var_5 < (*this).capture_steps) {
            {
                allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_6 = *var_3;
                allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_7 = *var_4;
                IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0}, allscale::runtime::DataItemManager::get(var_6).size(), INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8){var_5, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_765_9 const&)(*this).capture_update, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_6});
                IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__pack_begin_pack_end_returns_void(INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8){var_5, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_6}, (*this).capture_observers);
                std::swap(var_3, var_4);
            };
            var_5++;
        };
    };
    if (var_3 != (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >*)(&(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a)) {
        std::swap((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a, var_2);
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct __wi_allscale_wi_6_variant_0;
typedef struct __wi_allscale_wi_6_variant_0 __wi_allscale_wi_6_variant_0;

struct __wi_allscale_wi_6_can_split;
typedef struct __wi_allscale_wi_6_can_split __wi_allscale_wi_6_can_split;

struct __wi_allscale_wi_6_name {
    static const char* name() { return "__wi_allscale_wi_6"; }
};

struct __wi_allscale_wi_6_variant_1;
typedef struct __wi_allscale_wi_6_variant_1 __wi_allscale_wi_6_variant_1;

using __wi_allscale_wi_6_work = allscale::work_item_description<void, __wi_allscale_wi_6_name, allscale::do_serialization, __wi_allscale_wi_6_variant_0, __wi_allscale_wi_6_variant_1, __wi_allscale_wi_6_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1873(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_6_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 >){var_1}, &allscale_fun_1873)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_1, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{index, var_1}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8::operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_782_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_790_13__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_792_13_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_1) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    if (!var_1.isInterestedInTime.operator()((int64_t)(*this).capture_t)) {
        return;
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0}, var_2.size(), INS_INIT(IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10){(*this).capture_t, var_1, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)(*this).capture_b});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1877(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_6_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_6_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1875(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1877(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1878(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_6_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_6_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1878(var_0);
}
allscale::treeture<void > __wi_allscale_wi_6_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1875(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1884(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1893(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return !allscale_fun_1884(var_0);
}
struct __wi_allscale_wi_6_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
};

bool __wi_allscale_wi_6_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1893(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_1886(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1892(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1882(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    if (allscale_fun_1884(var_0)) {
        return allscale_fun_1886(var_0);
    } else {
        return allscale_fun_1892(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1880(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    allscale_fun_1882(var_0);
    return {};
}
struct __wi_allscale_wi_6_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_6_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1880(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_6_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1878(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1777(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1789(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return !allscale_fun_1777(var_0);
}
struct __wi_allscale_wi_4_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
};

bool __wi_allscale_wi_4_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1789(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1770(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_4_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_4_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1768(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1770(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1771(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_4_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_4_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1768(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_4_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1771(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_1779(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1785(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1775(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    if (allscale_fun_1777(var_0)) {
        return allscale_fun_1779(var_0);
    } else {
        return allscale_fun_1785(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1773(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    allscale_fun_1775(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > allscale_fun_1786(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 >*)(&var_0)).capture_b, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 >*)(&var_0)).capture_a, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_4_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_4_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1786(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_4_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1773(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1819(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_5_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_5_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1817(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1819(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1820(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_5_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_5_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1817(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_5_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1820(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > allscale_fun_1835(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >){allscale::runtime::createDataItemRequirement(hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_update.capture_observations, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadOnly), allscale::runtime::createDataItemRequirement(hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_a, allscale::api::core::merge(allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x + (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x + (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y + (int64_t)1}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y + (int64_t)1})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y - (int64_t)1}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y - (int64_t)1})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x - (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x - (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y}))), allscale::runtime::AccessMode::ReadOnly), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_update.capture_contexts, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_b, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
/* ------- Function Definitions --------- */
bool allscale_fun_1826(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_1834(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1828(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1824(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    if (allscale_fun_1826(var_0)) {
        return allscale_fun_1828(var_0);
    } else {
        return allscale_fun_1834(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1822(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    allscale_fun_1824(var_0);
    return {};
}
struct __wi_allscale_wi_5_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_5_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1822(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_5_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1835(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1838(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return !allscale_fun_1826(var_0);
}
struct __wi_allscale_wi_5_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
};

bool __wi_allscale_wi_5_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1838(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1932(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(bool)false};
    if (var_1) {
        std::cerr << "\nAssertion failed in /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/async.h:70 - " << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return ((void)0, allscale::make_ready_treeture());
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1930(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1932(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1933(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_7_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_7_variant_0::get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1933(var_0);
}
allscale::treeture<void > __wi_allscale_wi_7_variant_0::execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1930(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1939(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return (bool)true;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1943(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return !allscale_fun_1939(var_0);
}
struct __wi_allscale_wi_7_can_split {
    static bool call(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
};

bool __wi_allscale_wi_7_can_split::call(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1943(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_1941(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return;
}
/* ------- Function Definitions --------- */
void allscale_fun_1942(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(bool)false};
    if (var_1) {
        std::cerr << "\nAssertion failed in /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/async.h:70 - " << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1937(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    if (allscale_fun_1939(var_0)) {
        return allscale_fun_1941(var_0);
    } else {
        return allscale_fun_1942(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1935(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    allscale_fun_1937(var_0);
    return {};
}
struct __wi_allscale_wi_7_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_7_variant_1::execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1935(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_7_variant_1::get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_765_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_782_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_790_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_792_colon_13_rparen__gt__void_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1933(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20::operator allscale_type_579() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
int64_t IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20::operator()(double value, int64_t i) const {
    int64_t var_3 = (int64_t)floor(value * (double)i);
    var_3 = std::min(std::max(var_3, (int64_t)0), i - (int64_t)1);
    return var_3;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20_long_double_long_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_62_20::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37::load(allscale::utils::ArchiveReader& var_0) {
    int32_t var_1 = var_0.read<int32_t >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<int32_t >((*this).capture_NN);
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37_const_space_int_double_double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_93_37::operator()(double value) const {
    return value / (double)(*this).capture_NN;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::operator allscale_type_611() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
int64_t IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::operator()(int64_t const& var_1, int64_t const& var_2) const {
    return var_1 / var_2;
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_119_39::operator()() const {
    return (*this).capture_distrib.operator()((*this).capture_gen);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_64_comma__space_312_comma__space_156_comma__space_31_comma__space_13043109905998158313_comma__space_29_comma__space_6148914691236517205_comma__space_17_comma__space_8202884508482404352_comma__space_37_comma__space_18444473444759240704_comma__space_43_comma__space_6364136223846793005_gt__space__ampersand__double_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_118_39::operator()() const {
    return (*this).capture_distrib.operator()((*this).capture_gen);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool allscale_fun_1109(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1117(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return !allscale_fun_1109(var_0);
}
struct __wi_allscale_wi_2_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0);
};

bool __wi_allscale_wi_2_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return allscale_fun_1117(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_1111(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.forEach__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1112(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.forEach__Insieme__lambda_rootworkallscale_amdadoscodeappsrcscenario_benchmarkcpp_104_4_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1107(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    if (allscale_fun_1109(var_0)) {
        return allscale_fun_1111(var_0);
    } else {
        return allscale_fun_1112(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1105(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    allscale_fun_1107(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > allscale_fun_1113(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 >*)(&var_0)).capture_observations, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 >*)(&var_0)).capture_sensors, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_2_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > __wi_allscale_wi_2_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return allscale_fun_1113(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_2_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return allscale_fun_1105(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1100(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_2_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_2_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1098(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return allscale_fun_1100(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1103(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_2_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_2_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return allscale_fun_1103(var_0);
}
allscale::treeture<void > __wi_allscale_wi_2_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__const_space_long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_104_4 > const& var_0) {
    return allscale_fun_1098(var_0);
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13::operator()() const {
    allscale::api::core::FileIOManager& var_1 = allscale::api::core::FileIOManager::getInstance();
    allscale::api::core::Entry var_2 = (allscale::api::core::Entry&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_1).createEntry((*this).capture_filename, allscale::api::core::Mode::Text);
    allscale::api::core::OutputStream var_3 = (allscale::api::core::OutputStream&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_1).openOutputStream((allscale::api::core::Entry const&)var_2);
    const int32_t var_4 = std::max(IMP_amdados_colon__colon_Round((*this).capture_fraction * (double)(*this).capture_sub_problem_size), 1);
    std::vector<double, std::allocator<double > > var_5{((uint64_t)var_4), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_6{((uint64_t)var_4), (std::allocator<double >{})};
    {
        for (int32_t var_7 = 0; var_7 < (int32_t)(*this).capture_GridSize.x; ++var_7) {
            {
                for (int32_t var_8 = 0; var_8 < (int32_t)(*this).capture_GridSize.y; ++var_8) {
                    {
                        allscale::utils::Vector<long, 2 > var_9{((int64_t)var_7), ((int64_t)var_8)};
                        IMP_amdados_colon__colon_InitialGuess((*this).capture_conf, var_5, var_6, var_9);
                        IMP_amdados_colon__colon_OptimizePointLocations(var_5, var_6);
                        {
                            for (int32_t var_10 = 0; var_10 < var_4; ++var_10) {
                                {
                                    allscale::utils::Vector<long, 2 > var_11{(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ScaleCoord_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_99_1(var_5.operator[]((uint64_t)var_10), (int64_t)(*this).capture_Sx)), (IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ScaleCoord_slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_99_1(var_6.operator[]((uint64_t)var_10), (int64_t)(*this).capture_Sy))};
                                    allscale::utils::Vector<long, 2 > var_12 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_Sub2Glo(var_11, var_9, (*this).capture_subdomain_size);
                                    var_3 << var_12.x << " " << var_12.y << "\n";
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    ((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_1).close(var_3);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Configuration var_1 = var_0.read<IMP_amdados_colon__colon_Configuration >();
    double var_2 = var_0.read<double >();
    allscale::utils::Vector<long, 2 > var_3 = var_0.read<allscale::utils::Vector<long, 2 > >();
    allscale::utils::Vector<long, 2 > var_4 = var_0.read<allscale::utils::Vector<long, 2 > >();
    int32_t var_5 = var_0.read<int32_t >();
    int32_t var_6 = var_0.read<int32_t >();
    int32_t var_7 = var_0.read<int32_t >();
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_8 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6), std::move(var_7), std::move(var_8)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Configuration >((*this).capture_conf);
    var_1.write<double >((*this).capture_fraction);
    var_1.write<allscale::utils::Vector<long, 2 > >((*this).capture_GridSize);
    var_1.write<allscale::utils::Vector<long, 2 > >((*this).capture_subdomain_size);
    var_1.write<int32_t >((*this).capture_sub_problem_size);
    var_1.write<int32_t >((*this).capture_Sx);
    var_1.write<int32_t >((*this).capture_Sy);
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).capture_filename);
}
/* ------- Function Definitions --------- */
void allscale_fun_417(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return;
}
/* ------- Function Definitions --------- */
void allscale_fun_418(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(bool)false};
    if (var_1) {
        std::cerr << "\nAssertion failed in /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/async.h:70 - " << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return (void)0;
}
/* ------- Function Definitions --------- */
bool allscale_fun_415(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return (bool)true;
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    if (allscale_fun_415(var_0)) {
        return allscale_fun_417(var_0);
    } else {
        return allscale_fun_418(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_412(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    rec(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_410(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_1_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_1_variant_1::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return allscale_fun_412(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_1_variant_1::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return allscale_fun_410(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_407(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    insieme::utils::detail::LazyAssertion var_1 = (insieme::utils::detail::LazyAssertion const&)insieme::utils::detail::LazyAssertion{(bool)false};
    if (var_1) {
        std::cerr << "\nAssertion failed in /root/work/allscale_compiler/code/../api/code/api/include/allscale/api/user/algorithm/async.h:70 - " << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return ((void)0, allscale::make_ready_treeture());
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_405(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return allscale_fun_407(var_0);
}
struct __wi_allscale_wi_1_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_1_variant_0::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return allscale_fun_410(var_0);
}
allscale::treeture<void > __wi_allscale_wi_1_variant_0::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return allscale_fun_405(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_419(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return !allscale_fun_415(var_0);
}
struct __wi_allscale_wi_1_can_split {
    static bool call(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0);
};

bool __wi_allscale_wi_1_can_split::call(hpx::util::tuple<IMP_empty_IMLOC__slash_root_slash_work_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13_amdados_colon__colon_Configuration_const_space_double_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_int_const_space_int_const_space_int_std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__void_IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_202_13 > const& var_0) {
    return allscale_fun_419(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_2275(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_2284(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return !allscale_fun_2275(var_0);
}
struct __wi_allscale_wi_12_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0);
};

bool __wi_allscale_wi_12_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return allscale_fun_2284(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_2269(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2268(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_12_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_12_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2266(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return allscale_fun_2268(var_0);
}
struct __wi_allscale_wi_12_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_12_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return allscale_fun_2266(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_12_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return allscale_fun_2269(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_2283(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_2277(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_2273(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    if (allscale_fun_2275(var_0)) {
        return allscale_fun_2277(var_0);
    } else {
        return allscale_fun_2283(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_2271(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    allscale_fun_2273(var_0);
    return {};
}
struct __wi_allscale_wi_12_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_12_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return allscale_fun_2271(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_12_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_build_slash_app_404_9 > const& var_0) {
    return allscale_fun_2269(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2204(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_11_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_11_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2202(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return allscale_fun_2204(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_2205(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_11_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_11_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return allscale_fun_2205(var_0);
}
allscale::treeture<void > __wi_allscale_wi_11_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return allscale_fun_2202(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_2211(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_2223(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return !allscale_fun_2211(var_0);
}
struct __wi_allscale_wi_11_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0);
};

bool __wi_allscale_wi_11_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return allscale_fun_2223(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_2213(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_2219(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_2209(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    if (allscale_fun_2211(var_0)) {
        return allscale_fun_2213(var_0);
    } else {
        return allscale_fun_2219(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_2207(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    allscale_fun_2209(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<int32_t, 2u > > > allscale_fun_2220(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<int32_t, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<int32_t, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 >*)(&var_0)).capture_counters, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_11_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<int32_t, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_11_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return allscale_fun_2207(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<int32_t, 2u > > > __wi_allscale_wi_11_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_int_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_368_40 > const& var_0) {
    return allscale_fun_2220(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__float_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_375_23::operator()(allscale::api::core::impl::reference::InputStream::IStreamWrapper& var_1) const {
    var_1 >> (*this).capture_pt.x >> (*this).capture_pt.y >> (*this).capture_val;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19_int_space__ampersand__int_space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_360_19::operator()(allscale::api::core::impl::reference::InputStream::IStreamWrapper& var_1) const {
    var_1 >> (*this).capture_t >> (*this).capture_num;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool allscale_fun_2147(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_2159(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return !allscale_fun_2147(var_0);
}
struct __wi_allscale_wi_10_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0);
};

bool __wi_allscale_wi_10_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return allscale_fun_2159(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_2155(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_2149(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_2145(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    if (allscale_fun_2147(var_0)) {
        return allscale_fun_2149(var_0);
    } else {
        return allscale_fun_2155(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_2143(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    allscale_fun_2145(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > > allscale_fun_2156(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 >*)(&var_0)).capture_observations, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_10_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_10_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return allscale_fun_2143(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > > __wi_allscale_wi_10_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return allscale_fun_2156(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2140(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_10_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_10_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2138(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return allscale_fun_2140(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_2141(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_10_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_10_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return allscale_fun_2138(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_10_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_345_37 > const& var_0) {
    return allscale_fun_2141(var_0);
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__auto_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_291_19::operator()(allscale::api::core::impl::reference::InputStream::IStreamWrapper& var_1) const {
    var_1 >> (*this).capture_pt.x >> (*this).capture_pt.y;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool allscale_fun_2073(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_2085(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return !allscale_fun_2073(var_0);
}
struct __wi_allscale_wi_9_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0);
};

bool __wi_allscale_wi_9_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return allscale_fun_2085(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_2075(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_2081(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_2071(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    if (allscale_fun_2073(var_0)) {
        return allscale_fun_2075(var_0);
    } else {
        return allscale_fun_2081(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_2069(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    allscale_fun_2071(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > allscale_fun_2082(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 >*)(&var_0)).capture_sensors, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_9_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > __wi_allscale_wi_9_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return allscale_fun_2082(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_9_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return allscale_fun_2069(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_2067(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2066(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_9_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_9_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_2064(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return allscale_fun_2066(var_0);
}
struct __wi_allscale_wi_9_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_9_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return allscale_fun_2064(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_9_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_root_slash_work_slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_279_37 > const& var_0) {
    return allscale_fun_2067(var_0);
}
allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_2286(hpx::util::tuple<int32_t, char** > const& var_0) {
    return (bool)false;
}
struct __wi_main_can_split {
    static bool call(hpx::util::tuple<int32_t, char** > const& var_0);
};

bool __wi_main_can_split::call(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_2286(var_0);
}


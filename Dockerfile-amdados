# Building:
#       docker build --tag dev-allscale:compiler-env . -f Dockerfile-amdados
# Removing intermediate images and inactive containers afterwards:
#       docker images -q --filter dangling=true | xargs docker rmi
#       docker rm $(docker ps -qa --no-trunc --filter "status=exited")
# Extracting for sharing on another machine:
#       docker save dev-allscale:compiler-env > amdados-cpu-ubuntu.tar
# Loading on another machine:
#       docker load < amdados-cpu-ubuntu.tar
# Running with network, sharing of the directory "work" and
# full access to physical memory:
#       docker run -it --volume /home/albert/work:/root/work \
#                  --cap-add=NET_ADMIN --device=/dev/net/tun \
#                  --privileged --volume /dev/shm:/dev/shm \
#                  dev-images:tf-cpu-ubuntu /bin/bash

FROM debian:9.4

LABEL maintainer="Fearghal O'Donncha, feardonn@ie.ibm.com"

ENV LC_ALL=

# System package.
RUN apt-get update && apt-get -y upgrade && \
    apt-get install -y --no-install-recommends \
    build-essential gdb gfortran cmake make automake \
    unzip bzip2 curl wget rsync tmux htop \
    libfreetype6-dev libpng12.* libzmq3-dev libjpeg-dev libtiff[0-9]*-dev librsvg2-dev \
    pkg-config software-properties-common \
    libcurl.*-openssl-dev libpcre++-dev libxml2-dev \
    git mc vim nano make cmake gdb openssh-client openssh-server \
    binutils binutils-dev sshfs exuberant-ctags valgrind \
    libblas-dev liblapack-dev liblapacke-dev \
    libarpack2-dev libarpack2++-dev libopenblas-dev \
    libatlas-base-dev libsuperlu.*-dev libopenblas-dev \
    python3 python3-dev python3-pip \
    python3-numpy python3-scipy python3-matplotlib python3-setuptools \
    && \
    apt-get clean && apt-get autoremove && \
    apt-get update && \
    apt-get install -y --no-install-recommends groff && \ 
    rm -rf /var/lib/apt/lists/* \
    && \
    ssh-keygen -t rsa -f ${HOME}/.ssh/id_rsa -q -P "" \
    && \
    echo '' >> ~/.bashrc && \
    echo 'alias nano="nano -i -c --tabsize=4 --tabstospaces "' \
            >> ~/.bashrc && \
    echo 'alias py3="python3 "' \
            >> ~/.bashrc && \
    echo 'alias py3d="python3 -m pdb "' \
            >> ~/.bashrc && \
    echo 'PS1="\[\e[1;32m\]\u\[\e[1;36m\]@\[\e[1;31m\]\h\[\e[1;35m\]:\w\$\[\e[0;30m\] "' \
            >> ~/.bashrc

# Working directory.
WORKDIR /root/work

# Execute this command on start-up.
CMD ["/bin/bash"]




//-----------------------------------------------------------------------------
// Author    : Fearghal O'Donncha, feardonn@ie.ibm.com
//             Albert Akhriev, albert_akhriev@ie.ibm.com
// Copyright : IBM Research Ireland, 2017
//-----------------------------------------------------------------------------

#include <iostream>
#include "../include/debugging.h"

namespace amdados {

void PrintHelp()
{
    std::cout << std::endl << "(c) IBM Research Ireland, 2017-2018"
        << std::endl << std::endl
        << "Help:"
        << std::endl
        << "This program demonstrates solution to advection-diffusion problem"
        << std::endl
        << "with data assimilation. Two separate scenarios are available:"
        << std::endl
        << "1) auxiliary scenario 'sensors' (option: --scenario sensors)"
        << std::endl
        << "   is used to generate random sensors locations."
        << std::endl
        << "2) default scenario 'simulation' expects the file of sensor"
        << std::endl
        << "   locations and the file of observations generated by Python"
        << std::endl
        << "   solver in the output directory; this is the main scenario"
        << std::endl
        << "   where the advection-diffusion problem is being solved."
        << std::endl
        << "The same configuration file (default is 'amdados.conf') must be"
        << std::endl
        << "used by either scenario as well as Python scripts for consistency."
        << std::endl
        << "The option '--config path/to/config_file' allows different"
        << std::endl
        << "configuration files. See README.md for further details."
        << std::endl
        << "The option '--help' or '-h' prints this help."
        << std::endl << std::endl;
}

void ScenarioSimulation(const std::string &);
void ScenarioSensors(const std::string &);

} // namespace amdados

int main(int argc, char ** argv)
{
    MY_TRY
    {
        std::string scenario;
        std::string config_file = "amdados.conf";

        // Parse command-line options.
        for (int a = 0; a < argc; ++a) {
            std::string token = argv[a];
            if (token == "--scenario") {
                if (++a < argc) {
                    scenario = argv[a];
                }
            } else if (token == "--config") {
                if (++a < argc) {
                    config_file = argv[a];
                }
            } else if ((token == "--help") || (token == "-h")) {
                amdados::PrintHelp();
                return EXIT_SUCCESS;
            }
        }

        if (scenario == "sensors") {
            MY_INFO("%s", "SCENARIO: 'sensors'")
            amdados::ScenarioSensors(config_file);
        } else {
            MY_INFO("%s", "SCENARIO: 'simulation'")
            amdados::ScenarioSimulation(config_file);
        }
        return EXIT_SUCCESS;
    }
    MY_CATCH
    return EXIT_FAILURE;
}

